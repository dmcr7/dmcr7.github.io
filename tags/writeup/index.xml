<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Writeup on Hello World. I am Dito Prabowo</title>
    <link>/tags/writeup/</link>
    <description>Recent content in Writeup on Hello World. I am Dito Prabowo</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 20 Dec 2020 18:43:33 +0700</lastBuildDate>
    
	<atom:link href="/tags/writeup/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Writeup PWN Vulncon CTF 2020</title>
      <link>/posts/writeup-pwn-vulncon-ctf-2020/</link>
      <pubDate>Sun, 20 Dec 2020 18:43:33 +0700</pubDate>
      
      <guid>/posts/writeup-pwn-vulncon-ctf-2020/</guid>
      <description>Play Vulncon CTF 2020 with Bat Squad, we have got 3st Place. Here for PWN Writeups
warmup This was obvious ret2win function, since it had a function named overflowed which, once called, return the shell, then using the gdb we find the offset to the RIP was 24, then using pwntools, we get the shell and the flag.
 Since the remote system was the Ubuntu 18.04 or higher, using a ret we aligned the payload and profit.</description>
    </item>
    
    <item>
      <title>Writeup PWN Vulncon CTF 2020 the Good Old Time</title>
      <link>/posts/writeup-pwn-vulncon-ctf-2020-the-good-old-time/</link>
      <pubDate>Sun, 20 Dec 2020 15:55:50 +0700</pubDate>
      
      <guid>/posts/writeup-pwn-vulncon-ctf-2020-the-good-old-time/</guid>
      <description>Vulcon Chall pwn the Good Old Time, with use libc 2.32. It Has mitigation to write on __free_hook and __malloc_hookk
the Good Old Time Binary Security Arch: amd64-64-little RELRO: Full RELRO Stack: Canary found NX: NX enabled PIE: PIE enabled Vuln Main function Welcome! Deleted /bin/sh! [1] - create [2] - edit [3] - show [4] - delete [5] - exit Create function __int64 __usercall sub_141C@&amp;lt;rax&amp;gt;(__int64 a1@&amp;lt;rbp&amp;gt;) { int v1; // ST0C_4  __int64 v3; // [rsp-8h] [rbp-8h]  __asm { endbr64 } v3 = a1; v1 = sub_15DC(); sub_1140(&amp;#34;size: &amp;#34;); sub_11A0(&amp;#34;%d&amp;#34;, &amp;amp;dword_40E0[v1]); sub_1150(stdin); sub_1140(&amp;#34;input: &amp;#34;); qword_4060[v1] = sub_1180(dword_40E0[v1]); return sub_1170(qword_4060[v1]); } It looks like we can input size without limitation</description>
    </item>
    
    <item>
      <title>Writeup PWN Vulncon CTF 2020 Name</title>
      <link>/posts/writeup-pwn-vulncon-ctf-2020-name/</link>
      <pubDate>Sun, 20 Dec 2020 15:43:24 +0700</pubDate>
      
      <guid>/posts/writeup-pwn-vulncon-ctf-2020-name/</guid>
      <description>Vulcon Chall pwn name
Name Binary Security Arch: amd64-64-little RELRO: Partial RELRO Stack: No canary found NX: NX enabled PIE: No PIE (0x400000) Vuln &amp;amp; exploit __int64 __fastcall main(__int64 a1, char **a2, char **a3) { char s1; // [rsp+0h] [rbp-80h]  setvbuf(stdin, 0LL, 2, 0LL); setvbuf(stdout, 0LL, 2, 0LL); setvbuf(stderr, 0LL, 2, 0LL); alarm(0x14u); system(&amp;#34;echo -n &amp;#39;Enter your name: &amp;#39;&amp;#34;); gets(&amp;amp;s1, 0LL); if ( strcmp(&amp;amp;s1, &amp;#34;w3lc0m3&amp;#34;) ) exit(0); return 0LL; } We know gets not filter limit input, show we can overwrite the ret address and do system(“/bin/sh”).</description>
    </item>
    
    <item>
      <title>Writeup PWN Bsides Delhi CTF 2020</title>
      <link>/posts/writeup-pwn-bsides-delhi-ctf-2020/</link>
      <pubDate>Sun, 11 Oct 2020 06:32:57 +0700</pubDate>
      
      <guid>/posts/writeup-pwn-bsides-delhi-ctf-2020/</guid>
      <description>Play Bsides Delhi CTF with Heroes Cyber Security, we have got 1st Place. Here for PWN Writeups
Thanks for Attending Binary Security Arch: i386-32-little RELRO: Partial RELRO Stack: No canary found NX: NX enabled PIE: No PIE (0x8048000) Vuln int __cdecl main(int argc, const char **argv, const char **envp) { int v3; // ebp  int v5; // [esp-28h] [ebp-28h]  int v6; // [esp-4h] [ebp-4h]  __asm { endbr32 } v6 = v3; sub_80490C0(stdin, 0, 2, 0); sub_80490C0(stdout, 0, 2, 0); sub_80490C0(stderr, 0, 2, 0); sub_80490A0(&amp;#34;It&amp;#39;s been fun, but here we are at the final challenge!</description>
    </item>
    
  </channel>
</rss>